// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp;

import com.pulumi.cloudamqp.Utilities;
import com.pulumi.cloudamqp.inputs.GetAlarmArgs;
import com.pulumi.cloudamqp.inputs.GetAlarmPlainArgs;
import com.pulumi.cloudamqp.inputs.GetCredentialsArgs;
import com.pulumi.cloudamqp.inputs.GetCredentialsPlainArgs;
import com.pulumi.cloudamqp.inputs.GetInstanceArgs;
import com.pulumi.cloudamqp.inputs.GetInstancePlainArgs;
import com.pulumi.cloudamqp.inputs.GetNodesArgs;
import com.pulumi.cloudamqp.inputs.GetNodesPlainArgs;
import com.pulumi.cloudamqp.inputs.GetNotificationArgs;
import com.pulumi.cloudamqp.inputs.GetNotificationPlainArgs;
import com.pulumi.cloudamqp.inputs.GetPluginsArgs;
import com.pulumi.cloudamqp.inputs.GetPluginsCommunityArgs;
import com.pulumi.cloudamqp.inputs.GetPluginsCommunityPlainArgs;
import com.pulumi.cloudamqp.inputs.GetPluginsPlainArgs;
import com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;
import com.pulumi.cloudamqp.inputs.GetUpgradableVersionsPlainArgs;
import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoPlainArgs;
import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
import com.pulumi.cloudamqp.inputs.GetVpcInfoPlainArgs;
import com.pulumi.cloudamqp.outputs.GetAccountResult;
import com.pulumi.cloudamqp.outputs.GetAccountVpcsResult;
import com.pulumi.cloudamqp.outputs.GetAlarmResult;
import com.pulumi.cloudamqp.outputs.GetCredentialsResult;
import com.pulumi.cloudamqp.outputs.GetInstanceResult;
import com.pulumi.cloudamqp.outputs.GetNodesResult;
import com.pulumi.cloudamqp.outputs.GetNotificationResult;
import com.pulumi.cloudamqp.outputs.GetPluginsCommunityResult;
import com.pulumi.cloudamqp.outputs.GetPluginsResult;
import com.pulumi.cloudamqp.outputs.GetUpgradableVersionsResult;
import com.pulumi.cloudamqp.outputs.GetVpcGcpInfoResult;
import com.pulumi.cloudamqp.outputs.GetVpcInfoResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class CloudamqpFunctions {
    /**
     * Use this data source to retrieve basic information about all instances available for an account. Uses the included apikey in provider configuration, to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when instance identifier is unknown, while other attributes are known. E.g. find correct instance from `instance name`. Then iterate over instances to find the matching one and extract the instance identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instanceName = &#34;&lt;instance_name&gt;&#34;;
     * 
     *         final var instanceList = CloudamqpFunctions.getAccount();
     * 
     *         ctx.export(&#34;instanceId&#34;, &lt;nil&gt;);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`          - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `instances`   - An array of instances. Each `instances` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `instances` block consist of
     * 
     * * `id`      - The instance identifier.
     * * `name`    - The name of the instance.
     * * `plan`    - The subscription plan used for the instance.
     * * `region`  - The region were the instanece is located in.
     * * `tags`    - Optional tags set for the instance.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static Output<GetAccountResult> getAccount() {
        return getAccount(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve basic information about all instances available for an account. Uses the included apikey in provider configuration, to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when instance identifier is unknown, while other attributes are known. E.g. find correct instance from `instance name`. Then iterate over instances to find the matching one and extract the instance identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instanceName = &#34;&lt;instance_name&gt;&#34;;
     * 
     *         final var instanceList = CloudamqpFunctions.getAccount();
     * 
     *         ctx.export(&#34;instanceId&#34;, &lt;nil&gt;);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`          - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `instances`   - An array of instances. Each `instances` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `instances` block consist of
     * 
     * * `id`      - The instance identifier.
     * * `name`    - The name of the instance.
     * * `plan`    - The subscription plan used for the instance.
     * * `region`  - The region were the instanece is located in.
     * * `tags`    - Optional tags set for the instance.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain() {
        return getAccountPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve basic information about all instances available for an account. Uses the included apikey in provider configuration, to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when instance identifier is unknown, while other attributes are known. E.g. find correct instance from `instance name`. Then iterate over instances to find the matching one and extract the instance identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instanceName = &#34;&lt;instance_name&gt;&#34;;
     * 
     *         final var instanceList = CloudamqpFunctions.getAccount();
     * 
     *         ctx.export(&#34;instanceId&#34;, &lt;nil&gt;);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`          - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `instances`   - An array of instances. Each `instances` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `instances` block consist of
     * 
     * * `id`      - The instance identifier.
     * * `name`    - The name of the instance.
     * * `plan`    - The subscription plan used for the instance.
     * * `region`  - The region were the instanece is located in.
     * * `tags`    - Optional tags set for the instance.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static Output<GetAccountResult> getAccount(InvokeArgs args) {
        return getAccount(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve basic information about all instances available for an account. Uses the included apikey in provider configuration, to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when instance identifier is unknown, while other attributes are known. E.g. find correct instance from `instance name`. Then iterate over instances to find the matching one and extract the instance identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instanceName = &#34;&lt;instance_name&gt;&#34;;
     * 
     *         final var instanceList = CloudamqpFunctions.getAccount();
     * 
     *         ctx.export(&#34;instanceId&#34;, &lt;nil&gt;);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`          - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `instances`   - An array of instances. Each `instances` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `instances` block consist of
     * 
     * * `id`      - The instance identifier.
     * * `name`    - The name of the instance.
     * * `plan`    - The subscription plan used for the instance.
     * * `region`  - The region were the instanece is located in.
     * * `tags`    - Optional tags set for the instance.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(InvokeArgs args) {
        return getAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve basic information about all instances available for an account. Uses the included apikey in provider configuration, to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when instance identifier is unknown, while other attributes are known. E.g. find correct instance from `instance name`. Then iterate over instances to find the matching one and extract the instance identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instanceName = &#34;&lt;instance_name&gt;&#34;;
     * 
     *         final var instanceList = CloudamqpFunctions.getAccount();
     * 
     *         ctx.export(&#34;instanceId&#34;, &lt;nil&gt;);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`          - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `instances`   - An array of instances. Each `instances` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `instances` block consist of
     * 
     * * `id`      - The instance identifier.
     * * `name`    - The name of the instance.
     * * `plan`    - The subscription plan used for the instance.
     * * `region`  - The region were the instanece is located in.
     * * `tags`    - Optional tags set for the instance.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static Output<GetAccountResult> getAccount(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve basic information about all instances available for an account. Uses the included apikey in provider configuration, to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when instance identifier is unknown, while other attributes are known. E.g. find correct instance from `instance name`. Then iterate over instances to find the matching one and extract the instance identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instanceName = &#34;&lt;instance_name&gt;&#34;;
     * 
     *         final var instanceList = CloudamqpFunctions.getAccount();
     * 
     *         ctx.export(&#34;instanceId&#34;, &lt;nil&gt;);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`          - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `instances`   - An array of instances. Each `instances` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `instances` block consist of
     * 
     * * `id`      - The instance identifier.
     * * `name`    - The name of the instance.
     * * `plan`    - The subscription plan used for the instance.
     * * `region`  - The region were the instanece is located in.
     * * `tags`    - Optional tags set for the instance.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when the VPC identifier is unknown, while other attributes are known. E.g. find correct VPC using the `name` you gave your VPC. Then iterate over VPCs to find the matching one and extract the VPC identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVpcName = &#34;&lt;your VPC name&gt;&#34;;
     * 
     *         final var vpcList = CloudamqpFunctions.getAccountVpcs();
     * 
     *         ctx.export(&#34;vpcId&#34;, &#34;TODO: ForExpression&#34;[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `vpcs` block consist of
     * 
     * * `id`          - The VPC identifier.
     * * `name`        - The VPC instance name.
     * * `region`      - The region the VPC is hosted in.
     * * `subnet`      - The VPC subnet.
     * * `tags`        - Optional tags set for the VPC.
     * * `vpc_name`    - VPC name given when hosted at the cloud provider.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static Output<GetAccountVpcsResult> getAccountVpcs() {
        return getAccountVpcs(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when the VPC identifier is unknown, while other attributes are known. E.g. find correct VPC using the `name` you gave your VPC. Then iterate over VPCs to find the matching one and extract the VPC identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVpcName = &#34;&lt;your VPC name&gt;&#34;;
     * 
     *         final var vpcList = CloudamqpFunctions.getAccountVpcs();
     * 
     *         ctx.export(&#34;vpcId&#34;, &#34;TODO: ForExpression&#34;[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `vpcs` block consist of
     * 
     * * `id`          - The VPC identifier.
     * * `name`        - The VPC instance name.
     * * `region`      - The region the VPC is hosted in.
     * * `subnet`      - The VPC subnet.
     * * `tags`        - Optional tags set for the VPC.
     * * `vpc_name`    - VPC name given when hosted at the cloud provider.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static CompletableFuture<GetAccountVpcsResult> getAccountVpcsPlain() {
        return getAccountVpcsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when the VPC identifier is unknown, while other attributes are known. E.g. find correct VPC using the `name` you gave your VPC. Then iterate over VPCs to find the matching one and extract the VPC identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVpcName = &#34;&lt;your VPC name&gt;&#34;;
     * 
     *         final var vpcList = CloudamqpFunctions.getAccountVpcs();
     * 
     *         ctx.export(&#34;vpcId&#34;, &#34;TODO: ForExpression&#34;[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `vpcs` block consist of
     * 
     * * `id`          - The VPC identifier.
     * * `name`        - The VPC instance name.
     * * `region`      - The region the VPC is hosted in.
     * * `subnet`      - The VPC subnet.
     * * `tags`        - Optional tags set for the VPC.
     * * `vpc_name`    - VPC name given when hosted at the cloud provider.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static Output<GetAccountVpcsResult> getAccountVpcs(InvokeArgs args) {
        return getAccountVpcs(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when the VPC identifier is unknown, while other attributes are known. E.g. find correct VPC using the `name` you gave your VPC. Then iterate over VPCs to find the matching one and extract the VPC identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVpcName = &#34;&lt;your VPC name&gt;&#34;;
     * 
     *         final var vpcList = CloudamqpFunctions.getAccountVpcs();
     * 
     *         ctx.export(&#34;vpcId&#34;, &#34;TODO: ForExpression&#34;[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `vpcs` block consist of
     * 
     * * `id`          - The VPC identifier.
     * * `name`        - The VPC instance name.
     * * `region`      - The region the VPC is hosted in.
     * * `subnet`      - The VPC subnet.
     * * `tags`        - Optional tags set for the VPC.
     * * `vpc_name`    - VPC name given when hosted at the cloud provider.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static CompletableFuture<GetAccountVpcsResult> getAccountVpcsPlain(InvokeArgs args) {
        return getAccountVpcsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when the VPC identifier is unknown, while other attributes are known. E.g. find correct VPC using the `name` you gave your VPC. Then iterate over VPCs to find the matching one and extract the VPC identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVpcName = &#34;&lt;your VPC name&gt;&#34;;
     * 
     *         final var vpcList = CloudamqpFunctions.getAccountVpcs();
     * 
     *         ctx.export(&#34;vpcId&#34;, &#34;TODO: ForExpression&#34;[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `vpcs` block consist of
     * 
     * * `id`          - The VPC identifier.
     * * `name`        - The VPC instance name.
     * * `region`      - The region the VPC is hosted in.
     * * `subnet`      - The VPC subnet.
     * * `tags`        - Optional tags set for the VPC.
     * * `vpc_name`    - VPC name given when hosted at the cloud provider.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static Output<GetAccountVpcsResult> getAccountVpcs(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getAccountVpcs:getAccountVpcs", TypeShape.of(GetAccountVpcsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.
     * 
     * ## Example Usage
     * 
     * Can be used in other resources/data sources when the VPC identifier is unknown, while other attributes are known. E.g. find correct VPC using the `name` you gave your VPC. Then iterate over VPCs to find the matching one and extract the VPC identifier.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVpcName = &#34;&lt;your VPC name&gt;&#34;;
     * 
     *         final var vpcList = CloudamqpFunctions.getAccountVpcs();
     * 
     *         ctx.export(&#34;vpcId&#34;, &#34;TODO: ForExpression&#34;[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.
     * * `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `vpcs` block consist of
     * 
     * * `id`          - The VPC identifier.
     * * `name`        - The VPC instance name.
     * * `region`      - The region the VPC is hosted in.
     * * `subnet`      - The VPC subnet.
     * * `tags`        - Optional tags set for the VPC.
     * * `vpc_name`    - VPC name given when hosted at the cloud provider.
     * 
     * ## Dependency
     * 
     * This data source depends on apikey set in the provider configuration.
     * 
     */
    public static CompletableFuture<GetAccountVpcsResult> getAccountVpcsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getAccountVpcs:getAccountVpcs", TypeShape.of(GetAccountVpcsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about default or created alarms. Either use `alarm_id` or `type` to retrieve the alarm.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetAlarmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultCpuAlarm = CloudamqpFunctions.getAlarm(GetAlarmArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .type(&#34;cpu&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `enabled`             - Enable/disable status of the alarm.
     * * `value_threshold`     - The value threshold that triggers the alarm.
     * * `reminder_interval`   - The reminder interval (in seconds) to resend the alarm if not resolved. Set to 0 for no reminders.
     * * `time_threshold`      - The time interval (in seconds) the `value_threshold` should be active before trigger an alarm.
     * * `queue_regex`         - Regular expression for which queue to check.
     * * `vhost_regex`         - Regular expression for which vhost to check
     * * `recipients`          - Identifier for recipient to be notified.
     * * `message_type`        - Message type `(total, unacked, ready)` used by queue alarm type.
     * 
     * Specific attribute for `disk` alarm
     * 
     * * `value_calculation`   - Disk value threshold calculation, `(fixed, percentage)` of disk space remaining.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * ## Alarm types
     * 
     * `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
     * 
     */
    public static Output<GetAlarmResult> getAlarm(GetAlarmArgs args) {
        return getAlarm(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about default or created alarms. Either use `alarm_id` or `type` to retrieve the alarm.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetAlarmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultCpuAlarm = CloudamqpFunctions.getAlarm(GetAlarmArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .type(&#34;cpu&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `enabled`             - Enable/disable status of the alarm.
     * * `value_threshold`     - The value threshold that triggers the alarm.
     * * `reminder_interval`   - The reminder interval (in seconds) to resend the alarm if not resolved. Set to 0 for no reminders.
     * * `time_threshold`      - The time interval (in seconds) the `value_threshold` should be active before trigger an alarm.
     * * `queue_regex`         - Regular expression for which queue to check.
     * * `vhost_regex`         - Regular expression for which vhost to check
     * * `recipients`          - Identifier for recipient to be notified.
     * * `message_type`        - Message type `(total, unacked, ready)` used by queue alarm type.
     * 
     * Specific attribute for `disk` alarm
     * 
     * * `value_calculation`   - Disk value threshold calculation, `(fixed, percentage)` of disk space remaining.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * ## Alarm types
     * 
     * `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
     * 
     */
    public static CompletableFuture<GetAlarmResult> getAlarmPlain(GetAlarmPlainArgs args) {
        return getAlarmPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about default or created alarms. Either use `alarm_id` or `type` to retrieve the alarm.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetAlarmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultCpuAlarm = CloudamqpFunctions.getAlarm(GetAlarmArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .type(&#34;cpu&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `enabled`             - Enable/disable status of the alarm.
     * * `value_threshold`     - The value threshold that triggers the alarm.
     * * `reminder_interval`   - The reminder interval (in seconds) to resend the alarm if not resolved. Set to 0 for no reminders.
     * * `time_threshold`      - The time interval (in seconds) the `value_threshold` should be active before trigger an alarm.
     * * `queue_regex`         - Regular expression for which queue to check.
     * * `vhost_regex`         - Regular expression for which vhost to check
     * * `recipients`          - Identifier for recipient to be notified.
     * * `message_type`        - Message type `(total, unacked, ready)` used by queue alarm type.
     * 
     * Specific attribute for `disk` alarm
     * 
     * * `value_calculation`   - Disk value threshold calculation, `(fixed, percentage)` of disk space remaining.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * ## Alarm types
     * 
     * `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
     * 
     */
    public static Output<GetAlarmResult> getAlarm(GetAlarmArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getAlarm:getAlarm", TypeShape.of(GetAlarmResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about default or created alarms. Either use `alarm_id` or `type` to retrieve the alarm.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetAlarmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultCpuAlarm = CloudamqpFunctions.getAlarm(GetAlarmArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .type(&#34;cpu&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `enabled`             - Enable/disable status of the alarm.
     * * `value_threshold`     - The value threshold that triggers the alarm.
     * * `reminder_interval`   - The reminder interval (in seconds) to resend the alarm if not resolved. Set to 0 for no reminders.
     * * `time_threshold`      - The time interval (in seconds) the `value_threshold` should be active before trigger an alarm.
     * * `queue_regex`         - Regular expression for which queue to check.
     * * `vhost_regex`         - Regular expression for which vhost to check
     * * `recipients`          - Identifier for recipient to be notified.
     * * `message_type`        - Message type `(total, unacked, ready)` used by queue alarm type.
     * 
     * Specific attribute for `disk` alarm
     * 
     * * `value_calculation`   - Disk value threshold calculation, `(fixed, percentage)` of disk space remaining.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * ## Alarm types
     * 
     * `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
     * 
     */
    public static CompletableFuture<GetAlarmResult> getAlarmPlain(GetAlarmPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getAlarm:getAlarm", TypeShape.of(GetAlarmResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about the credentials of the configured user in Rabbit MQ. Information is extracted from `cloudamqp_instance.instance.url`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetCredentialsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var credentials = CloudamqpFunctions.getCredentials(GetCredentialsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed.
     * 
     * * `id`          - The identifier for this data source.
     * * `username`    - (Sensitive) The username for the configured user in Rabbit MQ.
     * * `password`    - (Sensitive) The password used by the `username`.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetCredentialsResult> getCredentials(GetCredentialsArgs args) {
        return getCredentials(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about the credentials of the configured user in Rabbit MQ. Information is extracted from `cloudamqp_instance.instance.url`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetCredentialsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var credentials = CloudamqpFunctions.getCredentials(GetCredentialsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed.
     * 
     * * `id`          - The identifier for this data source.
     * * `username`    - (Sensitive) The username for the configured user in Rabbit MQ.
     * * `password`    - (Sensitive) The password used by the `username`.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetCredentialsResult> getCredentialsPlain(GetCredentialsPlainArgs args) {
        return getCredentialsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about the credentials of the configured user in Rabbit MQ. Information is extracted from `cloudamqp_instance.instance.url`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetCredentialsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var credentials = CloudamqpFunctions.getCredentials(GetCredentialsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed.
     * 
     * * `id`          - The identifier for this data source.
     * * `username`    - (Sensitive) The username for the configured user in Rabbit MQ.
     * * `password`    - (Sensitive) The password used by the `username`.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetCredentialsResult> getCredentials(GetCredentialsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getCredentials:getCredentials", TypeShape.of(GetCredentialsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about the credentials of the configured user in Rabbit MQ. Information is extracted from `cloudamqp_instance.instance.url`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetCredentialsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var credentials = CloudamqpFunctions.getCredentials(GetCredentialsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed.
     * 
     * * `id`          - The identifier for this data source.
     * * `username`    - (Sensitive) The username for the configured user in Rabbit MQ.
     * * `password`    - (Sensitive) The password used by the `username`.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetCredentialsResult> getCredentialsPlain(GetCredentialsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getCredentials:getCredentials", TypeShape.of(GetCredentialsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about an already created CloudAMQP instance. In order to retrieve the correct information, the CoudAMQP instance identifier is needed.
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args) {
        return getInstance(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about an already created CloudAMQP instance. In order to retrieve the correct information, the CoudAMQP instance identifier is needed.
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args) {
        return getInstancePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about an already created CloudAMQP instance. In order to retrieve the correct information, the CoudAMQP instance identifier is needed.
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about an already created CloudAMQP instance. In order to retrieve the correct information, the CoudAMQP instance identifier is needed.
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about the node(s) created by CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetNodesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`    - The identifier for this resource.
     * * `nodes` - An array of node information. Each `nodes` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `nodes` block consist of
     * 
     * * `hostname`              - External hostname assigned to the node.
     * * `name`                  - Name of the node.
     * * `running`               - Is the node running?
     * * `rabbitmq_version`      - Currently configured Rabbit MQ version on the node.
     * * `erlang_version`        - Currently used Erlang version on the node.
     * * `hipe`                  - Enable or disable High-performance Erlang.
     * * `configured`            - Is the node configured?
     * * `disk_size`             - Subscription plan disk size
     * * `additional_disk_size`  - Additional added disk size
     * 
     * ***Note:*** *Total disk size = disk_size + additional_disk_size*
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetNodesResult> getNodes(GetNodesArgs args) {
        return getNodes(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about the node(s) created by CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetNodesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`    - The identifier for this resource.
     * * `nodes` - An array of node information. Each `nodes` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `nodes` block consist of
     * 
     * * `hostname`              - External hostname assigned to the node.
     * * `name`                  - Name of the node.
     * * `running`               - Is the node running?
     * * `rabbitmq_version`      - Currently configured Rabbit MQ version on the node.
     * * `erlang_version`        - Currently used Erlang version on the node.
     * * `hipe`                  - Enable or disable High-performance Erlang.
     * * `configured`            - Is the node configured?
     * * `disk_size`             - Subscription plan disk size
     * * `additional_disk_size`  - Additional added disk size
     * 
     * ***Note:*** *Total disk size = disk_size + additional_disk_size*
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetNodesResult> getNodesPlain(GetNodesPlainArgs args) {
        return getNodesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about the node(s) created by CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetNodesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`    - The identifier for this resource.
     * * `nodes` - An array of node information. Each `nodes` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `nodes` block consist of
     * 
     * * `hostname`              - External hostname assigned to the node.
     * * `name`                  - Name of the node.
     * * `running`               - Is the node running?
     * * `rabbitmq_version`      - Currently configured Rabbit MQ version on the node.
     * * `erlang_version`        - Currently used Erlang version on the node.
     * * `hipe`                  - Enable or disable High-performance Erlang.
     * * `configured`            - Is the node configured?
     * * `disk_size`             - Subscription plan disk size
     * * `additional_disk_size`  - Additional added disk size
     * 
     * ***Note:*** *Total disk size = disk_size + additional_disk_size*
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetNodesResult> getNodes(GetNodesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getNodes:getNodes", TypeShape.of(GetNodesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about the node(s) created by CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetNodesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`    - The identifier for this resource.
     * * `nodes` - An array of node information. Each `nodes` block consists of the fields documented below.
     * 
     * ***
     * 
     * The `nodes` block consist of
     * 
     * * `hostname`              - External hostname assigned to the node.
     * * `name`                  - Name of the node.
     * * `running`               - Is the node running?
     * * `rabbitmq_version`      - Currently configured Rabbit MQ version on the node.
     * * `erlang_version`        - Currently used Erlang version on the node.
     * * `hipe`                  - Enable or disable High-performance Erlang.
     * * `configured`            - Is the node configured?
     * * `disk_size`             - Subscription plan disk size
     * * `additional_disk_size`  - Additional added disk size
     * 
     * ***Note:*** *Total disk size = disk_size + additional_disk_size*
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetNodesResult> getNodesPlain(GetNodesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getNodes:getNodes", TypeShape.of(GetNodesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about default or created recipients. The recipient will receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use `recipient_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetNotificationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultRecipient = CloudamqpFunctions.getNotification(GetNotificationArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`    - The identifier for this resource.
     * * `type`  - The type of the recipient.
     * * `value` - The notification endpoint, where to send the notification.
     * * `options`- Options argument (e.g. `rk` used for VictorOps routing key).
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetNotificationResult> getNotification(GetNotificationArgs args) {
        return getNotification(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about default or created recipients. The recipient will receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use `recipient_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetNotificationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultRecipient = CloudamqpFunctions.getNotification(GetNotificationArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`    - The identifier for this resource.
     * * `type`  - The type of the recipient.
     * * `value` - The notification endpoint, where to send the notification.
     * * `options`- Options argument (e.g. `rk` used for VictorOps routing key).
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetNotificationResult> getNotificationPlain(GetNotificationPlainArgs args) {
        return getNotificationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about default or created recipients. The recipient will receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use `recipient_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetNotificationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultRecipient = CloudamqpFunctions.getNotification(GetNotificationArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`    - The identifier for this resource.
     * * `type`  - The type of the recipient.
     * * `value` - The notification endpoint, where to send the notification.
     * * `options`- Options argument (e.g. `rk` used for VictorOps routing key).
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetNotificationResult> getNotification(GetNotificationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getNotification:getNotification", TypeShape.of(GetNotificationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about default or created recipients. The recipient will receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use `recipient_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetNotificationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultRecipient = CloudamqpFunctions.getNotification(GetNotificationArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`    - The identifier for this resource.
     * * `type`  - The type of the recipient.
     * * `value` - The notification endpoint, where to send the notification.
     * * `options`- Options argument (e.g. `rk` used for VictorOps routing key).
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetNotificationResult> getNotificationPlain(GetNotificationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getNotification:getNotification", TypeShape.of(GetNotificationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about installed and available plugins for the CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetPluginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var plugins = CloudamqpFunctions.getPlugins(GetPluginsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this resource.
     * * `plugins` - An array of plugins. Each `plugins` block consists of the fields documented below.
     * * `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information
     *   about plugins. Default set to 10 seconds. *Available from v1.29.0*
     * * `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting
     *   information about plugins. Default set to 1800 seconds. *Available from v1.29.0*
     * 
     * ***
     * 
     * The `plugins` block consist of
     * 
     * * `name`        - The type of the recipient.
     * * `version`     - Rabbit MQ version that the plugins are shipped with.
     * * `description` - Description of what the plugin does.
     * * `enabled`     - Enable or disable information for the plugin.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetPluginsResult> getPlugins(GetPluginsArgs args) {
        return getPlugins(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about installed and available plugins for the CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetPluginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var plugins = CloudamqpFunctions.getPlugins(GetPluginsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this resource.
     * * `plugins` - An array of plugins. Each `plugins` block consists of the fields documented below.
     * * `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information
     *   about plugins. Default set to 10 seconds. *Available from v1.29.0*
     * * `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting
     *   information about plugins. Default set to 1800 seconds. *Available from v1.29.0*
     * 
     * ***
     * 
     * The `plugins` block consist of
     * 
     * * `name`        - The type of the recipient.
     * * `version`     - Rabbit MQ version that the plugins are shipped with.
     * * `description` - Description of what the plugin does.
     * * `enabled`     - Enable or disable information for the plugin.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetPluginsResult> getPluginsPlain(GetPluginsPlainArgs args) {
        return getPluginsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about installed and available plugins for the CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetPluginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var plugins = CloudamqpFunctions.getPlugins(GetPluginsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this resource.
     * * `plugins` - An array of plugins. Each `plugins` block consists of the fields documented below.
     * * `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information
     *   about plugins. Default set to 10 seconds. *Available from v1.29.0*
     * * `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting
     *   information about plugins. Default set to 1800 seconds. *Available from v1.29.0*
     * 
     * ***
     * 
     * The `plugins` block consist of
     * 
     * * `name`        - The type of the recipient.
     * * `version`     - Rabbit MQ version that the plugins are shipped with.
     * * `description` - Description of what the plugin does.
     * * `enabled`     - Enable or disable information for the plugin.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetPluginsResult> getPlugins(GetPluginsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getPlugins:getPlugins", TypeShape.of(GetPluginsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about installed and available plugins for the CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetPluginsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var plugins = CloudamqpFunctions.getPlugins(GetPluginsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this resource.
     * * `plugins` - An array of plugins. Each `plugins` block consists of the fields documented below.
     * * `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information
     *   about plugins. Default set to 10 seconds. *Available from v1.29.0*
     * * `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting
     *   information about plugins. Default set to 1800 seconds. *Available from v1.29.0*
     * 
     * ***
     * 
     * The `plugins` block consist of
     * 
     * * `name`        - The type of the recipient.
     * * `version`     - Rabbit MQ version that the plugins are shipped with.
     * * `description` - Description of what the plugin does.
     * * `enabled`     - Enable or disable information for the plugin.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetPluginsResult> getPluginsPlain(GetPluginsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getPlugins:getPlugins", TypeShape.of(GetPluginsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about available community plugins for the CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetPluginsCommunityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var communitPlugins = CloudamqpFunctions.getPluginsCommunity(GetPluginsCommunityArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this resource.
     * * `plugins` - An array of community plugins. Each `plugins` block consists of the fields documented below.
     * * `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information
     *   about community plugins. Default set to 10 seconds. *Available from v1.29.0*
     * * `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting
     *   information about community plugins. Default set to 1800 seconds. *Available from v1.29.0*
     * 
     * ***
     * 
     * The `plugins` block consists of
     * 
     * * `name`        - The type of the recipient.
     * * `require`     - Min. required Rabbit MQ version to be used.
     * * `description` - Description of what the plugin does.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetPluginsCommunityResult> getPluginsCommunity(GetPluginsCommunityArgs args) {
        return getPluginsCommunity(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about available community plugins for the CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetPluginsCommunityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var communitPlugins = CloudamqpFunctions.getPluginsCommunity(GetPluginsCommunityArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this resource.
     * * `plugins` - An array of community plugins. Each `plugins` block consists of the fields documented below.
     * * `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information
     *   about community plugins. Default set to 10 seconds. *Available from v1.29.0*
     * * `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting
     *   information about community plugins. Default set to 1800 seconds. *Available from v1.29.0*
     * 
     * ***
     * 
     * The `plugins` block consists of
     * 
     * * `name`        - The type of the recipient.
     * * `require`     - Min. required Rabbit MQ version to be used.
     * * `description` - Description of what the plugin does.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetPluginsCommunityResult> getPluginsCommunityPlain(GetPluginsCommunityPlainArgs args) {
        return getPluginsCommunityPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about available community plugins for the CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetPluginsCommunityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var communitPlugins = CloudamqpFunctions.getPluginsCommunity(GetPluginsCommunityArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this resource.
     * * `plugins` - An array of community plugins. Each `plugins` block consists of the fields documented below.
     * * `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information
     *   about community plugins. Default set to 10 seconds. *Available from v1.29.0*
     * * `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting
     *   information about community plugins. Default set to 1800 seconds. *Available from v1.29.0*
     * 
     * ***
     * 
     * The `plugins` block consists of
     * 
     * * `name`        - The type of the recipient.
     * * `require`     - Min. required Rabbit MQ version to be used.
     * * `description` - Description of what the plugin does.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetPluginsCommunityResult> getPluginsCommunity(GetPluginsCommunityArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getPluginsCommunity:getPluginsCommunity", TypeShape.of(GetPluginsCommunityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about available community plugins for the CloudAMQP instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetPluginsCommunityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var communitPlugins = CloudamqpFunctions.getPluginsCommunity(GetPluginsCommunityArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`      - The identifier for this resource.
     * * `plugins` - An array of community plugins. Each `plugins` block consists of the fields documented below.
     * * `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information
     *   about community plugins. Default set to 10 seconds. *Available from v1.29.0*
     * * `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting
     *   information about community plugins. Default set to 1800 seconds. *Available from v1.29.0*
     * 
     * ***
     * 
     * The `plugins` block consists of
     * 
     * * `name`        - The type of the recipient.
     * * `require`     - Min. required Rabbit MQ version to be used.
     * * `description` - Description of what the plugin does.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetPluginsCommunityResult> getPluginsCommunityPlain(GetPluginsCommunityPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getPluginsCommunity:getPluginsCommunity", TypeShape.of(GetPluginsCommunityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about possible upgradable versions for RabbitMQ and Erlang.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var versions = CloudamqpFunctions.getUpgradableVersions(GetUpgradableVersionsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `new_rabbitmq_version`  - Possible upgradable version for RabbitMQ.
     * * `new_erlang_version`    - Possible upgradable version for Erlang.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetUpgradableVersionsResult> getUpgradableVersions(GetUpgradableVersionsArgs args) {
        return getUpgradableVersions(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about possible upgradable versions for RabbitMQ and Erlang.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var versions = CloudamqpFunctions.getUpgradableVersions(GetUpgradableVersionsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `new_rabbitmq_version`  - Possible upgradable version for RabbitMQ.
     * * `new_erlang_version`    - Possible upgradable version for Erlang.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetUpgradableVersionsResult> getUpgradableVersionsPlain(GetUpgradableVersionsPlainArgs args) {
        return getUpgradableVersionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about possible upgradable versions for RabbitMQ and Erlang.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var versions = CloudamqpFunctions.getUpgradableVersions(GetUpgradableVersionsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `new_rabbitmq_version`  - Possible upgradable version for RabbitMQ.
     * * `new_erlang_version`    - Possible upgradable version for Erlang.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetUpgradableVersionsResult> getUpgradableVersions(GetUpgradableVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getUpgradableVersions:getUpgradableVersions", TypeShape.of(GetUpgradableVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about possible upgradable versions for RabbitMQ and Erlang.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var versions = CloudamqpFunctions.getUpgradableVersions(GetUpgradableVersionsArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `new_rabbitmq_version`  - Possible upgradable version for RabbitMQ.
     * * `new_erlang_version`    - Possible upgradable version for Erlang.
     * 
     * ## Dependency
     * 
     * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetUpgradableVersionsResult> getUpgradableVersionsPlain(GetUpgradableVersionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getUpgradableVersions:getUpgradableVersions", TypeShape.of(GetUpgradableVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance hosted in GCP.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the VPC.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `network`             - VPC network uri.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetVpcGcpInfoResult> getVpcGcpInfo() {
        return getVpcGcpInfo(GetVpcGcpInfoArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance hosted in GCP.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the VPC.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `network`             - VPC network uri.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetVpcGcpInfoResult> getVpcGcpInfoPlain() {
        return getVpcGcpInfoPlain(GetVpcGcpInfoPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance hosted in GCP.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the VPC.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `network`             - VPC network uri.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetVpcGcpInfoResult> getVpcGcpInfo(GetVpcGcpInfoArgs args) {
        return getVpcGcpInfo(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance hosted in GCP.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the VPC.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `network`             - VPC network uri.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetVpcGcpInfoResult> getVpcGcpInfoPlain(GetVpcGcpInfoPlainArgs args) {
        return getVpcGcpInfoPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance hosted in GCP.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the VPC.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `network`             - VPC network uri.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetVpcGcpInfoResult> getVpcGcpInfo(GetVpcGcpInfoArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getVpcGcpInfo:getVpcGcpInfo", TypeShape.of(GetVpcGcpInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance hosted in GCP.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the VPC.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `network`             - VPC network uri.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetVpcGcpInfoResult> getVpcGcpInfoPlain(GetVpcGcpInfoPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getVpcGcpInfo:getVpcGcpInfo", TypeShape.of(GetVpcGcpInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance.
     * 
     * Only available for CloudAMQP instances hosted in AWS.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the CloudAMQP instance.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `owner_id`            - AWS account identifier.
     * * `security_group_id`   - AWS security group identifier.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetVpcInfoResult> getVpcInfo() {
        return getVpcInfo(GetVpcInfoArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance.
     * 
     * Only available for CloudAMQP instances hosted in AWS.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the CloudAMQP instance.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `owner_id`            - AWS account identifier.
     * * `security_group_id`   - AWS security group identifier.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetVpcInfoResult> getVpcInfoPlain() {
        return getVpcInfoPlain(GetVpcInfoPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance.
     * 
     * Only available for CloudAMQP instances hosted in AWS.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the CloudAMQP instance.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `owner_id`            - AWS account identifier.
     * * `security_group_id`   - AWS security group identifier.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetVpcInfoResult> getVpcInfo(GetVpcInfoArgs args) {
        return getVpcInfo(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance.
     * 
     * Only available for CloudAMQP instances hosted in AWS.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the CloudAMQP instance.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `owner_id`            - AWS account identifier.
     * * `security_group_id`   - AWS security group identifier.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetVpcInfoResult> getVpcInfoPlain(GetVpcInfoPlainArgs args) {
        return getVpcInfoPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance.
     * 
     * Only available for CloudAMQP instances hosted in AWS.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the CloudAMQP instance.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `owner_id`            - AWS account identifier.
     * * `security_group_id`   - AWS security group identifier.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static Output<GetVpcInfoResult> getVpcInfo(GetVpcInfoArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("cloudamqp:index/getVpcInfo:getVpcInfo", TypeShape.of(GetVpcInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve information about VPC for a CloudAMQP instance.
     * 
     * Only available for CloudAMQP instances hosted in AWS.
     * 
     * ## Example Usage
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering pre v1.16.0&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .instanceId(cloudamqp_instance.instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * &lt;details&gt;
     *   &lt;summary&gt;
     *     &lt;b&gt;
     *       &lt;i&gt;AWS VPC peering post v1.16.0 (Managed VPC)&lt;/i&gt;
     *     &lt;/b&gt;
     *   &lt;/summary&gt;
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.cloudamqp.CloudamqpFunctions;
     * import com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()
     *             .vpcId(cloudamqp_vpc.vpc().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * &lt;/details&gt;
     * 
     * ## Attributes reference
     * 
     * All attributes reference are computed
     * 
     * * `id`                  - The identifier for this resource.
     * * `name`                - The name of the CloudAMQP instance.
     * * `vpc_subnet`          - Dedicated VPC subnet.
     * * `owner_id`            - AWS account identifier.
     * * `security_group_id`   - AWS security group identifier.
     * 
     * ## Dependency
     * 
     * *Pre v1.16.0*
     * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
     * 
     * *Post v1.16.0*
     * This resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.
     * 
     */
    public static CompletableFuture<GetVpcInfoResult> getVpcInfoPlain(GetVpcInfoPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("cloudamqp:index/getVpcInfo:getVpcInfo", TypeShape.of(GetVpcInfoResult.class), args, Utilities.withVersion(options));
    }
}
