// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivatelinkAwsState extends com.pulumi.resources.ResourceArgs {

    public static final PrivatelinkAwsState Empty = new PrivatelinkAwsState();

    /**
     * Covering availability zones used when creating an Endpoint from other VPC.
     * 
     */
    @Import(name="activeZones")
    private @Nullable Output<List<String>> activeZones;

    /**
     * @return Covering availability zones used when creating an Endpoint from other VPC.
     * 
     */
    public Optional<Output<List<String>>> activeZones() {
        return Optional.ofNullable(this.activeZones);
    }

    /**
     * Allowed principals to access the endpoint service.
     * 
     */
    @Import(name="allowedPrincipals")
    private @Nullable Output<List<String>> allowedPrincipals;

    /**
     * @return Allowed principals to access the endpoint service.
     * 
     */
    public Optional<Output<List<String>>> allowedPrincipals() {
        return Optional.ofNullable(this.allowedPrincipals);
    }

    /**
     * The CloudAMQP instance identifier.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<Integer> instanceId;

    /**
     * @return The CloudAMQP instance identifier.
     * 
     */
    public Optional<Output<Integer>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Service name of the PrivateLink used when creating the endpoint from other VPC.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Service name of the PrivateLink used when creating the endpoint from other VPC.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Configurable sleep time (seconds) when enable PrivateLink. Default set to 60 seconds.
     * 
     */
    @Import(name="sleep")
    private @Nullable Output<Integer> sleep;

    /**
     * @return Configurable sleep time (seconds) when enable PrivateLink. Default set to 60 seconds.
     * 
     */
    public Optional<Output<Integer>> sleep() {
        return Optional.ofNullable(this.sleep);
    }

    /**
     * PrivateLink status [enable, pending, disable]
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return PrivateLink status [enable, pending, disable]
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Configurable timeout time (seconds) when enable PrivateLink. Default set to 3600 seconds.
     * 
     * Allowed principals format: &lt;br&gt;
     * `arn:aws:iam::aws-account-id:root` &lt;br&gt;
     * `arn:aws:iam::aws-account-id:user/user-name` &lt;br&gt;
     * `arn:aws:iam::aws-account-id:role/role-name`
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return Configurable timeout time (seconds) when enable PrivateLink. Default set to 3600 seconds.
     * 
     * Allowed principals format: &lt;br&gt;
     * `arn:aws:iam::aws-account-id:root` &lt;br&gt;
     * `arn:aws:iam::aws-account-id:user/user-name` &lt;br&gt;
     * `arn:aws:iam::aws-account-id:role/role-name`
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private PrivatelinkAwsState() {}

    private PrivatelinkAwsState(PrivatelinkAwsState $) {
        this.activeZones = $.activeZones;
        this.allowedPrincipals = $.allowedPrincipals;
        this.instanceId = $.instanceId;
        this.serviceName = $.serviceName;
        this.sleep = $.sleep;
        this.status = $.status;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivatelinkAwsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivatelinkAwsState $;

        public Builder() {
            $ = new PrivatelinkAwsState();
        }

        public Builder(PrivatelinkAwsState defaults) {
            $ = new PrivatelinkAwsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeZones Covering availability zones used when creating an Endpoint from other VPC.
         * 
         * @return builder
         * 
         */
        public Builder activeZones(@Nullable Output<List<String>> activeZones) {
            $.activeZones = activeZones;
            return this;
        }

        /**
         * @param activeZones Covering availability zones used when creating an Endpoint from other VPC.
         * 
         * @return builder
         * 
         */
        public Builder activeZones(List<String> activeZones) {
            return activeZones(Output.of(activeZones));
        }

        /**
         * @param activeZones Covering availability zones used when creating an Endpoint from other VPC.
         * 
         * @return builder
         * 
         */
        public Builder activeZones(String... activeZones) {
            return activeZones(List.of(activeZones));
        }

        /**
         * @param allowedPrincipals Allowed principals to access the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder allowedPrincipals(@Nullable Output<List<String>> allowedPrincipals) {
            $.allowedPrincipals = allowedPrincipals;
            return this;
        }

        /**
         * @param allowedPrincipals Allowed principals to access the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder allowedPrincipals(List<String> allowedPrincipals) {
            return allowedPrincipals(Output.of(allowedPrincipals));
        }

        /**
         * @param allowedPrincipals Allowed principals to access the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder allowedPrincipals(String... allowedPrincipals) {
            return allowedPrincipals(List.of(allowedPrincipals));
        }

        /**
         * @param instanceId The CloudAMQP instance identifier.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<Integer> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The CloudAMQP instance identifier.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Integer instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param serviceName Service name of the PrivateLink used when creating the endpoint from other VPC.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name of the PrivateLink used when creating the endpoint from other VPC.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param sleep Configurable sleep time (seconds) when enable PrivateLink. Default set to 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder sleep(@Nullable Output<Integer> sleep) {
            $.sleep = sleep;
            return this;
        }

        /**
         * @param sleep Configurable sleep time (seconds) when enable PrivateLink. Default set to 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder sleep(Integer sleep) {
            return sleep(Output.of(sleep));
        }

        /**
         * @param status PrivateLink status [enable, pending, disable]
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status PrivateLink status [enable, pending, disable]
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param timeout Configurable timeout time (seconds) when enable PrivateLink. Default set to 3600 seconds.
         * 
         * Allowed principals format: &lt;br&gt;
         * `arn:aws:iam::aws-account-id:root` &lt;br&gt;
         * `arn:aws:iam::aws-account-id:user/user-name` &lt;br&gt;
         * `arn:aws:iam::aws-account-id:role/role-name`
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Configurable timeout time (seconds) when enable PrivateLink. Default set to 3600 seconds.
         * 
         * Allowed principals format: &lt;br&gt;
         * `arn:aws:iam::aws-account-id:root` &lt;br&gt;
         * `arn:aws:iam::aws-account-id:user/user-name` &lt;br&gt;
         * `arn:aws:iam::aws-account-id:role/role-name`
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public PrivatelinkAwsState build() {
            return $;
        }
    }

}
