// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExtraDiskSizeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExtraDiskSizeArgs Empty = new ExtraDiskSizeArgs();

    /**
     * When resizing disk, allow cluster downtime to do so
     * 
     */
    @Import(name="allowDowntime")
    private @Nullable Output<Boolean> allowDowntime;

    /**
     * @return When resizing disk, allow cluster downtime to do so
     * 
     */
    public Optional<Output<Boolean>> allowDowntime() {
        return Optional.ofNullable(this.allowDowntime);
    }

    /**
     * Extra disk size in GB
     * 
     */
    @Import(name="extraDiskSize", required=true)
    private Output<Integer> extraDiskSize;

    /**
     * @return Extra disk size in GB
     * 
     */
    public Output<Integer> extraDiskSize() {
        return this.extraDiskSize;
    }

    /**
     * Instance identifier
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<Integer> instanceId;

    /**
     * @return Instance identifier
     * 
     */
    public Output<Integer> instanceId() {
        return this.instanceId;
    }

    /**
     * Configurable sleep time in seconds between retries for resizing the disk
     * 
     */
    @Import(name="sleep")
    private @Nullable Output<Integer> sleep;

    /**
     * @return Configurable sleep time in seconds between retries for resizing the disk
     * 
     */
    public Optional<Output<Integer>> sleep() {
        return Optional.ofNullable(this.sleep);
    }

    /**
     * Configurable timeout time in seconds for resizing the disk
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return Configurable timeout time in seconds for resizing the disk
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private ExtraDiskSizeArgs() {}

    private ExtraDiskSizeArgs(ExtraDiskSizeArgs $) {
        this.allowDowntime = $.allowDowntime;
        this.extraDiskSize = $.extraDiskSize;
        this.instanceId = $.instanceId;
        this.sleep = $.sleep;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtraDiskSizeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtraDiskSizeArgs $;

        public Builder() {
            $ = new ExtraDiskSizeArgs();
        }

        public Builder(ExtraDiskSizeArgs defaults) {
            $ = new ExtraDiskSizeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowDowntime When resizing disk, allow cluster downtime to do so
         * 
         * @return builder
         * 
         */
        public Builder allowDowntime(@Nullable Output<Boolean> allowDowntime) {
            $.allowDowntime = allowDowntime;
            return this;
        }

        /**
         * @param allowDowntime When resizing disk, allow cluster downtime to do so
         * 
         * @return builder
         * 
         */
        public Builder allowDowntime(Boolean allowDowntime) {
            return allowDowntime(Output.of(allowDowntime));
        }

        /**
         * @param extraDiskSize Extra disk size in GB
         * 
         * @return builder
         * 
         */
        public Builder extraDiskSize(Output<Integer> extraDiskSize) {
            $.extraDiskSize = extraDiskSize;
            return this;
        }

        /**
         * @param extraDiskSize Extra disk size in GB
         * 
         * @return builder
         * 
         */
        public Builder extraDiskSize(Integer extraDiskSize) {
            return extraDiskSize(Output.of(extraDiskSize));
        }

        /**
         * @param instanceId Instance identifier
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<Integer> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Instance identifier
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Integer instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param sleep Configurable sleep time in seconds between retries for resizing the disk
         * 
         * @return builder
         * 
         */
        public Builder sleep(@Nullable Output<Integer> sleep) {
            $.sleep = sleep;
            return this;
        }

        /**
         * @param sleep Configurable sleep time in seconds between retries for resizing the disk
         * 
         * @return builder
         * 
         */
        public Builder sleep(Integer sleep) {
            return sleep(Output.of(sleep));
        }

        /**
         * @param timeout Configurable timeout time in seconds for resizing the disk
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Configurable timeout time in seconds for resizing the disk
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public ExtraDiskSizeArgs build() {
            if ($.extraDiskSize == null) {
                throw new MissingRequiredPropertyException("ExtraDiskSizeArgs", "extraDiskSize");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("ExtraDiskSizeArgs", "instanceId");
            }
            return $;
        }
    }

}
