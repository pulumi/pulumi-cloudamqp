// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp;

import com.pulumi.cloudamqp.ExtraDiskSizeArgs;
import com.pulumi.cloudamqp.Utilities;
import com.pulumi.cloudamqp.inputs.ExtraDiskSizeState;
import com.pulumi.cloudamqp.outputs.ExtraDiskSizeNode;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows you to resize the disk with additional storage capacity.
 * 
 * ***Before v1.25.0***: Only available for Amazon Web Services (AWS) without downtime.
 * 
 * ***From v1.25.0***: Google Compute Engine (GCE) and Azure available.
 * 
 * Introducing a new optional argument called `allow_downtime`.  Leaving it out or set it to false will proceed to try and resize the disk without downtime, available for *AWS* and *GCE*.
 * While *Azure* only support swapping the disk, and this argument needs to be set to *true*.
 * 
 * `allow_downtime` also makes it possible to circumvent the time rate limit or shrinking the disk.
 * 
 * |         Cloud         |        allow_        |          allow_          |
 * |-----------------------|----------------------|--------------------------|
 * | amazon-web-services   | Expand current disk* | Try to expand, otherwise |
 * | google-compute-engine | Expand current disk* | Try to expand, otherwise |
 * | azure-arm             | Not                  | Swap disk to new         |
 * 
 */
@ResourceType(type="cloudamqp:index/extraDiskSize:ExtraDiskSize")
public class ExtraDiskSize extends com.pulumi.resources.CustomResource {
    /**
     * When resizing disk, allow cluster downtime to do so
     * 
     */
    @Export(name="allowDowntime", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> allowDowntime;

    /**
     * @return When resizing disk, allow cluster downtime to do so
     * 
     */
    public Output<Optional<Boolean>> allowDowntime() {
        return Codegen.optional(this.allowDowntime);
    }
    /**
     * Extra disk size in GB
     * 
     */
    @Export(name="extraDiskSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> extraDiskSize;

    /**
     * @return Extra disk size in GB
     * 
     */
    public Output<Integer> extraDiskSize() {
        return this.extraDiskSize;
    }
    /**
     * Instance identifier
     * 
     */
    @Export(name="instanceId", refs={Integer.class}, tree="[0]")
    private Output<Integer> instanceId;

    /**
     * @return Instance identifier
     * 
     */
    public Output<Integer> instanceId() {
        return this.instanceId;
    }
    @Export(name="nodes", refs={List.class,ExtraDiskSizeNode.class}, tree="[0,1]")
    private Output<List<ExtraDiskSizeNode>> nodes;

    public Output<List<ExtraDiskSizeNode>> nodes() {
        return this.nodes;
    }
    /**
     * Configurable sleep time in seconds between retries for resizing the disk
     * 
     */
    @Export(name="sleep", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> sleep;

    /**
     * @return Configurable sleep time in seconds between retries for resizing the disk
     * 
     */
    public Output<Optional<Integer>> sleep() {
        return Codegen.optional(this.sleep);
    }
    /**
     * Configurable timeout time in seconds for resizing the disk
     * 
     */
    @Export(name="timeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> timeout;

    /**
     * @return Configurable timeout time in seconds for resizing the disk
     * 
     */
    public Output<Optional<Integer>> timeout() {
        return Codegen.optional(this.timeout);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExtraDiskSize(java.lang.String name) {
        this(name, ExtraDiskSizeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExtraDiskSize(java.lang.String name, ExtraDiskSizeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExtraDiskSize(java.lang.String name, ExtraDiskSizeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudamqp:index/extraDiskSize:ExtraDiskSize", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ExtraDiskSize(java.lang.String name, Output<java.lang.String> id, @Nullable ExtraDiskSizeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudamqp:index/extraDiskSize:ExtraDiskSize", name, state, makeResourceOptions(options, id), false);
    }

    private static ExtraDiskSizeArgs makeArgs(ExtraDiskSizeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExtraDiskSizeArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExtraDiskSize get(java.lang.String name, Output<java.lang.String> id, @Nullable ExtraDiskSizeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExtraDiskSize(name, id, state, options);
    }
}
