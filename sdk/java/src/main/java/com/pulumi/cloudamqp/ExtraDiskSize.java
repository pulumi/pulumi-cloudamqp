// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp;

import com.pulumi.cloudamqp.ExtraDiskSizeArgs;
import com.pulumi.cloudamqp.Utilities;
import com.pulumi.cloudamqp.inputs.ExtraDiskSizeState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import javax.annotation.Nullable;

/**
 * This resource allows you to expand the disk with additional storage capacity. There is no downtime when expanding the disk.
 * 
 * Only available for dedicated subscription plans hosted at Amazon Web Services (AWS) at this time.
 * 
 * &gt; **WARNING:** Due to restrictions from cloud providers, it&#39;s only possible to resize the disk every 8 hours.
 * 
 * Pricing is available at [cloudamqp.com](https://www.cloudamqp.com/).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.cloudamqp.Instance;
 * import com.pulumi.cloudamqp.InstanceArgs;
 * import com.pulumi.cloudamqp.ExtraDiskSize;
 * import com.pulumi.cloudamqp.ExtraDiskSizeArgs;
 * import com.pulumi.cloudamqp.CloudamqpFunctions;
 * import com.pulumi.cloudamqp.inputs.GetNodesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
 *             .plan(&#34;squirrel-1&#34;)
 *             .region(&#34;amazon-web-services::us-west-2&#34;)
 *             .rmqVersion(&#34;3.10.1&#34;)
 *             .build());
 * 
 *         var resizeDisk = new ExtraDiskSize(&#34;resizeDisk&#34;, ExtraDiskSizeArgs.builder()        
 *             .instanceId(instance.id())
 *             .extraDiskSize(25)
 *             .build());
 * 
 *         final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()
 *             .instanceId(instance.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Not possible to import this resource.
 * 
 */
@ResourceType(type="cloudamqp:index/extraDiskSize:ExtraDiskSize")
public class ExtraDiskSize extends com.pulumi.resources.CustomResource {
    /**
     * Extra disk size in GB. Supported values: 25, 50, 100, 250, 500, 1000, 2000
     * 
     */
    @Export(name="extraDiskSize", type=Integer.class, parameters={})
    private Output<Integer> extraDiskSize;

    /**
     * @return Extra disk size in GB. Supported values: 25, 50, 100, 250, 500, 1000, 2000
     * 
     */
    public Output<Integer> extraDiskSize() {
        return this.extraDiskSize;
    }
    /**
     * The CloudAMQP instance ID.
     * 
     */
    @Export(name="instanceId", type=Integer.class, parameters={})
    private Output<Integer> instanceId;

    /**
     * @return The CloudAMQP instance ID.
     * 
     */
    public Output<Integer> instanceId() {
        return this.instanceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExtraDiskSize(String name) {
        this(name, ExtraDiskSizeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExtraDiskSize(String name, ExtraDiskSizeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExtraDiskSize(String name, ExtraDiskSizeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudamqp:index/extraDiskSize:ExtraDiskSize", name, args == null ? ExtraDiskSizeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExtraDiskSize(String name, Output<String> id, @Nullable ExtraDiskSizeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudamqp:index/extraDiskSize:ExtraDiskSize", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExtraDiskSize get(String name, Output<String> id, @Nullable ExtraDiskSizeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExtraDiskSize(name, id, state, options);
    }
}
