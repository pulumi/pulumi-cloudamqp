// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcGcpPeeringArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcGcpPeeringArgs Empty = new VpcGcpPeeringArgs();

    /**
     * The CloudAMQP instance identifier. *Deprecated from v1.16.0*
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<Integer> instanceId;

    /**
     * @return The CloudAMQP instance identifier. *Deprecated from v1.16.0*
     * 
     */
    public Optional<Output<Integer>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Network URI of the VPC network to which you will peer with. See examples above for the format.
     * 
     */
    @Import(name="peerNetworkUri", required=true)
    private Output<String> peerNetworkUri;

    /**
     * @return Network URI of the VPC network to which you will peer with. See examples above for the format.
     * 
     */
    public Output<String> peerNetworkUri() {
        return this.peerNetworkUri;
    }

    /**
     * Configurable sleep time (seconds) between retries when requesting or reading
     * peering. Default set to 10 seconds. *Available from v1.29.0*
     * 
     */
    @Import(name="sleep")
    private @Nullable Output<Integer> sleep;

    /**
     * @return Configurable sleep time (seconds) between retries when requesting or reading
     * peering. Default set to 10 seconds. *Available from v1.29.0*
     * 
     */
    public Optional<Output<Integer>> sleep() {
        return Optional.ofNullable(this.sleep);
    }

    /**
     * Configurable timeout time (seconds) before retries times out. Default set
     * to 1800 seconds. *Available from v1.29.0*
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return Configurable timeout time (seconds) before retries times out. Default set
     * to 1800 seconds. *Available from v1.29.0*
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    /**
     * The managed VPC identifier. *Available from v1.16.0*
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The managed VPC identifier. *Available from v1.16.0*
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * Makes the resource wait until the peering is connected.
     * Default set to false. *Available from v1.28.0*
     * 
     */
    @Import(name="waitOnPeeringStatus")
    private @Nullable Output<Boolean> waitOnPeeringStatus;

    /**
     * @return Makes the resource wait until the peering is connected.
     * Default set to false. *Available from v1.28.0*
     * 
     */
    public Optional<Output<Boolean>> waitOnPeeringStatus() {
        return Optional.ofNullable(this.waitOnPeeringStatus);
    }

    private VpcGcpPeeringArgs() {}

    private VpcGcpPeeringArgs(VpcGcpPeeringArgs $) {
        this.instanceId = $.instanceId;
        this.peerNetworkUri = $.peerNetworkUri;
        this.sleep = $.sleep;
        this.timeout = $.timeout;
        this.vpcId = $.vpcId;
        this.waitOnPeeringStatus = $.waitOnPeeringStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcGcpPeeringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcGcpPeeringArgs $;

        public Builder() {
            $ = new VpcGcpPeeringArgs();
        }

        public Builder(VpcGcpPeeringArgs defaults) {
            $ = new VpcGcpPeeringArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceId The CloudAMQP instance identifier. *Deprecated from v1.16.0*
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<Integer> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The CloudAMQP instance identifier. *Deprecated from v1.16.0*
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Integer instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param peerNetworkUri Network URI of the VPC network to which you will peer with. See examples above for the format.
         * 
         * @return builder
         * 
         */
        public Builder peerNetworkUri(Output<String> peerNetworkUri) {
            $.peerNetworkUri = peerNetworkUri;
            return this;
        }

        /**
         * @param peerNetworkUri Network URI of the VPC network to which you will peer with. See examples above for the format.
         * 
         * @return builder
         * 
         */
        public Builder peerNetworkUri(String peerNetworkUri) {
            return peerNetworkUri(Output.of(peerNetworkUri));
        }

        /**
         * @param sleep Configurable sleep time (seconds) between retries when requesting or reading
         * peering. Default set to 10 seconds. *Available from v1.29.0*
         * 
         * @return builder
         * 
         */
        public Builder sleep(@Nullable Output<Integer> sleep) {
            $.sleep = sleep;
            return this;
        }

        /**
         * @param sleep Configurable sleep time (seconds) between retries when requesting or reading
         * peering. Default set to 10 seconds. *Available from v1.29.0*
         * 
         * @return builder
         * 
         */
        public Builder sleep(Integer sleep) {
            return sleep(Output.of(sleep));
        }

        /**
         * @param timeout Configurable timeout time (seconds) before retries times out. Default set
         * to 1800 seconds. *Available from v1.29.0*
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Configurable timeout time (seconds) before retries times out. Default set
         * to 1800 seconds. *Available from v1.29.0*
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        /**
         * @param vpcId The managed VPC identifier. *Available from v1.16.0*
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The managed VPC identifier. *Available from v1.16.0*
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param waitOnPeeringStatus Makes the resource wait until the peering is connected.
         * Default set to false. *Available from v1.28.0*
         * 
         * @return builder
         * 
         */
        public Builder waitOnPeeringStatus(@Nullable Output<Boolean> waitOnPeeringStatus) {
            $.waitOnPeeringStatus = waitOnPeeringStatus;
            return this;
        }

        /**
         * @param waitOnPeeringStatus Makes the resource wait until the peering is connected.
         * Default set to false. *Available from v1.28.0*
         * 
         * @return builder
         * 
         */
        public Builder waitOnPeeringStatus(Boolean waitOnPeeringStatus) {
            return waitOnPeeringStatus(Output.of(waitOnPeeringStatus));
        }

        public VpcGcpPeeringArgs build() {
            if ($.peerNetworkUri == null) {
                throw new MissingRequiredPropertyException("VpcGcpPeeringArgs", "peerNetworkUri");
            }
            return $;
        }
    }

}
