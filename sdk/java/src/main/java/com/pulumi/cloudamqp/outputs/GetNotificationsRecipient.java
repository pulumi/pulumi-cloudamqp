// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNotificationsRecipient {
    /**
     * @return The name of the recipient.
     * 
     */
    private String name;
    /**
     * @return Options argument (e.g. `rk` used for VictorOps routing key).
     * 
     */
    private Map<String,String> options;
    /**
     * @return The identifier for the recipient.
     * 
     */
    private Integer recipientId;
    /**
     * @return The type of the recipient.
     * 
     */
    private String type;
    /**
     * @return The notification endpoint, where to send the notification.
     * 
     */
    private String value;

    private GetNotificationsRecipient() {}
    /**
     * @return The name of the recipient.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Options argument (e.g. `rk` used for VictorOps routing key).
     * 
     */
    public Map<String,String> options() {
        return this.options;
    }
    /**
     * @return The identifier for the recipient.
     * 
     */
    public Integer recipientId() {
        return this.recipientId;
    }
    /**
     * @return The type of the recipient.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The notification endpoint, where to send the notification.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotificationsRecipient defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private Map<String,String> options;
        private Integer recipientId;
        private String type;
        private String value;
        public Builder() {}
        public Builder(GetNotificationsRecipient defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.recipientId = defaults.recipientId;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNotificationsRecipient", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder options(Map<String,String> options) {
            if (options == null) {
              throw new MissingRequiredPropertyException("GetNotificationsRecipient", "options");
            }
            this.options = options;
            return this;
        }
        @CustomType.Setter
        public Builder recipientId(Integer recipientId) {
            if (recipientId == null) {
              throw new MissingRequiredPropertyException("GetNotificationsRecipient", "recipientId");
            }
            this.recipientId = recipientId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetNotificationsRecipient", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetNotificationsRecipient", "value");
            }
            this.value = value;
            return this;
        }
        public GetNotificationsRecipient build() {
            final var _resultValue = new GetNotificationsRecipient();
            _resultValue.name = name;
            _resultValue.options = options;
            _resultValue.recipientId = recipientId;
            _resultValue.type = type;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
