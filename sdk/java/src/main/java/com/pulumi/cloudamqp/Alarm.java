// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp;

import com.pulumi.cloudamqp.AlarmArgs;
import com.pulumi.cloudamqp.Utilities;
import com.pulumi.cloudamqp.inputs.AlarmState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * `cloudamqp_alarm` can be imported using the resource identifier together with the CloudAMQP instance
 * 
 * identifier (CSV separated). To retrieve the resource identifier, use [CloudAMQP API list alarms].
 * 
 * From Terraform v1.5.0, the `import` block can be used to import this resource:
 * 
 * hcl
 * 
 * import {
 * 
 *   to = cloudamqp_alarm.alarm
 * 
 *   id = format(&#34;&lt;id&gt;,%s&#34;, cloudamqp_instance.instance.id)
 * 
 * }
 * 
 * Or use Terraform CLI:
 * 
 * ```sh
 * $ pulumi import cloudamqp:index/alarm:Alarm alarm &lt;id&gt;,&lt;instance_id&gt;`
 * ```
 * 
 */
@ResourceType(type="cloudamqp:index/alarm:Alarm")
public class Alarm extends com.pulumi.resources.CustomResource {
    /**
     * Enable or disable the alarm to trigger.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Enable or disable the alarm to trigger.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * The CloudAMQP instance ID.
     * 
     */
    @Export(name="instanceId", refs={Integer.class}, tree="[0]")
    private Output<Integer> instanceId;

    /**
     * @return The CloudAMQP instance ID.
     * 
     */
    public Output<Integer> instanceId() {
        return this.instanceId;
    }
    /**
     * Message type `(total, unacked, ready)` used by queue alarm type.
     * 
     * Specific argument for `disk` alarm
     * 
     */
    @Export(name="messageType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> messageType;

    /**
     * @return Message type `(total, unacked, ready)` used by queue alarm type.
     * 
     * Specific argument for `disk` alarm
     * 
     */
    public Output<Optional<String>> messageType() {
        return Codegen.optional(this.messageType);
    }
    /**
     * Regex for which queue to check.
     * 
     */
    @Export(name="queueRegex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> queueRegex;

    /**
     * @return Regex for which queue to check.
     * 
     */
    public Output<Optional<String>> queueRegex() {
        return Codegen.optional(this.queueRegex);
    }
    /**
     * Identifier for recipient to be notified. Leave empty to notify
     * all recipients.
     * 
     */
    @Export(name="recipients", refs={List.class,Integer.class}, tree="[0,1]")
    private Output<List<Integer>> recipients;

    /**
     * @return Identifier for recipient to be notified. Leave empty to notify
     * all recipients.
     * 
     */
    public Output<List<Integer>> recipients() {
        return this.recipients;
    }
    /**
     * The reminder interval (in seconds) to resend the alarm if not
     * resolved. Set to 0 for no reminders. The Default is 0.
     * 
     */
    @Export(name="reminderInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> reminderInterval;

    /**
     * @return The reminder interval (in seconds) to resend the alarm if not
     * resolved. Set to 0 for no reminders. The Default is 0.
     * 
     */
    public Output<Optional<Integer>> reminderInterval() {
        return Codegen.optional(this.reminderInterval);
    }
    /**
     * The time interval (in seconds) the `value_threshold` should be
     * active before triggering an alarm.
     * 
     */
    @Export(name="timeThreshold", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> timeThreshold;

    /**
     * @return The time interval (in seconds) the `value_threshold` should be
     * active before triggering an alarm.
     * 
     */
    public Output<Optional<Integer>> timeThreshold() {
        return Codegen.optional(this.timeThreshold);
    }
    /**
     * The alarm type, see valid options below.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The alarm type, see valid options below.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Disk value threshold calculation, `fixed, percentage` of disk
     * space remaining.
     * 
     * Based on alarm type, different arguments are flagged as required or optional.
     * 
     */
    @Export(name="valueCalculation", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> valueCalculation;

    /**
     * @return Disk value threshold calculation, `fixed, percentage` of disk
     * space remaining.
     * 
     * Based on alarm type, different arguments are flagged as required or optional.
     * 
     */
    public Output<Optional<String>> valueCalculation() {
        return Codegen.optional(this.valueCalculation);
    }
    /**
     * The value to trigger the alarm for.
     * 
     */
    @Export(name="valueThreshold", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> valueThreshold;

    /**
     * @return The value to trigger the alarm for.
     * 
     */
    public Output<Optional<Integer>> valueThreshold() {
        return Codegen.optional(this.valueThreshold);
    }
    /**
     * Regex for which vhost to check
     * 
     */
    @Export(name="vhostRegex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vhostRegex;

    /**
     * @return Regex for which vhost to check
     * 
     */
    public Output<Optional<String>> vhostRegex() {
        return Codegen.optional(this.vhostRegex);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Alarm(java.lang.String name) {
        this(name, AlarmArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Alarm(java.lang.String name, AlarmArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Alarm(java.lang.String name, AlarmArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudamqp:index/alarm:Alarm", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Alarm(java.lang.String name, Output<java.lang.String> id, @Nullable AlarmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("cloudamqp:index/alarm:Alarm", name, state, makeResourceOptions(options, id), false);
    }

    private static AlarmArgs makeArgs(AlarmArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AlarmArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Alarm get(java.lang.String name, Output<java.lang.String> id, @Nullable AlarmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Alarm(name, id, state, options);
    }
}
