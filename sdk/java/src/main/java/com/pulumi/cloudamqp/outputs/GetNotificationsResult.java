// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp.outputs;

import com.pulumi.cloudamqp.outputs.GetNotificationsRecipient;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNotificationsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Integer instanceId;
    /**
     * @return List of alarms (see below for nested schema)
     * 
     */
    private List<GetNotificationsRecipient> recipients;

    private GetNotificationsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Integer instanceId() {
        return this.instanceId;
    }
    /**
     * @return List of alarms (see below for nested schema)
     * 
     */
    public List<GetNotificationsRecipient> recipients() {
        return this.recipients;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotificationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Integer instanceId;
        private List<GetNotificationsRecipient> recipients;
        public Builder() {}
        public Builder(GetNotificationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.recipients = defaults.recipients;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNotificationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(Integer instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetNotificationsResult", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder recipients(List<GetNotificationsRecipient> recipients) {
            if (recipients == null) {
              throw new MissingRequiredPropertyException("GetNotificationsResult", "recipients");
            }
            this.recipients = recipients;
            return this;
        }
        public Builder recipients(GetNotificationsRecipient... recipients) {
            return recipients(List.of(recipients));
        }
        public GetNotificationsResult build() {
            final var _resultValue = new GetNotificationsResult();
            _resultValue.id = id;
            _resultValue.instanceId = instanceId;
            _resultValue.recipients = recipients;
            return _resultValue;
        }
    }
}
