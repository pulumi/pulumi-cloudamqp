// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudamqp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class IntegrationAwsEventbridgeArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationAwsEventbridgeArgs Empty = new IntegrationAwsEventbridgeArgs();

    /**
     * The 12 digit AWS Account ID where you want the events to be sent to.
     * 
     */
    @Import(name="awsAccountId", required=true)
    private Output<String> awsAccountId;

    /**
     * @return The 12 digit AWS Account ID where you want the events to be sent to.
     * 
     */
    public Output<String> awsAccountId() {
        return this.awsAccountId;
    }

    /**
     * The AWS region where you the events to be sent to. (e.g. us-west-1, us-west-2, ..., etc.)
     * 
     */
    @Import(name="awsRegion", required=true)
    private Output<String> awsRegion;

    /**
     * @return The AWS region where you the events to be sent to. (e.g. us-west-1, us-west-2, ..., etc.)
     * 
     */
    public Output<String> awsRegion() {
        return this.awsRegion;
    }

    /**
     * Instance identifier
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<Integer> instanceId;

    /**
     * @return Instance identifier
     * 
     */
    public Output<Integer> instanceId() {
        return this.instanceId;
    }

    /**
     * A (durable) queue on your RabbitMQ instance.
     * 
     */
    @Import(name="queue", required=true)
    private Output<String> queue;

    /**
     * @return A (durable) queue on your RabbitMQ instance.
     * 
     */
    public Output<String> queue() {
        return this.queue;
    }

    /**
     * The VHost the queue resides in.
     * 
     */
    @Import(name="vhost", required=true)
    private Output<String> vhost;

    /**
     * @return The VHost the queue resides in.
     * 
     */
    public Output<String> vhost() {
        return this.vhost;
    }

    /**
     * Include message headers in the event data.
     * 
     */
    @Import(name="withHeaders", required=true)
    private Output<Boolean> withHeaders;

    /**
     * @return Include message headers in the event data.
     * 
     */
    public Output<Boolean> withHeaders() {
        return this.withHeaders;
    }

    private IntegrationAwsEventbridgeArgs() {}

    private IntegrationAwsEventbridgeArgs(IntegrationAwsEventbridgeArgs $) {
        this.awsAccountId = $.awsAccountId;
        this.awsRegion = $.awsRegion;
        this.instanceId = $.instanceId;
        this.queue = $.queue;
        this.vhost = $.vhost;
        this.withHeaders = $.withHeaders;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationAwsEventbridgeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationAwsEventbridgeArgs $;

        public Builder() {
            $ = new IntegrationAwsEventbridgeArgs();
        }

        public Builder(IntegrationAwsEventbridgeArgs defaults) {
            $ = new IntegrationAwsEventbridgeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param awsAccountId The 12 digit AWS Account ID where you want the events to be sent to.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        /**
         * @param awsAccountId The 12 digit AWS Account ID where you want the events to be sent to.
         * 
         * @return builder
         * 
         */
        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        /**
         * @param awsRegion The AWS region where you the events to be sent to. (e.g. us-west-1, us-west-2, ..., etc.)
         * 
         * @return builder
         * 
         */
        public Builder awsRegion(Output<String> awsRegion) {
            $.awsRegion = awsRegion;
            return this;
        }

        /**
         * @param awsRegion The AWS region where you the events to be sent to. (e.g. us-west-1, us-west-2, ..., etc.)
         * 
         * @return builder
         * 
         */
        public Builder awsRegion(String awsRegion) {
            return awsRegion(Output.of(awsRegion));
        }

        /**
         * @param instanceId Instance identifier
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<Integer> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Instance identifier
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Integer instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param queue A (durable) queue on your RabbitMQ instance.
         * 
         * @return builder
         * 
         */
        public Builder queue(Output<String> queue) {
            $.queue = queue;
            return this;
        }

        /**
         * @param queue A (durable) queue on your RabbitMQ instance.
         * 
         * @return builder
         * 
         */
        public Builder queue(String queue) {
            return queue(Output.of(queue));
        }

        /**
         * @param vhost The VHost the queue resides in.
         * 
         * @return builder
         * 
         */
        public Builder vhost(Output<String> vhost) {
            $.vhost = vhost;
            return this;
        }

        /**
         * @param vhost The VHost the queue resides in.
         * 
         * @return builder
         * 
         */
        public Builder vhost(String vhost) {
            return vhost(Output.of(vhost));
        }

        /**
         * @param withHeaders Include message headers in the event data.
         * 
         * @return builder
         * 
         */
        public Builder withHeaders(Output<Boolean> withHeaders) {
            $.withHeaders = withHeaders;
            return this;
        }

        /**
         * @param withHeaders Include message headers in the event data.
         * 
         * @return builder
         * 
         */
        public Builder withHeaders(Boolean withHeaders) {
            return withHeaders(Output.of(withHeaders));
        }

        public IntegrationAwsEventbridgeArgs build() {
            $.awsAccountId = Objects.requireNonNull($.awsAccountId, "expected parameter 'awsAccountId' to be non-null");
            $.awsRegion = Objects.requireNonNull($.awsRegion, "expected parameter 'awsRegion' to be non-null");
            $.instanceId = Objects.requireNonNull($.instanceId, "expected parameter 'instanceId' to be non-null");
            $.queue = Objects.requireNonNull($.queue, "expected parameter 'queue' to be non-null");
            $.vhost = Objects.requireNonNull($.vhost, "expected parameter 'vhost' to be non-null");
            $.withHeaders = Objects.requireNonNull($.withHeaders, "expected parameter 'withHeaders' to be non-null");
            return $;
        }
    }

}
