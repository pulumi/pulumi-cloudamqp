// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudamqp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve basic information about all instances available for an account. Uses the included apikey in provider configuration, to determine which account to read from.
//
// ## Example Usage
//
// Can be used in other resources/data sources when instance identifier is unknown, while other attributes are known. E.g. find correct instance from `instance name`. Then iterate over instances to find the matching one and extract the instance identifier.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _ := "<instance_name>";
// _, err := cloudamqp.GetAccount(ctx, nil, nil);
// if err != nil {
// return err
// }
// ctx.Export("instanceId", <nil>)
// return nil
// })
// }
// ```
// ## Attributes reference
//
// # All attributes reference are computed
//
// * `id`          - The identifier for this data source. Set to `na` since there is no unique identifier.
// * `instances`   - An array of instances. Each `instances` block consists of the fields documented below.
//
// ***
//
// # The `instances` block consist of
//
// * `id`      - The instance identifier.
// * `name`    - The name of the instance.
// * `plan`    - The subscription plan used for the instance.
// * `region`  - The region were the instanece is located in.
// * `tags`    - Optional tags set for the instance.
//
// ## Dependency
//
// This data source depends on apikey set in the provider configuration.
func GetAccount(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAccountResult
	err := ctx.Invoke("cloudamqp:index/getAccount:getAccount", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getAccount.
type GetAccountResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string               `pulumi:"id"`
	Instances []GetAccountInstance `pulumi:"instances"`
}

func GetAccountOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetAccountResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetAccountResult, error) {
		r, err := GetAccount(ctx, opts...)
		var s GetAccountResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetAccountResultOutput)
}

// A collection of values returned by getAccount.
type GetAccountResultOutput struct{ *pulumi.OutputState }

func (GetAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountResult)(nil)).Elem()
}

func (o GetAccountResultOutput) ToGetAccountResultOutput() GetAccountResultOutput {
	return o
}

func (o GetAccountResultOutput) ToGetAccountResultOutputWithContext(ctx context.Context) GetAccountResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAccountResultOutput) Instances() GetAccountInstanceArrayOutput {
	return o.ApplyT(func(v GetAccountResult) []GetAccountInstance { return v.Instances }).(GetAccountInstanceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAccountResultOutput{})
}
