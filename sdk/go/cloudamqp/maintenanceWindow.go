// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudamqp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows you to set the preferred start of new scheduled maintenances. The maintenance
// windows are 3 hours long and CloudAMQP attempts to begin the maintenance as close as possible to the
// preferred start. A maintenance will never start before the window.
//
// Available for dedicated subscription plans.
//
// ## Example Usage
//
// <details>
//
//	<summary>
//	  <b>Set the preferred maintenance start</b>
//	</summary>
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudamqp.NewMaintenanceWindow(ctx, "this", &cloudamqp.MaintenanceWindowArgs{
//				InstanceId:    pulumi.Any(instance.Id),
//				PreferredDay:  pulumi.String("Monday"),
//				PreferredTime: pulumi.String("23:00"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// </details>
//
// <details>
//
//	<summary>
//	  <b>Set the preferred maintenance start with automatic updates</b>
//	</summary>
//
// When setting the automatic updates to "on", a maintenance for version update will be scheduled once
// a new LavinMQ version been released.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudamqp.NewMaintenanceWindow(ctx, "this", &cloudamqp.MaintenanceWindowArgs{
//				InstanceId:       pulumi.Any(instance.Id),
//				PreferredDay:     pulumi.String("Monday"),
//				PreferredTime:    pulumi.String("23:00"),
//				AutomaticUpdates: pulumi.String("on"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// </details>
//
// <details>
//
//	<summary>
//	  <b>Only set preferred time of day</b>
//	</summary>
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudamqp.NewMaintenanceWindow(ctx, "this", &cloudamqp.MaintenanceWindowArgs{
//				InstanceId:    pulumi.Any(instance.Id),
//				PreferredTime: pulumi.String("23:00"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// </details>
//
// <details>
//
//	<summary>
//	  <b>Only set preferred day of week</b>
//	</summary>
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudamqp.NewMaintenanceWindow(ctx, "this", &cloudamqp.MaintenanceWindowArgs{
//				InstanceId:   pulumi.Any(instance.Id),
//				PreferredDay: pulumi.String("Monday"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// </details>
//
// ## Dependency
//
// This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
//
// ## Import
//
// `cloudamqp_maintenance_window` can be imported using CloudAMQP instance identifier. To retrieve the
//
// identifier of an instance, use [CloudAMQP API list instances].
//
// From Terraform v1.5.0, the `import` block can be used to import this resource:
//
// hcl
//
// import {
//
//	to = cloudamqp_maintenance_window.this
//
//	id = cloudamqp_instance.instance.id
//
// }
//
// Or with Terraform CLI:
//
// ```sh
// $ pulumi import cloudamqp:index/maintenanceWindow:MaintenanceWindow this <id>`
// ```
//
// [CloudAMQP API list instances]: https://docs.cloudamqp.com/#list-instances
//
// [format]: https://developer.hashicorp.com/terraform/language/functions/formatdate#specification-syntax
type MaintenanceWindow struct {
	pulumi.CustomResourceState

	// Allow scheduling of a maintenance for version update
	// once a new LavinMQ version been released.
	AutomaticUpdates pulumi.StringOutput `pulumi:"automaticUpdates"`
	// The CloudAMQP instance ID.
	InstanceId pulumi.IntOutput `pulumi:"instanceId"`
	// Preferred day of the week when to schedule maintenance.
	PreferredDay pulumi.StringPtrOutput `pulumi:"preferredDay"`
	// Preferred time (UTC) of the day when to schedule maintenance.
	PreferredTime pulumi.StringPtrOutput `pulumi:"preferredTime"`
}

// NewMaintenanceWindow registers a new resource with the given unique name, arguments, and options.
func NewMaintenanceWindow(ctx *pulumi.Context,
	name string, args *MaintenanceWindowArgs, opts ...pulumi.ResourceOption) (*MaintenanceWindow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MaintenanceWindow
	err := ctx.RegisterResource("cloudamqp:index/maintenanceWindow:MaintenanceWindow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMaintenanceWindow gets an existing MaintenanceWindow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMaintenanceWindow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MaintenanceWindowState, opts ...pulumi.ResourceOption) (*MaintenanceWindow, error) {
	var resource MaintenanceWindow
	err := ctx.ReadResource("cloudamqp:index/maintenanceWindow:MaintenanceWindow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MaintenanceWindow resources.
type maintenanceWindowState struct {
	// Allow scheduling of a maintenance for version update
	// once a new LavinMQ version been released.
	AutomaticUpdates *string `pulumi:"automaticUpdates"`
	// The CloudAMQP instance ID.
	InstanceId *int `pulumi:"instanceId"`
	// Preferred day of the week when to schedule maintenance.
	PreferredDay *string `pulumi:"preferredDay"`
	// Preferred time (UTC) of the day when to schedule maintenance.
	PreferredTime *string `pulumi:"preferredTime"`
}

type MaintenanceWindowState struct {
	// Allow scheduling of a maintenance for version update
	// once a new LavinMQ version been released.
	AutomaticUpdates pulumi.StringPtrInput
	// The CloudAMQP instance ID.
	InstanceId pulumi.IntPtrInput
	// Preferred day of the week when to schedule maintenance.
	PreferredDay pulumi.StringPtrInput
	// Preferred time (UTC) of the day when to schedule maintenance.
	PreferredTime pulumi.StringPtrInput
}

func (MaintenanceWindowState) ElementType() reflect.Type {
	return reflect.TypeOf((*maintenanceWindowState)(nil)).Elem()
}

type maintenanceWindowArgs struct {
	// Allow scheduling of a maintenance for version update
	// once a new LavinMQ version been released.
	AutomaticUpdates *string `pulumi:"automaticUpdates"`
	// The CloudAMQP instance ID.
	InstanceId int `pulumi:"instanceId"`
	// Preferred day of the week when to schedule maintenance.
	PreferredDay *string `pulumi:"preferredDay"`
	// Preferred time (UTC) of the day when to schedule maintenance.
	PreferredTime *string `pulumi:"preferredTime"`
}

// The set of arguments for constructing a MaintenanceWindow resource.
type MaintenanceWindowArgs struct {
	// Allow scheduling of a maintenance for version update
	// once a new LavinMQ version been released.
	AutomaticUpdates pulumi.StringPtrInput
	// The CloudAMQP instance ID.
	InstanceId pulumi.IntInput
	// Preferred day of the week when to schedule maintenance.
	PreferredDay pulumi.StringPtrInput
	// Preferred time (UTC) of the day when to schedule maintenance.
	PreferredTime pulumi.StringPtrInput
}

func (MaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*maintenanceWindowArgs)(nil)).Elem()
}

type MaintenanceWindowInput interface {
	pulumi.Input

	ToMaintenanceWindowOutput() MaintenanceWindowOutput
	ToMaintenanceWindowOutputWithContext(ctx context.Context) MaintenanceWindowOutput
}

func (*MaintenanceWindow) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindow)(nil)).Elem()
}

func (i *MaintenanceWindow) ToMaintenanceWindowOutput() MaintenanceWindowOutput {
	return i.ToMaintenanceWindowOutputWithContext(context.Background())
}

func (i *MaintenanceWindow) ToMaintenanceWindowOutputWithContext(ctx context.Context) MaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowOutput)
}

// MaintenanceWindowArrayInput is an input type that accepts MaintenanceWindowArray and MaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `MaintenanceWindowArrayInput` via:
//
//	MaintenanceWindowArray{ MaintenanceWindowArgs{...} }
type MaintenanceWindowArrayInput interface {
	pulumi.Input

	ToMaintenanceWindowArrayOutput() MaintenanceWindowArrayOutput
	ToMaintenanceWindowArrayOutputWithContext(context.Context) MaintenanceWindowArrayOutput
}

type MaintenanceWindowArray []MaintenanceWindowInput

func (MaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaintenanceWindow)(nil)).Elem()
}

func (i MaintenanceWindowArray) ToMaintenanceWindowArrayOutput() MaintenanceWindowArrayOutput {
	return i.ToMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i MaintenanceWindowArray) ToMaintenanceWindowArrayOutputWithContext(ctx context.Context) MaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowArrayOutput)
}

// MaintenanceWindowMapInput is an input type that accepts MaintenanceWindowMap and MaintenanceWindowMapOutput values.
// You can construct a concrete instance of `MaintenanceWindowMapInput` via:
//
//	MaintenanceWindowMap{ "key": MaintenanceWindowArgs{...} }
type MaintenanceWindowMapInput interface {
	pulumi.Input

	ToMaintenanceWindowMapOutput() MaintenanceWindowMapOutput
	ToMaintenanceWindowMapOutputWithContext(context.Context) MaintenanceWindowMapOutput
}

type MaintenanceWindowMap map[string]MaintenanceWindowInput

func (MaintenanceWindowMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaintenanceWindow)(nil)).Elem()
}

func (i MaintenanceWindowMap) ToMaintenanceWindowMapOutput() MaintenanceWindowMapOutput {
	return i.ToMaintenanceWindowMapOutputWithContext(context.Background())
}

func (i MaintenanceWindowMap) ToMaintenanceWindowMapOutputWithContext(ctx context.Context) MaintenanceWindowMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowMapOutput)
}

type MaintenanceWindowOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindow)(nil)).Elem()
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowOutput() MaintenanceWindowOutput {
	return o
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowOutputWithContext(ctx context.Context) MaintenanceWindowOutput {
	return o
}

// Allow scheduling of a maintenance for version update
// once a new LavinMQ version been released.
func (o MaintenanceWindowOutput) AutomaticUpdates() pulumi.StringOutput {
	return o.ApplyT(func(v *MaintenanceWindow) pulumi.StringOutput { return v.AutomaticUpdates }).(pulumi.StringOutput)
}

// The CloudAMQP instance ID.
func (o MaintenanceWindowOutput) InstanceId() pulumi.IntOutput {
	return o.ApplyT(func(v *MaintenanceWindow) pulumi.IntOutput { return v.InstanceId }).(pulumi.IntOutput)
}

// Preferred day of the week when to schedule maintenance.
func (o MaintenanceWindowOutput) PreferredDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) pulumi.StringPtrOutput { return v.PreferredDay }).(pulumi.StringPtrOutput)
}

// Preferred time (UTC) of the day when to schedule maintenance.
func (o MaintenanceWindowOutput) PreferredTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) pulumi.StringPtrOutput { return v.PreferredTime }).(pulumi.StringPtrOutput)
}

type MaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaintenanceWindow)(nil)).Elem()
}

func (o MaintenanceWindowArrayOutput) ToMaintenanceWindowArrayOutput() MaintenanceWindowArrayOutput {
	return o
}

func (o MaintenanceWindowArrayOutput) ToMaintenanceWindowArrayOutputWithContext(ctx context.Context) MaintenanceWindowArrayOutput {
	return o
}

func (o MaintenanceWindowArrayOutput) Index(i pulumi.IntInput) MaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MaintenanceWindow {
		return vs[0].([]*MaintenanceWindow)[vs[1].(int)]
	}).(MaintenanceWindowOutput)
}

type MaintenanceWindowMapOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaintenanceWindow)(nil)).Elem()
}

func (o MaintenanceWindowMapOutput) ToMaintenanceWindowMapOutput() MaintenanceWindowMapOutput {
	return o
}

func (o MaintenanceWindowMapOutput) ToMaintenanceWindowMapOutputWithContext(ctx context.Context) MaintenanceWindowMapOutput {
	return o
}

func (o MaintenanceWindowMapOutput) MapIndex(k pulumi.StringInput) MaintenanceWindowOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MaintenanceWindow {
		return vs[0].(map[string]*MaintenanceWindow)[vs[1].(string)]
	}).(MaintenanceWindowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowInput)(nil)).Elem(), &MaintenanceWindow{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowArrayInput)(nil)).Elem(), MaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowMapInput)(nil)).Elem(), MaintenanceWindowMap{})
	pulumi.RegisterOutputType(MaintenanceWindowOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowMapOutput{})
}
