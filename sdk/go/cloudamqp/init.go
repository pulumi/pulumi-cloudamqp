// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudamqp

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "cloudamqp:index/alarm:Alarm":
		r, err = NewAlarm(ctx, name, nil, pulumi.URN_(urn))
	case "cloudamqp:index/instance:Instance":
		r, err = NewInstance(ctx, name, nil, pulumi.URN_(urn))
	case "cloudamqp:index/integrationLog:IntegrationLog":
		r, err = NewIntegrationLog(ctx, name, nil, pulumi.URN_(urn))
	case "cloudamqp:index/integrationMetric:IntegrationMetric":
		r, err = NewIntegrationMetric(ctx, name, nil, pulumi.URN_(urn))
	case "cloudamqp:index/notification:Notification":
		r, err = NewNotification(ctx, name, nil, pulumi.URN_(urn))
	case "cloudamqp:index/plugin:Plugin":
		r, err = NewPlugin(ctx, name, nil, pulumi.URN_(urn))
	case "cloudamqp:index/pluginCommunity:PluginCommunity":
		r, err = NewPluginCommunity(ctx, name, nil, pulumi.URN_(urn))
	case "cloudamqp:index/securityFirewall:SecurityFirewall":
		r, err = NewSecurityFirewall(ctx, name, nil, pulumi.URN_(urn))
	case "cloudamqp:index/vpcPeering:VpcPeering":
		r, err = NewVpcPeering(ctx, name, nil, pulumi.URN_(urn))
	case "cloudamqp:index/webhook:Webhook":
		r, err = NewWebhook(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:cloudamqp" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	return NewProvider(ctx, name, nil, pulumi.URN_(urn))
}

func init() {
	version, err := PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/alarm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/instance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/integrationLog",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/integrationMetric",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/notification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/plugin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/pluginCommunity",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/securityFirewall",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/vpcPeering",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudamqp",
		"index/webhook",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"cloudamqp",
		&pkg{version},
	)
}
