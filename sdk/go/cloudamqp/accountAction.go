// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudamqp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Not possible to import this resource.
type AccountAction struct {
	pulumi.CustomResourceState

	// The action to be invoked. Allowed actions `rotate-password`, `rotate-apikey`.
	Action pulumi.StringOutput `pulumi:"action"`
	// The CloudAMQP instance ID.
	InstanceId pulumi.IntOutput `pulumi:"instanceId"`
}

// NewAccountAction registers a new resource with the given unique name, arguments, and options.
func NewAccountAction(ctx *pulumi.Context,
	name string, args *AccountActionArgs, opts ...pulumi.ResourceOption) (*AccountAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountAction
	err := ctx.RegisterResource("cloudamqp:index/accountAction:AccountAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountAction gets an existing AccountAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountActionState, opts ...pulumi.ResourceOption) (*AccountAction, error) {
	var resource AccountAction
	err := ctx.ReadResource("cloudamqp:index/accountAction:AccountAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountAction resources.
type accountActionState struct {
	// The action to be invoked. Allowed actions `rotate-password`, `rotate-apikey`.
	Action *string `pulumi:"action"`
	// The CloudAMQP instance ID.
	InstanceId *int `pulumi:"instanceId"`
}

type AccountActionState struct {
	// The action to be invoked. Allowed actions `rotate-password`, `rotate-apikey`.
	Action pulumi.StringPtrInput
	// The CloudAMQP instance ID.
	InstanceId pulumi.IntPtrInput
}

func (AccountActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountActionState)(nil)).Elem()
}

type accountActionArgs struct {
	// The action to be invoked. Allowed actions `rotate-password`, `rotate-apikey`.
	Action string `pulumi:"action"`
	// The CloudAMQP instance ID.
	InstanceId int `pulumi:"instanceId"`
}

// The set of arguments for constructing a AccountAction resource.
type AccountActionArgs struct {
	// The action to be invoked. Allowed actions `rotate-password`, `rotate-apikey`.
	Action pulumi.StringInput
	// The CloudAMQP instance ID.
	InstanceId pulumi.IntInput
}

func (AccountActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountActionArgs)(nil)).Elem()
}

type AccountActionInput interface {
	pulumi.Input

	ToAccountActionOutput() AccountActionOutput
	ToAccountActionOutputWithContext(ctx context.Context) AccountActionOutput
}

func (*AccountAction) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAction)(nil)).Elem()
}

func (i *AccountAction) ToAccountActionOutput() AccountActionOutput {
	return i.ToAccountActionOutputWithContext(context.Background())
}

func (i *AccountAction) ToAccountActionOutputWithContext(ctx context.Context) AccountActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountActionOutput)
}

// AccountActionArrayInput is an input type that accepts AccountActionArray and AccountActionArrayOutput values.
// You can construct a concrete instance of `AccountActionArrayInput` via:
//
//	AccountActionArray{ AccountActionArgs{...} }
type AccountActionArrayInput interface {
	pulumi.Input

	ToAccountActionArrayOutput() AccountActionArrayOutput
	ToAccountActionArrayOutputWithContext(context.Context) AccountActionArrayOutput
}

type AccountActionArray []AccountActionInput

func (AccountActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAction)(nil)).Elem()
}

func (i AccountActionArray) ToAccountActionArrayOutput() AccountActionArrayOutput {
	return i.ToAccountActionArrayOutputWithContext(context.Background())
}

func (i AccountActionArray) ToAccountActionArrayOutputWithContext(ctx context.Context) AccountActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountActionArrayOutput)
}

// AccountActionMapInput is an input type that accepts AccountActionMap and AccountActionMapOutput values.
// You can construct a concrete instance of `AccountActionMapInput` via:
//
//	AccountActionMap{ "key": AccountActionArgs{...} }
type AccountActionMapInput interface {
	pulumi.Input

	ToAccountActionMapOutput() AccountActionMapOutput
	ToAccountActionMapOutputWithContext(context.Context) AccountActionMapOutput
}

type AccountActionMap map[string]AccountActionInput

func (AccountActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAction)(nil)).Elem()
}

func (i AccountActionMap) ToAccountActionMapOutput() AccountActionMapOutput {
	return i.ToAccountActionMapOutputWithContext(context.Background())
}

func (i AccountActionMap) ToAccountActionMapOutputWithContext(ctx context.Context) AccountActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountActionMapOutput)
}

type AccountActionOutput struct{ *pulumi.OutputState }

func (AccountActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAction)(nil)).Elem()
}

func (o AccountActionOutput) ToAccountActionOutput() AccountActionOutput {
	return o
}

func (o AccountActionOutput) ToAccountActionOutputWithContext(ctx context.Context) AccountActionOutput {
	return o
}

// The action to be invoked. Allowed actions `rotate-password`, `rotate-apikey`.
func (o AccountActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAction) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// The CloudAMQP instance ID.
func (o AccountActionOutput) InstanceId() pulumi.IntOutput {
	return o.ApplyT(func(v *AccountAction) pulumi.IntOutput { return v.InstanceId }).(pulumi.IntOutput)
}

type AccountActionArrayOutput struct{ *pulumi.OutputState }

func (AccountActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAction)(nil)).Elem()
}

func (o AccountActionArrayOutput) ToAccountActionArrayOutput() AccountActionArrayOutput {
	return o
}

func (o AccountActionArrayOutput) ToAccountActionArrayOutputWithContext(ctx context.Context) AccountActionArrayOutput {
	return o
}

func (o AccountActionArrayOutput) Index(i pulumi.IntInput) AccountActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountAction {
		return vs[0].([]*AccountAction)[vs[1].(int)]
	}).(AccountActionOutput)
}

type AccountActionMapOutput struct{ *pulumi.OutputState }

func (AccountActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAction)(nil)).Elem()
}

func (o AccountActionMapOutput) ToAccountActionMapOutput() AccountActionMapOutput {
	return o
}

func (o AccountActionMapOutput) ToAccountActionMapOutputWithContext(ctx context.Context) AccountActionMapOutput {
	return o
}

func (o AccountActionMapOutput) MapIndex(k pulumi.StringInput) AccountActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountAction {
		return vs[0].(map[string]*AccountAction)[vs[1].(string)]
	}).(AccountActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountActionInput)(nil)).Elem(), &AccountAction{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountActionArrayInput)(nil)).Elem(), AccountActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountActionMapInput)(nil)).Elem(), AccountActionMap{})
	pulumi.RegisterOutputType(AccountActionOutput{})
	pulumi.RegisterOutputType(AccountActionArrayOutput{})
	pulumi.RegisterOutputType(AccountActionMapOutput{})
}
