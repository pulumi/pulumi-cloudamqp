// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudamqp

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// This resource allows you to configure and manage firewall rules for the CloudAMQP instance. Beware that all rules need to be present, since all older configurations will be overwritten.
//
// Only available for dedicated subscription plans.
//
// ## Depedency
//
// This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
//
// ## Import
//
// `cloudamqp_security_firewall` can be imported using CloudAMQP instance identifier.
//
// ```sh
//  $ pulumi import cloudamqp:index/securityFirewall:SecurityFirewall firewall <instance_id>`
// ```
type SecurityFirewall struct {
	pulumi.CustomResourceState

	// The CloudAMQP instance ID.
	InstanceId pulumi.IntOutput `pulumi:"instanceId"`
	// An array of rules, minimum of 1 needs to be configured. Each `rules` block consists of the field documented below.
	Rules SecurityFirewallRuleArrayOutput `pulumi:"rules"`
}

// NewSecurityFirewall registers a new resource with the given unique name, arguments, and options.
func NewSecurityFirewall(ctx *pulumi.Context,
	name string, args *SecurityFirewallArgs, opts ...pulumi.ResourceOption) (*SecurityFirewall, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	var resource SecurityFirewall
	err := ctx.RegisterResource("cloudamqp:index/securityFirewall:SecurityFirewall", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityFirewall gets an existing SecurityFirewall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityFirewall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityFirewallState, opts ...pulumi.ResourceOption) (*SecurityFirewall, error) {
	var resource SecurityFirewall
	err := ctx.ReadResource("cloudamqp:index/securityFirewall:SecurityFirewall", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityFirewall resources.
type securityFirewallState struct {
	// The CloudAMQP instance ID.
	InstanceId *int `pulumi:"instanceId"`
	// An array of rules, minimum of 1 needs to be configured. Each `rules` block consists of the field documented below.
	Rules []SecurityFirewallRule `pulumi:"rules"`
}

type SecurityFirewallState struct {
	// The CloudAMQP instance ID.
	InstanceId pulumi.IntPtrInput
	// An array of rules, minimum of 1 needs to be configured. Each `rules` block consists of the field documented below.
	Rules SecurityFirewallRuleArrayInput
}

func (SecurityFirewallState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityFirewallState)(nil)).Elem()
}

type securityFirewallArgs struct {
	// The CloudAMQP instance ID.
	InstanceId int `pulumi:"instanceId"`
	// An array of rules, minimum of 1 needs to be configured. Each `rules` block consists of the field documented below.
	Rules []SecurityFirewallRule `pulumi:"rules"`
}

// The set of arguments for constructing a SecurityFirewall resource.
type SecurityFirewallArgs struct {
	// The CloudAMQP instance ID.
	InstanceId pulumi.IntInput
	// An array of rules, minimum of 1 needs to be configured. Each `rules` block consists of the field documented below.
	Rules SecurityFirewallRuleArrayInput
}

func (SecurityFirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityFirewallArgs)(nil)).Elem()
}

type SecurityFirewallInput interface {
	pulumi.Input

	ToSecurityFirewallOutput() SecurityFirewallOutput
	ToSecurityFirewallOutputWithContext(ctx context.Context) SecurityFirewallOutput
}

func (SecurityFirewall) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityFirewall)(nil)).Elem()
}

func (i SecurityFirewall) ToSecurityFirewallOutput() SecurityFirewallOutput {
	return i.ToSecurityFirewallOutputWithContext(context.Background())
}

func (i SecurityFirewall) ToSecurityFirewallOutputWithContext(ctx context.Context) SecurityFirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityFirewallOutput)
}

type SecurityFirewallOutput struct {
	*pulumi.OutputState
}

func (SecurityFirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityFirewallOutput)(nil)).Elem()
}

func (o SecurityFirewallOutput) ToSecurityFirewallOutput() SecurityFirewallOutput {
	return o
}

func (o SecurityFirewallOutput) ToSecurityFirewallOutputWithContext(ctx context.Context) SecurityFirewallOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SecurityFirewallOutput{})
}
