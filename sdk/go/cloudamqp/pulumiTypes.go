// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package cloudamqp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SecurityFirewallRule struct {
	Ip       string   `pulumi:"ip"`
	Ports    []int    `pulumi:"ports"`
	Services []string `pulumi:"services"`
}

type SecurityFirewallRuleInput interface {
	pulumi.Input

	ToSecurityFirewallRuleOutput() SecurityFirewallRuleOutput
	ToSecurityFirewallRuleOutputWithContext(context.Context) SecurityFirewallRuleOutput
}

type SecurityFirewallRuleArgs struct {
	Ip       pulumi.StringInput      `pulumi:"ip"`
	Ports    pulumi.IntArrayInput    `pulumi:"ports"`
	Services pulumi.StringArrayInput `pulumi:"services"`
}

func (SecurityFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityFirewallRule)(nil)).Elem()
}

func (i SecurityFirewallRuleArgs) ToSecurityFirewallRuleOutput() SecurityFirewallRuleOutput {
	return i.ToSecurityFirewallRuleOutputWithContext(context.Background())
}

func (i SecurityFirewallRuleArgs) ToSecurityFirewallRuleOutputWithContext(ctx context.Context) SecurityFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityFirewallRuleOutput)
}

type SecurityFirewallRuleArrayInput interface {
	pulumi.Input

	ToSecurityFirewallRuleArrayOutput() SecurityFirewallRuleArrayOutput
	ToSecurityFirewallRuleArrayOutputWithContext(context.Context) SecurityFirewallRuleArrayOutput
}

type SecurityFirewallRuleArray []SecurityFirewallRuleInput

func (SecurityFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityFirewallRule)(nil)).Elem()
}

func (i SecurityFirewallRuleArray) ToSecurityFirewallRuleArrayOutput() SecurityFirewallRuleArrayOutput {
	return i.ToSecurityFirewallRuleArrayOutputWithContext(context.Background())
}

func (i SecurityFirewallRuleArray) ToSecurityFirewallRuleArrayOutputWithContext(ctx context.Context) SecurityFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityFirewallRuleArrayOutput)
}

type SecurityFirewallRuleOutput struct{ *pulumi.OutputState }

func (SecurityFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityFirewallRule)(nil)).Elem()
}

func (o SecurityFirewallRuleOutput) ToSecurityFirewallRuleOutput() SecurityFirewallRuleOutput {
	return o
}

func (o SecurityFirewallRuleOutput) ToSecurityFirewallRuleOutputWithContext(ctx context.Context) SecurityFirewallRuleOutput {
	return o
}

func (o SecurityFirewallRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityFirewallRule) string { return v.Ip }).(pulumi.StringOutput)
}

func (o SecurityFirewallRuleOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SecurityFirewallRule) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

func (o SecurityFirewallRuleOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityFirewallRule) []string { return v.Services }).(pulumi.StringArrayOutput)
}

type SecurityFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityFirewallRule)(nil)).Elem()
}

func (o SecurityFirewallRuleArrayOutput) ToSecurityFirewallRuleArrayOutput() SecurityFirewallRuleArrayOutput {
	return o
}

func (o SecurityFirewallRuleArrayOutput) ToSecurityFirewallRuleArrayOutputWithContext(ctx context.Context) SecurityFirewallRuleArrayOutput {
	return o
}

func (o SecurityFirewallRuleArrayOutput) Index(i pulumi.IntInput) SecurityFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityFirewallRule {
		return vs[0].([]SecurityFirewallRule)[vs[1].(int)]
	}).(SecurityFirewallRuleOutput)
}

type GetPluginsCommunityPlugin struct {
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
	Require     *string `pulumi:"require"`
}

type GetPluginsCommunityPluginInput interface {
	pulumi.Input

	ToGetPluginsCommunityPluginOutput() GetPluginsCommunityPluginOutput
	ToGetPluginsCommunityPluginOutputWithContext(context.Context) GetPluginsCommunityPluginOutput
}

type GetPluginsCommunityPluginArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	Require     pulumi.StringPtrInput `pulumi:"require"`
}

func (GetPluginsCommunityPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginsCommunityPlugin)(nil)).Elem()
}

func (i GetPluginsCommunityPluginArgs) ToGetPluginsCommunityPluginOutput() GetPluginsCommunityPluginOutput {
	return i.ToGetPluginsCommunityPluginOutputWithContext(context.Background())
}

func (i GetPluginsCommunityPluginArgs) ToGetPluginsCommunityPluginOutputWithContext(ctx context.Context) GetPluginsCommunityPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPluginsCommunityPluginOutput)
}

type GetPluginsCommunityPluginArrayInput interface {
	pulumi.Input

	ToGetPluginsCommunityPluginArrayOutput() GetPluginsCommunityPluginArrayOutput
	ToGetPluginsCommunityPluginArrayOutputWithContext(context.Context) GetPluginsCommunityPluginArrayOutput
}

type GetPluginsCommunityPluginArray []GetPluginsCommunityPluginInput

func (GetPluginsCommunityPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPluginsCommunityPlugin)(nil)).Elem()
}

func (i GetPluginsCommunityPluginArray) ToGetPluginsCommunityPluginArrayOutput() GetPluginsCommunityPluginArrayOutput {
	return i.ToGetPluginsCommunityPluginArrayOutputWithContext(context.Background())
}

func (i GetPluginsCommunityPluginArray) ToGetPluginsCommunityPluginArrayOutputWithContext(ctx context.Context) GetPluginsCommunityPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPluginsCommunityPluginArrayOutput)
}

type GetPluginsCommunityPluginOutput struct{ *pulumi.OutputState }

func (GetPluginsCommunityPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginsCommunityPlugin)(nil)).Elem()
}

func (o GetPluginsCommunityPluginOutput) ToGetPluginsCommunityPluginOutput() GetPluginsCommunityPluginOutput {
	return o
}

func (o GetPluginsCommunityPluginOutput) ToGetPluginsCommunityPluginOutputWithContext(ctx context.Context) GetPluginsCommunityPluginOutput {
	return o
}

func (o GetPluginsCommunityPluginOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginsCommunityPlugin) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetPluginsCommunityPluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginsCommunityPlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetPluginsCommunityPluginOutput) Require() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginsCommunityPlugin) *string { return v.Require }).(pulumi.StringPtrOutput)
}

type GetPluginsCommunityPluginArrayOutput struct{ *pulumi.OutputState }

func (GetPluginsCommunityPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPluginsCommunityPlugin)(nil)).Elem()
}

func (o GetPluginsCommunityPluginArrayOutput) ToGetPluginsCommunityPluginArrayOutput() GetPluginsCommunityPluginArrayOutput {
	return o
}

func (o GetPluginsCommunityPluginArrayOutput) ToGetPluginsCommunityPluginArrayOutputWithContext(ctx context.Context) GetPluginsCommunityPluginArrayOutput {
	return o
}

func (o GetPluginsCommunityPluginArrayOutput) Index(i pulumi.IntInput) GetPluginsCommunityPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPluginsCommunityPlugin {
		return vs[0].([]GetPluginsCommunityPlugin)[vs[1].(int)]
	}).(GetPluginsCommunityPluginOutput)
}

type GetPluginsPlugin struct {
	Description *string `pulumi:"description"`
	Enabled     *bool   `pulumi:"enabled"`
	Name        *string `pulumi:"name"`
	Version     *string `pulumi:"version"`
}

type GetPluginsPluginInput interface {
	pulumi.Input

	ToGetPluginsPluginOutput() GetPluginsPluginOutput
	ToGetPluginsPluginOutputWithContext(context.Context) GetPluginsPluginOutput
}

type GetPluginsPluginArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Enabled     pulumi.BoolPtrInput   `pulumi:"enabled"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	Version     pulumi.StringPtrInput `pulumi:"version"`
}

func (GetPluginsPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginsPlugin)(nil)).Elem()
}

func (i GetPluginsPluginArgs) ToGetPluginsPluginOutput() GetPluginsPluginOutput {
	return i.ToGetPluginsPluginOutputWithContext(context.Background())
}

func (i GetPluginsPluginArgs) ToGetPluginsPluginOutputWithContext(ctx context.Context) GetPluginsPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPluginsPluginOutput)
}

type GetPluginsPluginArrayInput interface {
	pulumi.Input

	ToGetPluginsPluginArrayOutput() GetPluginsPluginArrayOutput
	ToGetPluginsPluginArrayOutputWithContext(context.Context) GetPluginsPluginArrayOutput
}

type GetPluginsPluginArray []GetPluginsPluginInput

func (GetPluginsPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPluginsPlugin)(nil)).Elem()
}

func (i GetPluginsPluginArray) ToGetPluginsPluginArrayOutput() GetPluginsPluginArrayOutput {
	return i.ToGetPluginsPluginArrayOutputWithContext(context.Background())
}

func (i GetPluginsPluginArray) ToGetPluginsPluginArrayOutputWithContext(ctx context.Context) GetPluginsPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPluginsPluginArrayOutput)
}

type GetPluginsPluginOutput struct{ *pulumi.OutputState }

func (GetPluginsPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginsPlugin)(nil)).Elem()
}

func (o GetPluginsPluginOutput) ToGetPluginsPluginOutput() GetPluginsPluginOutput {
	return o
}

func (o GetPluginsPluginOutput) ToGetPluginsPluginOutputWithContext(ctx context.Context) GetPluginsPluginOutput {
	return o
}

func (o GetPluginsPluginOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginsPlugin) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetPluginsPluginOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPluginsPlugin) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o GetPluginsPluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginsPlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetPluginsPluginOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPluginsPlugin) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetPluginsPluginArrayOutput struct{ *pulumi.OutputState }

func (GetPluginsPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPluginsPlugin)(nil)).Elem()
}

func (o GetPluginsPluginArrayOutput) ToGetPluginsPluginArrayOutput() GetPluginsPluginArrayOutput {
	return o
}

func (o GetPluginsPluginArrayOutput) ToGetPluginsPluginArrayOutputWithContext(ctx context.Context) GetPluginsPluginArrayOutput {
	return o
}

func (o GetPluginsPluginArrayOutput) Index(i pulumi.IntInput) GetPluginsPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPluginsPlugin {
		return vs[0].([]GetPluginsPlugin)[vs[1].(int)]
	}).(GetPluginsPluginOutput)
}

func init() {
	pulumi.RegisterOutputType(SecurityFirewallRuleOutput{})
	pulumi.RegisterOutputType(SecurityFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPluginsCommunityPluginOutput{})
	pulumi.RegisterOutputType(GetPluginsCommunityPluginArrayOutput{})
	pulumi.RegisterOutputType(GetPluginsPluginOutput{})
	pulumi.RegisterOutputType(GetPluginsPluginArrayOutput{})
}
