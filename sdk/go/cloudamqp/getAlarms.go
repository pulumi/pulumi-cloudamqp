// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudamqp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve a list of default or created alarms.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudamqp.GetAlarms(ctx, &cloudamqp.GetAlarmsArgs{
//				InstanceId: instance.Id,
//				Type:       pulumi.StringRef("queue"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Dependency
//
// This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
//
// ## Alarm Types
//
// `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
func GetAlarms(ctx *pulumi.Context, args *GetAlarmsArgs, opts ...pulumi.InvokeOption) (*GetAlarmsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAlarmsResult
	err := ctx.Invoke("cloudamqp:index/getAlarms:getAlarms", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlarms.
type GetAlarmsArgs struct {
	// The CloudAMQP instance identifier.
	InstanceId int `pulumi:"instanceId"`
	// The alarm type to filter for. Supported
	// alarm types.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getAlarms.
type GetAlarmsResult struct {
	// List of alarms (see below for nested schema)
	Alarms []GetAlarmsAlarm `pulumi:"alarms"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId int    `pulumi:"instanceId"`
	// The type of the alarm.
	Type *string `pulumi:"type"`
}

func GetAlarmsOutput(ctx *pulumi.Context, args GetAlarmsOutputArgs, opts ...pulumi.InvokeOption) GetAlarmsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAlarmsResultOutput, error) {
			args := v.(GetAlarmsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudamqp:index/getAlarms:getAlarms", args, GetAlarmsResultOutput{}, options).(GetAlarmsResultOutput), nil
		}).(GetAlarmsResultOutput)
}

// A collection of arguments for invoking getAlarms.
type GetAlarmsOutputArgs struct {
	// The CloudAMQP instance identifier.
	InstanceId pulumi.IntInput `pulumi:"instanceId"`
	// The alarm type to filter for. Supported
	// alarm types.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetAlarmsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmsArgs)(nil)).Elem()
}

// A collection of values returned by getAlarms.
type GetAlarmsResultOutput struct{ *pulumi.OutputState }

func (GetAlarmsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmsResult)(nil)).Elem()
}

func (o GetAlarmsResultOutput) ToGetAlarmsResultOutput() GetAlarmsResultOutput {
	return o
}

func (o GetAlarmsResultOutput) ToGetAlarmsResultOutputWithContext(ctx context.Context) GetAlarmsResultOutput {
	return o
}

// List of alarms (see below for nested schema)
func (o GetAlarmsResultOutput) Alarms() GetAlarmsAlarmArrayOutput {
	return o.ApplyT(func(v GetAlarmsResult) []GetAlarmsAlarm { return v.Alarms }).(GetAlarmsAlarmArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlarmsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAlarmsResultOutput) InstanceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlarmsResult) int { return v.InstanceId }).(pulumi.IntOutput)
}

// The type of the alarm.
func (o GetAlarmsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlarmsResultOutput{})
}
