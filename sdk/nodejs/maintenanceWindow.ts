// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource allows you to set the preferred start of new scheduled maintenances. The maintenance
 * windows are 3 hours long and CloudAMQP attempts to begin the maintenance as close as possible to the
 * preferred start. A maintenance will never start before the window.
 *
 * Available for dedicated subscription plans.
 *
 * ## Example Usage
 *
 * <details>
 *   <summary>
 *     <b>Set the preferred maintenance start</b>
 *   </summary>
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const _this = new cloudamqp.MaintenanceWindow("this", {
 *     instanceId: instance.id,
 *     preferredDay: "Monday",
 *     preferredTime: "23:00",
 * });
 * ```
 *
 * </details>
 *
 * <details>
 *   <summary>
 *     <b>Set the preferred maintenance start with automatic updates</b>
 *   </summary>
 *
 * When setting the automatic updates to "on", a maintenance for version update will be scheduled once
 * a new LavinMQ version been released.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const _this = new cloudamqp.MaintenanceWindow("this", {
 *     instanceId: instance.id,
 *     preferredDay: "Monday",
 *     preferredTime: "23:00",
 *     automaticUpdates: "on",
 * });
 * ```
 *
 * </details>
 *
 * <details>
 *   <summary>
 *     <b>Only set preferred time of day</b>
 *   </summary>
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const _this = new cloudamqp.MaintenanceWindow("this", {
 *     instanceId: instance.id,
 *     preferredTime: "23:00",
 * });
 * ```
 *
 * </details>
 *
 * <details>
 *   <summary>
 *     <b>Only set preferred day of week</b>
 *   </summary>
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const _this = new cloudamqp.MaintenanceWindow("this", {
 *     instanceId: instance.id,
 *     preferredDay: "Monday",
 * });
 * ```
 *
 * </details>
 *
 * ## Dependency
 *
 * This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 *
 * ## Import
 *
 * `cloudamqp_maintenance_window` can be imported using CloudAMQP instance identifier. To retrieve the
 *
 * identifier of an instance, use [CloudAMQP API list instances].
 *
 * From Terraform v1.5.0, the `import` block can be used to import this resource:
 *
 * hcl
 *
 * import {
 *
 *   to = cloudamqp_maintenance_window.this
 *
 *   id = cloudamqp_instance.instance.id
 *
 * }
 *
 * Or with Terraform CLI:
 *
 * ```sh
 * $ pulumi import cloudamqp:index/maintenanceWindow:MaintenanceWindow this <id>`
 * ```
 *
 * [CloudAMQP API list instances]: https://docs.cloudamqp.com/#list-instances
 *
 * [format]: https://developer.hashicorp.com/terraform/language/functions/formatdate#specification-syntax
 */
export class MaintenanceWindow extends pulumi.CustomResource {
    /**
     * Get an existing MaintenanceWindow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MaintenanceWindowState, opts?: pulumi.CustomResourceOptions): MaintenanceWindow {
        return new MaintenanceWindow(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudamqp:index/maintenanceWindow:MaintenanceWindow';

    /**
     * Returns true if the given object is an instance of MaintenanceWindow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MaintenanceWindow {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MaintenanceWindow.__pulumiType;
    }

    /**
     * Allow scheduling of a maintenance for version update
     * once a new LavinMQ version been released.
     */
    public readonly automaticUpdates!: pulumi.Output<string>;
    /**
     * The CloudAMQP instance ID.
     */
    public readonly instanceId!: pulumi.Output<number>;
    /**
     * Preferred day of the week when to schedule maintenance.
     */
    public readonly preferredDay!: pulumi.Output<string | undefined>;
    /**
     * Preferred time (UTC) of the day when to schedule maintenance.
     */
    public readonly preferredTime!: pulumi.Output<string | undefined>;

    /**
     * Create a MaintenanceWindow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MaintenanceWindowArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MaintenanceWindowArgs | MaintenanceWindowState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MaintenanceWindowState | undefined;
            resourceInputs["automaticUpdates"] = state ? state.automaticUpdates : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["preferredDay"] = state ? state.preferredDay : undefined;
            resourceInputs["preferredTime"] = state ? state.preferredTime : undefined;
        } else {
            const args = argsOrState as MaintenanceWindowArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["automaticUpdates"] = args ? args.automaticUpdates : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["preferredDay"] = args ? args.preferredDay : undefined;
            resourceInputs["preferredTime"] = args ? args.preferredTime : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MaintenanceWindow.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MaintenanceWindow resources.
 */
export interface MaintenanceWindowState {
    /**
     * Allow scheduling of a maintenance for version update
     * once a new LavinMQ version been released.
     */
    automaticUpdates?: pulumi.Input<string>;
    /**
     * The CloudAMQP instance ID.
     */
    instanceId?: pulumi.Input<number>;
    /**
     * Preferred day of the week when to schedule maintenance.
     */
    preferredDay?: pulumi.Input<string>;
    /**
     * Preferred time (UTC) of the day when to schedule maintenance.
     */
    preferredTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MaintenanceWindow resource.
 */
export interface MaintenanceWindowArgs {
    /**
     * Allow scheduling of a maintenance for version update
     * once a new LavinMQ version been released.
     */
    automaticUpdates?: pulumi.Input<string>;
    /**
     * The CloudAMQP instance ID.
     */
    instanceId: pulumi.Input<number>;
    /**
     * Preferred day of the week when to schedule maintenance.
     */
    preferredDay?: pulumi.Input<string>;
    /**
     * Preferred time (UTC) of the day when to schedule maintenance.
     */
    preferredTime?: pulumi.Input<string>;
}
