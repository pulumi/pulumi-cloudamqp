// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about default or created alarms. Either use `alarmId` or `type` to retrieve the alarm.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const defaultCpuAlarm = cloudamqp.getAlarm({
 *     instanceId: cloudamqp_instance.instance.id,
 *     type: "cpu",
 * });
 * ```
 * ## Argument reference
 *
 * * `instanceId` - (Required) The CloudAMQP instance identifier.
 * * `alarmId`    - (Optional) The alarm identifier. Either use this or `type` to give `cloudamqp.Alarm` necessary information to retrieve the alarm.
 * * `type`        - (Optional) The alarm type. Either use this or `alarmId` to give `cloudamqp.Alarm` necessary information when retrieve the alarm.
 *
 * ## Attributes reference
 *
 * All attributes reference are computed
 *
 * * `id`              - The identifier for this resource.
 * * `enabled`         - Enable/disable status of the alarm.
 * * `valueThreshold` - The value threshold that triggers the alarm.
 * * `timeThreshold`  - The time interval (in seconds) the `valueThreshold` should be active before trigger an alarm.
 * * `queueRegex`     - Regular expression for which queue to check.
 * * `vhostRegex`     - Regular expression for which vhost to check
 * * `recipients`      - Identifier for recipient to be notified.
 * * `messageType`    - Message type `(total, unacked, ready)` used by queue alarm type.
 *
 * ## Dependency
 *
 * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 */
export function getAlarm(args: GetAlarmArgs, opts?: pulumi.InvokeOptions): Promise<GetAlarmResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("cloudamqp:index/getAlarm:getAlarm", {
        "alarmId": args.alarmId,
        "instanceId": args.instanceId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlarm.
 */
export interface GetAlarmArgs {
    alarmId?: number;
    instanceId: number;
    type?: string;
}

/**
 * A collection of values returned by getAlarm.
 */
export interface GetAlarmResult {
    readonly alarmId?: number;
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: number;
    readonly messageType: string;
    readonly queueRegex: string;
    readonly recipients: number[];
    readonly timeThreshold: number;
    readonly type?: string;
    readonly valueThreshold: number;
    readonly vhostRegex: string;
}
