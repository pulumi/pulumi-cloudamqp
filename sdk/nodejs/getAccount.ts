// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve basic information about all instances available for an account. Uses the included apikey in provider configuration, to determine which account to read from.
 *
 * ## Example Usage
 *
 * Can be used in other resources/data sources when instance identifier is unknown, while other attributes are known. E.g. find correct instance from `instance name`. Then iterate over instances to find the matching one and extract the instance identifier.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const instanceName = "<instance_name>";
 * const account = cloudamqp.getAccount({});
 * const credentials = account.then(account => cloudamqp.getCredentials({
 *     instanceId: account.instances.filter(instance => instance.name == instanceName).map(instance => instance)[0].id,
 * }));
 * ```
 * ## Attributes reference
 *
 * All attributes reference are computed
 *
 * * `id`      - The identifier for this resource. Set to `na` since there is no unique identifier.
 * * `name`    - The name of the instance.
 * * `plan`    - The subscription plan used for the instance.
 * * `region`  - The region were the instanece is located in.
 * * `tags`    - The tags set for the instance.
 *
 * ## Dependency
 *
 * This data source depends on apikey set in the provider configuration.
 */
export function getAccount(opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("cloudamqp:index/getAccount:getAccount", {
    }, opts);
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instances: outputs.GetAccountInstance[];
}
