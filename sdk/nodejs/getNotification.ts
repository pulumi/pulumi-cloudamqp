// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about default or created recipients. The recipient will receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use `recipientId` or `name`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const defaultRecipient = cloudamqp.getNotification({
 *     instanceId: instance.id,
 *     name: "default",
 * });
 * ```
 *
 * ## Attributes reference
 *
 * All attributes reference are computed
 *
 * * `id`    - The identifier for this resource.
 * * `type`  - The type of the recipient.
 * * `value` - The notification endpoint, where to send the notification.
 * * `options`- Options argument (e.g. `rk` used for VictorOps routing key).
 *
 * ## Dependency
 *
 * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 */
export function getNotification(args: GetNotificationArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudamqp:index/getNotification:getNotification", {
        "instanceId": args.instanceId,
        "name": args.name,
        "options": args.options,
        "recipientId": args.recipientId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNotification.
 */
export interface GetNotificationArgs {
    /**
     * The CloudAMQP instance identifier.
     */
    instanceId: number;
    /**
     * The name set for the recipient.
     */
    name?: string;
    options?: {[key: string]: string};
    /**
     * The recipient identifier.
     */
    recipientId?: number;
}

/**
 * A collection of values returned by getNotification.
 */
export interface GetNotificationResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: number;
    readonly name?: string;
    readonly options?: {[key: string]: string};
    readonly recipientId?: number;
    readonly type: string;
    readonly value: string;
}
/**
 * Use this data source to retrieve information about default or created recipients. The recipient will receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use `recipientId` or `name`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const defaultRecipient = cloudamqp.getNotification({
 *     instanceId: instance.id,
 *     name: "default",
 * });
 * ```
 *
 * ## Attributes reference
 *
 * All attributes reference are computed
 *
 * * `id`    - The identifier for this resource.
 * * `type`  - The type of the recipient.
 * * `value` - The notification endpoint, where to send the notification.
 * * `options`- Options argument (e.g. `rk` used for VictorOps routing key).
 *
 * ## Dependency
 *
 * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 */
export function getNotificationOutput(args: GetNotificationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationResult> {
    return pulumi.output(args).apply((a: any) => getNotification(a, opts))
}

/**
 * A collection of arguments for invoking getNotification.
 */
export interface GetNotificationOutputArgs {
    /**
     * The CloudAMQP instance identifier.
     */
    instanceId: pulumi.Input<number>;
    /**
     * The name set for the recipient.
     */
    name?: pulumi.Input<string>;
    options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The recipient identifier.
     */
    recipientId?: pulumi.Input<number>;
}
