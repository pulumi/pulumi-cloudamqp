// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about the node(s) created by CloudAMQP instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const nodes = cloudamqp.getNodes({
 *     instanceId: instance.id,
 * });
 * ```
 *
 * ## Attributes reference
 *
 * All attributes reference are computed
 *
 * * `id`    - The identifier for this resource.
 * * `nodes` - An array of node information. Each `nodes` block consists of the fields documented below.
 *
 * ***
 *
 * The `nodes` block consist of
 *
 * * `hostname`              - External hostname assigned to the node.
 * * `hostnameInternal`     - Internal hostname assigned to the node.
 * * `name`                  - Name of the node.
 * * `running`               - Is the node running?
 * * `rabbitmqVersion`      - Currently configured Rabbit MQ version on the node.
 * * `erlangVersion`        - Currently used Erlang version on the node.
 * * `hipe`                  - Enable or disable High-performance Erlang.
 * * `configured`            - Is the node configured?
 * * `diskSize`             - Subscription plan disk size
 * * `additionalDiskSize`  - Additional added disk size
 * * `availabilityZone`     - Availability zone the node is hosted in.
 *
 * ***Note:*** *Total disk size = diskSize + additional_disk_size*
 *
 * ## Dependency
 *
 * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 */
export function getNodes(args: GetNodesArgs, opts?: pulumi.InvokeOptions): Promise<GetNodesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudamqp:index/getNodes:getNodes", {
        "instanceId": args.instanceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodes.
 */
export interface GetNodesArgs {
    /**
     * The CloudAMQP instance identifier.
     */
    instanceId: number;
}

/**
 * A collection of values returned by getNodes.
 */
export interface GetNodesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: number;
    readonly nodes: outputs.GetNodesNode[];
}
/**
 * Use this data source to retrieve information about the node(s) created by CloudAMQP instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const nodes = cloudamqp.getNodes({
 *     instanceId: instance.id,
 * });
 * ```
 *
 * ## Attributes reference
 *
 * All attributes reference are computed
 *
 * * `id`    - The identifier for this resource.
 * * `nodes` - An array of node information. Each `nodes` block consists of the fields documented below.
 *
 * ***
 *
 * The `nodes` block consist of
 *
 * * `hostname`              - External hostname assigned to the node.
 * * `hostnameInternal`     - Internal hostname assigned to the node.
 * * `name`                  - Name of the node.
 * * `running`               - Is the node running?
 * * `rabbitmqVersion`      - Currently configured Rabbit MQ version on the node.
 * * `erlangVersion`        - Currently used Erlang version on the node.
 * * `hipe`                  - Enable or disable High-performance Erlang.
 * * `configured`            - Is the node configured?
 * * `diskSize`             - Subscription plan disk size
 * * `additionalDiskSize`  - Additional added disk size
 * * `availabilityZone`     - Availability zone the node is hosted in.
 *
 * ***Note:*** *Total disk size = diskSize + additional_disk_size*
 *
 * ## Dependency
 *
 * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 */
export function getNodesOutput(args: GetNodesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudamqp:index/getNodes:getNodes", {
        "instanceId": args.instanceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNodes.
 */
export interface GetNodesOutputArgs {
    /**
     * The CloudAMQP instance identifier.
     */
    instanceId: pulumi.Input<number>;
}
