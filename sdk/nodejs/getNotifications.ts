// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about all notification recipients. Each recipient will
 * receive notifications assigned to an alarm that has triggered.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const defaultRecipient = cloudamqp.getNotifications({
 *     instanceId: instance.id,
 * });
 * ```
 *
 * ## Dependency
 *
 * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 */
export function getNotifications(args: GetNotificationsArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudamqp:index/getNotifications:getNotifications", {
        "instanceId": args.instanceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNotifications.
 */
export interface GetNotificationsArgs {
    /**
     * The CloudAMQP instance identifier.
     */
    instanceId: number;
}

/**
 * A collection of values returned by getNotifications.
 */
export interface GetNotificationsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: number;
    /**
     * List of alarms (see below for nested schema)
     */
    readonly recipients: outputs.GetNotificationsRecipient[];
}
/**
 * Use this data source to retrieve information about all notification recipients. Each recipient will
 * receive notifications assigned to an alarm that has triggered.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const defaultRecipient = cloudamqp.getNotifications({
 *     instanceId: instance.id,
 * });
 * ```
 *
 * ## Dependency
 *
 * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 */
export function getNotificationsOutput(args: GetNotificationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNotificationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudamqp:index/getNotifications:getNotifications", {
        "instanceId": args.instanceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNotifications.
 */
export interface GetNotificationsOutputArgs {
    /**
     * The CloudAMQP instance identifier.
     */
    instanceId: pulumi.Input<number>;
}
