// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * ### Peering network URI
 *
 * This is required to be able to import the correct peering. Following the same format as the argument
 *
 * reference.
 *
 * hcl
 *
 * https://www.googleapis.com/compute/v1/projects/PROJECT-NAME/global/networks/VPC-NETWORK-NAME
 */
export class VpcGcpPeering extends pulumi.CustomResource {
    /**
     * Get an existing VpcGcpPeering resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcGcpPeeringState, opts?: pulumi.CustomResourceOptions): VpcGcpPeering {
        return new VpcGcpPeering(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudamqp:index/vpcGcpPeering:VpcGcpPeering';

    /**
     * Returns true if the given object is an instance of VpcGcpPeering.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcGcpPeering {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcGcpPeering.__pulumiType;
    }

    /**
     * VPC peering auto created routes
     */
    public /*out*/ readonly autoCreateRoutes!: pulumi.Output<boolean>;
    /**
     * The CloudAMQP instance identifier.
     *
     * ***Deprecated:*** from [v1.16.0], will be removed in next major version (v2.0)
     */
    public readonly instanceId!: pulumi.Output<number | undefined>;
    /**
     * Network URI of the VPC network to which you will peer with.
     * See examples above for the format.
     */
    public readonly peerNetworkUri!: pulumi.Output<string>;
    /**
     * Configurable sleep time (seconds) between retries when
     * requesting or reading peering. Default set to 10 seconds.
     *
     * ***Note:*** Available from [v1.29.0]
     */
    public readonly sleep!: pulumi.Output<number | undefined>;
    /**
     * VPC peering state
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * VPC peering state details
     */
    public /*out*/ readonly stateDetails!: pulumi.Output<string>;
    /**
     * Configurable timeout time (seconds) before retries times
     * out. Default set to 1800 seconds.
     *
     * ***Note:*** Available from [v1.29.0]
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * The managed VPC identifier.
     *
     * ***Note:*** Available from [v1.16.0], will be required in next major version (v2.0)
     */
    public readonly vpcId!: pulumi.Output<string | undefined>;
    /**
     * Makes the resource wait until the peering is connected.
     * Default set to false.
     *
     * ***Note:*** Available from [v1.28.0]
     */
    public readonly waitOnPeeringStatus!: pulumi.Output<boolean | undefined>;

    /**
     * Create a VpcGcpPeering resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcGcpPeeringArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcGcpPeeringArgs | VpcGcpPeeringState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcGcpPeeringState | undefined;
            resourceInputs["autoCreateRoutes"] = state ? state.autoCreateRoutes : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["peerNetworkUri"] = state ? state.peerNetworkUri : undefined;
            resourceInputs["sleep"] = state ? state.sleep : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateDetails"] = state ? state.stateDetails : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["waitOnPeeringStatus"] = state ? state.waitOnPeeringStatus : undefined;
        } else {
            const args = argsOrState as VpcGcpPeeringArgs | undefined;
            if ((!args || args.peerNetworkUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerNetworkUri'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["peerNetworkUri"] = args ? args.peerNetworkUri : undefined;
            resourceInputs["sleep"] = args ? args.sleep : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["waitOnPeeringStatus"] = args ? args.waitOnPeeringStatus : undefined;
            resourceInputs["autoCreateRoutes"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateDetails"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcGcpPeering.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcGcpPeering resources.
 */
export interface VpcGcpPeeringState {
    /**
     * VPC peering auto created routes
     */
    autoCreateRoutes?: pulumi.Input<boolean>;
    /**
     * The CloudAMQP instance identifier.
     *
     * ***Deprecated:*** from [v1.16.0], will be removed in next major version (v2.0)
     */
    instanceId?: pulumi.Input<number>;
    /**
     * Network URI of the VPC network to which you will peer with.
     * See examples above for the format.
     */
    peerNetworkUri?: pulumi.Input<string>;
    /**
     * Configurable sleep time (seconds) between retries when
     * requesting or reading peering. Default set to 10 seconds.
     *
     * ***Note:*** Available from [v1.29.0]
     */
    sleep?: pulumi.Input<number>;
    /**
     * VPC peering state
     */
    state?: pulumi.Input<string>;
    /**
     * VPC peering state details
     */
    stateDetails?: pulumi.Input<string>;
    /**
     * Configurable timeout time (seconds) before retries times
     * out. Default set to 1800 seconds.
     *
     * ***Note:*** Available from [v1.29.0]
     */
    timeout?: pulumi.Input<number>;
    /**
     * The managed VPC identifier.
     *
     * ***Note:*** Available from [v1.16.0], will be required in next major version (v2.0)
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Makes the resource wait until the peering is connected.
     * Default set to false.
     *
     * ***Note:*** Available from [v1.28.0]
     */
    waitOnPeeringStatus?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a VpcGcpPeering resource.
 */
export interface VpcGcpPeeringArgs {
    /**
     * The CloudAMQP instance identifier.
     *
     * ***Deprecated:*** from [v1.16.0], will be removed in next major version (v2.0)
     */
    instanceId?: pulumi.Input<number>;
    /**
     * Network URI of the VPC network to which you will peer with.
     * See examples above for the format.
     */
    peerNetworkUri: pulumi.Input<string>;
    /**
     * Configurable sleep time (seconds) between retries when
     * requesting or reading peering. Default set to 10 seconds.
     *
     * ***Note:*** Available from [v1.29.0]
     */
    sleep?: pulumi.Input<number>;
    /**
     * Configurable timeout time (seconds) before retries times
     * out. Default set to 1800 seconds.
     *
     * ***Note:*** Available from [v1.29.0]
     */
    timeout?: pulumi.Input<number>;
    /**
     * The managed VPC identifier.
     *
     * ***Note:*** Available from [v1.16.0], will be required in next major version (v2.0)
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Makes the resource wait until the peering is connected.
     * Default set to false.
     *
     * ***Note:*** Available from [v1.28.0]
     */
    waitOnPeeringStatus?: pulumi.Input<boolean>;
}
