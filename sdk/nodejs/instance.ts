// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource allows you to create and manage a CloudAMQP instance running either [**RabbitMQ**](https://www.rabbitmq.com/) or [**LavinMQ**](https://lavinmq.com/) and can be deployed to multiple cloud platforms provider and regions, see instance regions for more information.
 *
 * Once the instance is created it will be assigned a unique identifier. All other resources and data sources created for this instance needs to reference this unique instance identifier.
 *
 * Pricing is available at [cloudamqp.com](https://www.cloudamqp.com/plans.html).
 *
 * ## Example Usage
 *
 * <details>
 *   <summary>
 *     <b>
 *       <i>Basic example of shared and dedicated instances</i>
 *     </b>
 *   </summary>
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * // Minimum free lemur instance running RabbitMQ
 * const lemurInstance = new cloudamqp.Instance("lemur_instance", {
 *     name: "cloudamqp-free-instance",
 *     plan: "lemur",
 *     region: "amazon-web-services::us-west-1",
 *     tags: ["rabbitmq"],
 * });
 * // Minimum free lemming instance running LavinMQ
 * const lemmingInstance = new cloudamqp.Instance("lemming_instance", {
 *     name: "cloudamqp-free-instance",
 *     plan: "lemming",
 *     region: "amazon-web-services::us-west-1",
 *     tags: ["lavinmq"],
 * });
 * // New dedicated bunny instance running RabbitMQ
 * const instance = new cloudamqp.Instance("instance", {
 *     name: "terraform-cloudamqp-instance",
 *     plan: "bunny-1",
 *     region: "amazon-web-services::us-west-1",
 *     tags: ["terraform"],
 * });
 * ```
 *
 * </details>
 *
 * <details>
 *   <summary>
 *     <b>
 *       <i>Dedicated instance using attribute vpcSubnet to create VPC, before v1.16.0</i>
 *     </b>
 *   </summary>
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const instance = new cloudamqp.Instance("instance", {
 *     name: "terraform-cloudamqp-instance",
 *     plan: "bunny-1",
 *     region: "amazon-web-services::us-west-1",
 *     tags: ["terraform"],
 *     vpcSubnet: "10.56.72.0/24",
 * });
 * ```
 *
 * </details>
 *
 * <details>
 *   <summary>
 *     <b>
 *       <i>Dedicated instance using attribute vpcSubnet to create VPC and then import managed VPC, from v1.16.0 (Managed VPC)</i>
 *     </b>
 *   </summary>
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * // Dedicated instance that also creates VPC
 * const instance01 = new cloudamqp.Instance("instance_01", {
 *     name: "terraform-cloudamqp-instance-01",
 *     plan: "bunny-1",
 *     region: "amazon-web-services::us-west-1",
 *     tags: ["terraform"],
 *     vpcSubnet: "10.56.72.0/24",
 * });
 * ```
 *
 * Once the instance and the VPC are created, the VPC can be imported as managed VPC and added to the configuration file.
 * Set attribute `vpcId` to the managed VPC identifier. To keep the managed VPC when deleting the instance, set attribute `keepAssociatedVpc` to true.
 * For more information see guide Managed VPC.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * // Imported managed VPC
 * const vpc = new cloudamqp.Vpc("vpc", {
 *     name: "<vpc-name>",
 *     region: "amazon-web-services::us-east-1",
 *     subnet: "10.56.72.0/24",
 *     tags: [],
 * });
 * // Add vpc_id and keep_associated_vpc attributes
 * const instance01 = new cloudamqp.Instance("instance_01", {
 *     name: "terraform-cloudamqp-instance-01",
 *     plan: "bunny-1",
 *     region: "amazon-web-services::us-west-1",
 *     tags: ["terraform"],
 *     vpcId: vpc.id,
 *     keepAssociatedVpc: true,
 * });
 * ```
 *
 * </details>
 *
 * <details>
 *   <summary>
 *     <b>
 *       <i>Dedicated instances and managed VPC, from v1.16.0 (Managed VPC)</i>
 *     </b>
 *   </summary>
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * // Managed VPC
 * const vpc = new cloudamqp.Vpc("vpc", {
 *     name: "<vpc-name>",
 *     region: "amazon-web-services::us-east-1",
 *     subnet: "10.56.72.0/24",
 *     tags: [],
 * });
 * // First instance added to managed VPC
 * const instance01 = new cloudamqp.Instance("instance_01", {
 *     name: "terraform-cloudamqp-instance-01",
 *     plan: "bunny-1",
 *     region: "amazon-web-services::us-west-1",
 *     tags: ["terraform"],
 *     vpcId: vpc.id,
 *     keepAssociatedVpc: true,
 * });
 * // Second instance added to managed VPC
 * const instance02 = new cloudamqp.Instance("instance_02", {
 *     name: "terraform-cloudamqp-instance-02",
 *     plan: "bunny-1",
 *     region: "amazon-web-services::us-west-1",
 *     tags: ["terraform"],
 *     vpcId: vpc.id,
 *     keepAssociatedVpc: true,
 * });
 * ```
 *
 * Set attribute `keepAssociatedVpc` to true, will keep managed VPC when deleting the instances.
 *
 * </details>
 *
 * ## Copy settings to a new dedicated instance
 *
 * With copy settings it's possible to create a new dedicated instance with settings such as alarms, config, etc. from another dedicated instance. This can be done by adding the `copySettings` block to this resource and populate `subscriptionId` with a CloudAMQP instance identifier from another already existing instance.
 *
 * Then add the settings to be copied over to the new dedicated instance. Settings that can be copied [alarms, config, definitions, firewall, logs, metrics, plugins]
 *
 * > `rmqVersion` argument is required when doing this action. Must match the RabbitMQ version of the dedicated instance to be copied from.
 *
 * <details>
 *   <summary>
 *     <b>
 *       <i>Copy settings from a dedicated instance to a new dedicated instance</i>
 *     </b>
 *   </summary>
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const instance02 = new cloudamqp.Instance("instance_02", {
 *     name: "terraform-cloudamqp-instance-02",
 *     plan: "squirrel-1",
 *     region: "amazon-web-services::us-west-1",
 *     rmqVersion: "3.12.2",
 *     tags: ["terraform"],
 *     copySettings: [{
 *         subscriptionId: instanceId,
 *         settings: [
 *             "alarms",
 *             "config",
 *             "definitions",
 *             "firewall",
 *             "logs",
 *             "metrics",
 *             "plugins",
 *         ],
 *     }],
 * });
 * ```
 *
 * </details>
 *
 * ## Import
 *
 * `cloudamqp_instance`can be imported using CloudAMQP internal identifier.
 *
 * ```sh
 * $ pulumi import cloudamqp:index/instance:Instance instance <id>`
 * ```
 *
 * To retrieve the identifier for an instance, either use [CloudAMQP customer API](https://docs.cloudamqp.com/#list-instances) or use the data source [`cloudamqp_account`](./data-sources/account.md) to list all available instances for an account.
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudamqp:index/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * API key needed to communicate to CloudAMQP's second API. The second API is used to manage alarms, integration and more, full description [CloudAMQP API](https://docs.cloudamqp.com/cloudamqp_api.html).
     */
    public /*out*/ readonly apikey!: pulumi.Output<string>;
    /**
     * Information if the CloudAMQP instance runs either RabbitMQ or LavinMQ.
     */
    public /*out*/ readonly backend!: pulumi.Output<string>;
    /**
     * Copy settings from one CloudAMQP instance to a new. Consists of the block documented below.
     */
    public readonly copySettings!: pulumi.Output<outputs.InstanceCopySetting[] | undefined>;
    /**
     * Information if the CloudAMQP instance is shared or dedicated.
     */
    public /*out*/ readonly dedicated!: pulumi.Output<boolean>;
    /**
     * The external hostname for the CloudAMQP instance.
     */
    public /*out*/ readonly host!: pulumi.Output<string>;
    /**
     * The internal hostname for the CloudAMQP instance.
     */
    public /*out*/ readonly hostInternal!: pulumi.Output<string>;
    /**
     * Keep associated VPC when deleting instance, default set to false.
     */
    public readonly keepAssociatedVpc!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the CloudAMQP instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Set to true to discard creating default alarms when the instance is created. Can be left out, will then use default value = false.
     */
    public readonly noDefaultAlarms!: pulumi.Output<boolean>;
    /**
     * Number of nodes, 1, 3 or 5 depending on plan used. Only needed for legacy plans, will otherwise be computed.
     *
     * ***Deprecated: Legacy subscriptions plan can still change this to scale up or down the instance. New subscriptions plans use the plan to determine number of nodes. In order to change number of nodes the `plan` needs to be updated.***
     */
    public readonly nodes!: pulumi.Output<number>;
    /**
     * The subscription plan. See available plans
     */
    public readonly plan!: pulumi.Output<string>;
    /**
     * Flag describing if the resource is ready
     */
    public /*out*/ readonly ready!: pulumi.Output<boolean>;
    /**
     * The region to host the instance in. See instance regions
     *
     * ***Note: Changing region will force the instance to be destroyed and a new created in the new region. All data will be lost and a new name assigned.***
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The Rabbit MQ version. Can be left out, will then be set to default value used by CloudAMQP API.
     *
     * ***Note: There is not yet any support in the provider to change the RMQ version. Once it's set in the initial creation, it will remain.***
     */
    public readonly rmqVersion!: pulumi.Output<string>;
    /**
     * One or more tags for the CloudAMQP instance, makes it possible to categories multiple instances in console view. Default there is no tags assigned.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The AMQP URL (uses the internal hostname if the instance was created with VPC). Has the format: `amqps://{username}:{password}@{hostname}/{vhost}`
     */
    public /*out*/ readonly url!: pulumi.Output<string>;
    /**
     * The virtual host used by Rabbit MQ.
     */
    public /*out*/ readonly vhost!: pulumi.Output<string>;
    /**
     * The VPC ID. Use this to create your instance in an existing VPC. See available example.
     */
    public readonly vpcId!: pulumi.Output<number>;
    /**
     * Creates a dedicated VPC subnet, shouldn't overlap with other VPC subnet, default subnet used 10.56.72.0/24.
     *
     * ***Deprecated: Will be removed in next major version (v2.0)***
     *
     * ***Note: extra fee will be charged when using VPC, see [CloudAMQP](https://cloudamqp.com) for more information.***
     */
    public readonly vpcSubnet!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["apikey"] = state ? state.apikey : undefined;
            resourceInputs["backend"] = state ? state.backend : undefined;
            resourceInputs["copySettings"] = state ? state.copySettings : undefined;
            resourceInputs["dedicated"] = state ? state.dedicated : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["hostInternal"] = state ? state.hostInternal : undefined;
            resourceInputs["keepAssociatedVpc"] = state ? state.keepAssociatedVpc : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noDefaultAlarms"] = state ? state.noDefaultAlarms : undefined;
            resourceInputs["nodes"] = state ? state.nodes : undefined;
            resourceInputs["plan"] = state ? state.plan : undefined;
            resourceInputs["ready"] = state ? state.ready : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["rmqVersion"] = state ? state.rmqVersion : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["vhost"] = state ? state.vhost : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcSubnet"] = state ? state.vpcSubnet : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.plan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'plan'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["copySettings"] = args ? args.copySettings : undefined;
            resourceInputs["keepAssociatedVpc"] = args ? args.keepAssociatedVpc : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noDefaultAlarms"] = args ? args.noDefaultAlarms : undefined;
            resourceInputs["nodes"] = args ? args.nodes : undefined;
            resourceInputs["plan"] = args ? args.plan : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["rmqVersion"] = args ? args.rmqVersion : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpcSubnet"] = args ? args.vpcSubnet : undefined;
            resourceInputs["apikey"] = undefined /*out*/;
            resourceInputs["backend"] = undefined /*out*/;
            resourceInputs["dedicated"] = undefined /*out*/;
            resourceInputs["host"] = undefined /*out*/;
            resourceInputs["hostInternal"] = undefined /*out*/;
            resourceInputs["ready"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
            resourceInputs["vhost"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apikey", "url"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * API key needed to communicate to CloudAMQP's second API. The second API is used to manage alarms, integration and more, full description [CloudAMQP API](https://docs.cloudamqp.com/cloudamqp_api.html).
     */
    apikey?: pulumi.Input<string>;
    /**
     * Information if the CloudAMQP instance runs either RabbitMQ or LavinMQ.
     */
    backend?: pulumi.Input<string>;
    /**
     * Copy settings from one CloudAMQP instance to a new. Consists of the block documented below.
     */
    copySettings?: pulumi.Input<pulumi.Input<inputs.InstanceCopySetting>[]>;
    /**
     * Information if the CloudAMQP instance is shared or dedicated.
     */
    dedicated?: pulumi.Input<boolean>;
    /**
     * The external hostname for the CloudAMQP instance.
     */
    host?: pulumi.Input<string>;
    /**
     * The internal hostname for the CloudAMQP instance.
     */
    hostInternal?: pulumi.Input<string>;
    /**
     * Keep associated VPC when deleting instance, default set to false.
     */
    keepAssociatedVpc?: pulumi.Input<boolean>;
    /**
     * Name of the CloudAMQP instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Set to true to discard creating default alarms when the instance is created. Can be left out, will then use default value = false.
     */
    noDefaultAlarms?: pulumi.Input<boolean>;
    /**
     * Number of nodes, 1, 3 or 5 depending on plan used. Only needed for legacy plans, will otherwise be computed.
     *
     * ***Deprecated: Legacy subscriptions plan can still change this to scale up or down the instance. New subscriptions plans use the plan to determine number of nodes. In order to change number of nodes the `plan` needs to be updated.***
     */
    nodes?: pulumi.Input<number>;
    /**
     * The subscription plan. See available plans
     */
    plan?: pulumi.Input<string>;
    /**
     * Flag describing if the resource is ready
     */
    ready?: pulumi.Input<boolean>;
    /**
     * The region to host the instance in. See instance regions
     *
     * ***Note: Changing region will force the instance to be destroyed and a new created in the new region. All data will be lost and a new name assigned.***
     */
    region?: pulumi.Input<string>;
    /**
     * The Rabbit MQ version. Can be left out, will then be set to default value used by CloudAMQP API.
     *
     * ***Note: There is not yet any support in the provider to change the RMQ version. Once it's set in the initial creation, it will remain.***
     */
    rmqVersion?: pulumi.Input<string>;
    /**
     * One or more tags for the CloudAMQP instance, makes it possible to categories multiple instances in console view. Default there is no tags assigned.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The AMQP URL (uses the internal hostname if the instance was created with VPC). Has the format: `amqps://{username}:{password}@{hostname}/{vhost}`
     */
    url?: pulumi.Input<string>;
    /**
     * The virtual host used by Rabbit MQ.
     */
    vhost?: pulumi.Input<string>;
    /**
     * The VPC ID. Use this to create your instance in an existing VPC. See available example.
     */
    vpcId?: pulumi.Input<number>;
    /**
     * Creates a dedicated VPC subnet, shouldn't overlap with other VPC subnet, default subnet used 10.56.72.0/24.
     *
     * ***Deprecated: Will be removed in next major version (v2.0)***
     *
     * ***Note: extra fee will be charged when using VPC, see [CloudAMQP](https://cloudamqp.com) for more information.***
     */
    vpcSubnet?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Copy settings from one CloudAMQP instance to a new. Consists of the block documented below.
     */
    copySettings?: pulumi.Input<pulumi.Input<inputs.InstanceCopySetting>[]>;
    /**
     * Keep associated VPC when deleting instance, default set to false.
     */
    keepAssociatedVpc?: pulumi.Input<boolean>;
    /**
     * Name of the CloudAMQP instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Set to true to discard creating default alarms when the instance is created. Can be left out, will then use default value = false.
     */
    noDefaultAlarms?: pulumi.Input<boolean>;
    /**
     * Number of nodes, 1, 3 or 5 depending on plan used. Only needed for legacy plans, will otherwise be computed.
     *
     * ***Deprecated: Legacy subscriptions plan can still change this to scale up or down the instance. New subscriptions plans use the plan to determine number of nodes. In order to change number of nodes the `plan` needs to be updated.***
     */
    nodes?: pulumi.Input<number>;
    /**
     * The subscription plan. See available plans
     */
    plan: pulumi.Input<string>;
    /**
     * The region to host the instance in. See instance regions
     *
     * ***Note: Changing region will force the instance to be destroyed and a new created in the new region. All data will be lost and a new name assigned.***
     */
    region: pulumi.Input<string>;
    /**
     * The Rabbit MQ version. Can be left out, will then be set to default value used by CloudAMQP API.
     *
     * ***Note: There is not yet any support in the provider to change the RMQ version. Once it's set in the initial creation, it will remain.***
     */
    rmqVersion?: pulumi.Input<string>;
    /**
     * One or more tags for the CloudAMQP instance, makes it possible to categories multiple instances in console view. Default there is no tags assigned.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The VPC ID. Use this to create your instance in an existing VPC. See available example.
     */
    vpcId?: pulumi.Input<number>;
    /**
     * Creates a dedicated VPC subnet, shouldn't overlap with other VPC subnet, default subnet used 10.56.72.0/24.
     *
     * ***Deprecated: Will be removed in next major version (v2.0)***
     *
     * ***Note: extra fee will be charged when using VPC, see [CloudAMQP](https://cloudamqp.com) for more information.***
     */
    vpcSubnet?: pulumi.Input<string>;
}
