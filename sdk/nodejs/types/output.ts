// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ExtraDiskSizeNode {
    /**
     * Additional added disk size
     */
    additionalDiskSize: number;
    /**
     * Subscription plan disk size
     */
    diskSize: number;
    name: string;
}

export interface GetAccountInstance {
    /**
     * The instance identifier
     */
    id: number;
    /**
     * The name of the instance
     */
    name: string;
    /**
     * The subscription plan used for the instance
     */
    plan: string;
    /**
     * The region were the instanece is located in
     */
    region: string;
    /**
     * Tag for the instance
     */
    tags?: string[];
}

export interface GetAccountVpcsVpc {
    /**
     * The instance identifier
     */
    id: number;
    /**
     * The name of the instance
     */
    name: string;
    /**
     * The region were the instanece is located in
     */
    region: string;
    /**
     * The VPC subnet
     */
    subnet: string;
    /**
     * Tag the VPC instance with optional tags
     */
    tags?: string[];
    /**
     * VPC name given when hosted at the cloud provider
     */
    vpcName: string;
}

export interface GetNodesNode {
    additionalDiskSize: number;
    availabilityZone: string;
    configured: boolean;
    diskSize: number;
    erlangVersion: string;
    hipe: boolean;
    hostname: string;
    hostnameInternal: string;
    name: string;
    rabbitmqVersion: string;
    running: boolean;
}

export interface GetPluginsCommunityPlugin {
    description: string;
    name: string;
    require: string;
}

export interface GetPluginsPlugin {
    description: string;
    enabled: boolean;
    name: string;
    version: string;
}

export interface InstanceCopySetting {
    /**
     * Array of one or more settings to be copied. Allowed values: [alarms, config, definitions, firewall, logs, metrics, plugins]
     *
     * See more below, copy settings
     */
    settings: string[];
    /**
     * Instance identifier of the CloudAMQP instance to copy the settings from.
     */
    subscriptionId: string;
}

export interface NotificationResponder {
    /**
     * Identifier in UUID format
     */
    id?: string;
    /**
     * Name of the responder
     */
    name?: string;
    /**
     * Type of responder. [`team`, `user`, `escalation`, `schedule`]
     */
    type: string;
    /**
     * Username of the responder
     *
     * Responders of type `team`, `escalation` and `schedule` can use either id or name.
     * While `user` can use either id or username.
     */
    username?: string;
}

export interface SecurityFirewallRule {
    /**
     * Description name of the rule. e.g. Default.
     *
     * Pre-defined services for RabbitMQ:
     *
     * | Service name | Port  |
     * |--------------|-------|
     * | AMQP         | 5672  |
     * | AMQPS        | 5671  |
     * | HTTPS        | 443   |
     * | MQTT         | 1883  |
     * | MQTTS        | 8883  |
     * | STOMP        | 61613 |
     * | STOMPS       | 61614 |
     * | STREAM       | 5552  |
     * | STREAM_SSL   | 5551  |
     *
     * Pre-defined services for LavinMQ:
     *
     * | Service name | Port  |
     * |--------------|-------|
     * | AMQP         | 5672  |
     * | AMQPS        | 5671  |
     * | HTTPS        | 443   |
     */
    description?: string;
    /**
     * CIDR address: IP address with CIDR notation (e.g. 10.56.72.0/24)
     */
    ip: string;
    /**
     * Custom ports to be opened
     */
    ports?: number[];
    /**
     * Pre-defined service ports, see table below
     */
    services?: string[];
}

