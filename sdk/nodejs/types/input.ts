// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ExtraDiskSizeNode {
    /**
     * Additional added disk size
     */
    additionalDiskSize?: pulumi.Input<number>;
    /**
     * Subscription plan disk size
     */
    diskSize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}

export interface InstanceCopySetting {
    /**
     * Array of one or more settings to be copied. Allowed values: [alarms, config, definitions, firewall, logs, metrics, plugins]
     *
     * See more below, copy settings
     */
    settings: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance identifier of the CloudAMQP instance to copy the settings from.
     */
    subscriptionId: pulumi.Input<string>;
}

export interface NotificationResponder {
    /**
     * Identifier in UUID format
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the responder
     */
    name?: pulumi.Input<string>;
    /**
     * Type of responder. [`team`, `user`, `escalation`, `schedule`]
     */
    type: pulumi.Input<string>;
    /**
     * Username of the responder
     *
     * Responders of type `team`, `escalation` and `schedule` can use either id or name.
     * While `user` can use either id or username.
     */
    username?: pulumi.Input<string>;
}

export interface SecurityFirewallRule {
    /**
     * Description name of the rule. e.g. Default.
     *
     * Pre-defined services for RabbitMQ:
     * <table>
     * <thead>
     * <tr>
     * <th>Service name</th>
     * <th>Port</th>
     * </tr>
     * </thead>
     * <tbody>
     * <tr>
     * <td>AMQP</td>
     * <td>5672</td>
     * </tr>
     * <tr>
     * <td>AMQPS</td>
     * <td>5671</td>
     * </tr>
     * <tr>
     * <td>HTTPS</td>
     * <td>443</td>
     * </tr>
     * <tr>
     * <td>MQTT</td>
     * <td>1883</td>
     * </tr>
     * <tr>
     * <td>MQTTS</td>
     * <td>8883</td>
     * </tr>
     * <tr>
     * <td>STOMP</td>
     * <td>61613</td>
     * </tr>
     * <tr>
     * <td>STOMPS</td>
     * <td>61614</td>
     * </tr>
     * <tr>
     * <td>STREAM</td>
     * <td>5552</td>
     * </tr>
     * <tr>
     * <td>STREAM_SSL</td>
     * <td>5551</td>
     * </tr>
     * </tbody>
     * </table>
     *
     * Pre-defined services for LavinMQ:
     * <table>
     * <thead>
     * <tr>
     * <th>Service name</th>
     * <th>Port</th>
     * </tr>
     * </thead>
     * <tbody>
     * <tr>
     * <td>AMQP</td>
     * <td>5672</td>
     * </tr>
     * <tr>
     * <td>AMQPS</td>
     * <td>5671</td>
     * </tr>
     * <tr>
     * <td>HTTPS</td>
     * <td>443</td>
     * </tr>
     * </tbody>
     * </table>
     */
    description?: pulumi.Input<string>;
    /**
     * CIDR address: IP address with CIDR notation (e.g. 10.56.72.0/24)
     */
    ip: pulumi.Input<string>;
    /**
     * Custom ports to be opened
     */
    ports?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Pre-defined service ports, see table below
     */
    services?: pulumi.Input<pulumi.Input<string>[]>;
}
