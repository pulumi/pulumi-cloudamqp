// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource allows you to automatically upgrade to the latest possible upgradable versions for RabbitMQ and Erlang. Depending on initial versions of RabbitMQ and Erlang of the CloudAMQP instance, multiple runs may be needed to get to the latest versions. After completed upgrade, check data source `cloudamqp.getUpgradableVersions` to see if newer versions is available. Then delete `cloudamqp.UpgradeRabbitmq` and create it again to invoke the upgrade.
 *
 * > **Important Upgrade Information**
 * > - All single node upgrades will require some downtime since RabbitMQ needs a restart.
 * > - From RabbitMQ version 3.9, rolling upgrades between minor versions (e.g. 3.9 to 3.10), in a multi-node cluster are possible without downtime. This means that one node is upgraded at a time while the other nodes are still running. For versions older than 3.9, patch version upgrades (e.g. 3.8.x to 3.8.y) are possible without downtime in a multi-node cluster, but minor version upgrades will require downtime.
 * > - Auto delete queues (queues that are marked AD) will be deleted during the update.
 * > - Any custom plugins support has installed on your behalf will be disabled and you need to contact support@cloudamqp.com and ask to have them re-installed.
 * > - TLS 1.0 and 1.1 will not be supported after the update.
 *
 * Only available for dedicated subscription plans running ***RabbitMQ***.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * // Retrieve latest possible upgradable versions for RabbitMQ and Erlang
 * const versions = cloudamqp.getUpgradableVersions({
 *     instanceId: instance.id,
 * });
 * // Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang
 * const upgrade = new cloudamqp.UpgradeRabbitmq("upgrade", {instanceId: instance.id});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * // Retrieve latest possible upgradable versions for RabbitMQ and Erlang
 * const versions = cloudamqp.getUpgradableVersions({
 *     instanceId: instance.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * If newer version is still available to be upgradable in the data source, re-run again.
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * // Retrieve latest possible upgradable versions for RabbitMQ and Erlang
 * const versions = cloudamqp.getUpgradableVersions({
 *     instanceId: instance.id,
 * });
 * // Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang
 * const upgrade = new cloudamqp.UpgradeRabbitmq("upgrade", {instanceId: instance.id});
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Not possible to import this resource.
 */
export class UpgradeRabbitmq extends pulumi.CustomResource {
    /**
     * Get an existing UpgradeRabbitmq resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UpgradeRabbitmqState, opts?: pulumi.CustomResourceOptions): UpgradeRabbitmq {
        return new UpgradeRabbitmq(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudamqp:index/upgradeRabbitmq:UpgradeRabbitmq';

    /**
     * Returns true if the given object is an instance of UpgradeRabbitmq.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UpgradeRabbitmq {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UpgradeRabbitmq.__pulumiType;
    }

    /**
     * The CloudAMQP instance identifier
     */
    public readonly instanceId!: pulumi.Output<number>;

    /**
     * Create a UpgradeRabbitmq resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UpgradeRabbitmqArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UpgradeRabbitmqArgs | UpgradeRabbitmqState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UpgradeRabbitmqState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
        } else {
            const args = argsOrState as UpgradeRabbitmqArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UpgradeRabbitmq.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UpgradeRabbitmq resources.
 */
export interface UpgradeRabbitmqState {
    /**
     * The CloudAMQP instance identifier
     */
    instanceId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a UpgradeRabbitmq resource.
 */
export interface UpgradeRabbitmqArgs {
    /**
     * The CloudAMQP instance identifier
     */
    instanceId: pulumi.Input<number>;
}
