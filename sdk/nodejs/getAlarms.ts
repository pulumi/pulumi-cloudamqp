// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve a list of default or created alarms.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const queueAlarms = cloudamqp.getAlarms({
 *     instanceId: instance.id,
 *     type: "queue",
 * });
 * ```
 *
 * ## Dependency
 *
 * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 *
 * ## Alarm Types
 *
 * `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
 */
export function getAlarms(args: GetAlarmsArgs, opts?: pulumi.InvokeOptions): Promise<GetAlarmsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudamqp:index/getAlarms:getAlarms", {
        "instanceId": args.instanceId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlarms.
 */
export interface GetAlarmsArgs {
    /**
     * The CloudAMQP instance identifier.
     */
    instanceId: number;
    /**
     * The alarm type to filter for. Supported
     * alarm types.
     */
    type?: string;
}

/**
 * A collection of values returned by getAlarms.
 */
export interface GetAlarmsResult {
    /**
     * List of alarms (see below for nested schema)
     */
    readonly alarms: outputs.GetAlarmsAlarm[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: number;
    /**
     * The type of the alarm.
     */
    readonly type?: string;
}
/**
 * Use this data source to retrieve a list of default or created alarms.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudamqp from "@pulumi/cloudamqp";
 *
 * const queueAlarms = cloudamqp.getAlarms({
 *     instanceId: instance.id,
 *     type: "queue",
 * });
 * ```
 *
 * ## Dependency
 *
 * This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
 *
 * ## Alarm Types
 *
 * `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
 */
export function getAlarmsOutput(args: GetAlarmsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAlarmsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudamqp:index/getAlarms:getAlarms", {
        "instanceId": args.instanceId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlarms.
 */
export interface GetAlarmsOutputArgs {
    /**
     * The CloudAMQP instance identifier.
     */
    instanceId: pulumi.Input<number>;
    /**
     * The alarm type to filter for. Supported
     * alarm types.
     */
    type?: pulumi.Input<string>;
}
