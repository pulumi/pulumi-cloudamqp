// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudAmqp
{
    public static class GetAlarms
    {
        /// <summary>
        /// Use this data source to retrieve a list of default or created alarms.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudAmqp = Pulumi.CloudAmqp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var queueAlarms = CloudAmqp.GetAlarms.Invoke(new()
        ///     {
        ///         InstanceId = instance.Id,
        ///         Type = "queue",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Dependency
        /// 
        /// This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
        /// 
        /// ## Alarm Types
        /// 
        /// `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
        /// </summary>
        public static Task<GetAlarmsResult> InvokeAsync(GetAlarmsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlarmsResult>("cloudamqp:index/getAlarms:getAlarms", args ?? new GetAlarmsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve a list of default or created alarms.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudAmqp = Pulumi.CloudAmqp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var queueAlarms = CloudAmqp.GetAlarms.Invoke(new()
        ///     {
        ///         InstanceId = instance.Id,
        ///         Type = "queue",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Dependency
        /// 
        /// This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
        /// 
        /// ## Alarm Types
        /// 
        /// `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
        /// </summary>
        public static Output<GetAlarmsResult> Invoke(GetAlarmsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmsResult>("cloudamqp:index/getAlarms:getAlarms", args ?? new GetAlarmsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve a list of default or created alarms.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudAmqp = Pulumi.CloudAmqp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var queueAlarms = CloudAmqp.GetAlarms.Invoke(new()
        ///     {
        ///         InstanceId = instance.Id,
        ///         Type = "queue",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Dependency
        /// 
        /// This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
        /// 
        /// ## Alarm Types
        /// 
        /// `cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`
        /// </summary>
        public static Output<GetAlarmsResult> Invoke(GetAlarmsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmsResult>("cloudamqp:index/getAlarms:getAlarms", args ?? new GetAlarmsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CloudAMQP instance identifier.
        /// </summary>
        [Input("instanceId", required: true)]
        public int InstanceId { get; set; }

        /// <summary>
        /// The alarm type to filter for. Supported
        /// alarm types.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetAlarmsArgs()
        {
        }
        public static new GetAlarmsArgs Empty => new GetAlarmsArgs();
    }

    public sealed class GetAlarmsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CloudAMQP instance identifier.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<int> InstanceId { get; set; } = null!;

        /// <summary>
        /// The alarm type to filter for. Supported
        /// alarm types.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetAlarmsInvokeArgs()
        {
        }
        public static new GetAlarmsInvokeArgs Empty => new GetAlarmsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlarmsResult
    {
        /// <summary>
        /// List of alarms (see below for nested schema)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlarmsAlarmResult> Alarms;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int InstanceId;
        /// <summary>
        /// The type of the alarm.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetAlarmsResult(
            ImmutableArray<Outputs.GetAlarmsAlarmResult> alarms,

            string id,

            int instanceId,

            string? type)
        {
            Alarms = alarms;
            Id = id;
            InstanceId = instanceId;
            Type = type;
        }
    }
}
