// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudAmqp
{
    public static class GetAccountVpcs
    {
        /// <summary>
        /// Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.
        /// 
        /// ## Example Usage
        /// 
        /// Can be used in other resources/data sources when the VPC identifier is unknown, while other attributes are known. E.g. find correct VPC using the `name` you gave your VPC. Then iterate over VPCs to find the matching one and extract the VPC identifier.
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudAmqp = Pulumi.CloudAmqp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myVpcName = "&lt;your VPC name&gt;";
        /// 
        ///     var vpcList = CloudAmqp.GetAccountVpcs.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["vpcId"] = .Where(vpc =&gt; vpc.Name == myVpcName).Select(vpc =&gt; 
        ///         {
        ///             return vpc;
        ///         }).ToList()[0].Id,
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ## Attributes reference
        /// 
        /// All attributes reference are computed
        /// 
        /// * `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.
        /// * `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.
        /// 
        /// ___
        /// 
        /// The `vpcs` block consist of
        /// 
        /// * `id`          - The VPC identifier.
        /// * `name`        - The VPC instance name.
        /// * `region`      - The region the VPC is hosted in.
        /// * `subnet`      - The VPC subnet.
        /// * `tags`        - Optional tags set for the VPC.
        /// * `vpc_name`    - VPC name given when hosted at the cloud provider.
        /// 
        /// ## Dependency
        /// 
        /// This data source depends on apikey set in the provider configuration.
        /// </summary>
        public static Task<GetAccountVpcsResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountVpcsResult>("cloudamqp:index/getAccountVpcs:getAccountVpcs", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.
        /// 
        /// ## Example Usage
        /// 
        /// Can be used in other resources/data sources when the VPC identifier is unknown, while other attributes are known. E.g. find correct VPC using the `name` you gave your VPC. Then iterate over VPCs to find the matching one and extract the VPC identifier.
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudAmqp = Pulumi.CloudAmqp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myVpcName = "&lt;your VPC name&gt;";
        /// 
        ///     var vpcList = CloudAmqp.GetAccountVpcs.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["vpcId"] = .Where(vpc =&gt; vpc.Name == myVpcName).Select(vpc =&gt; 
        ///         {
        ///             return vpc;
        ///         }).ToList()[0].Id,
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ## Attributes reference
        /// 
        /// All attributes reference are computed
        /// 
        /// * `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.
        /// * `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.
        /// 
        /// ___
        /// 
        /// The `vpcs` block consist of
        /// 
        /// * `id`          - The VPC identifier.
        /// * `name`        - The VPC instance name.
        /// * `region`      - The region the VPC is hosted in.
        /// * `subnet`      - The VPC subnet.
        /// * `tags`        - Optional tags set for the VPC.
        /// * `vpc_name`    - VPC name given when hosted at the cloud provider.
        /// 
        /// ## Dependency
        /// 
        /// This data source depends on apikey set in the provider configuration.
        /// </summary>
        public static Output<GetAccountVpcsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountVpcsResult>("cloudamqp:index/getAccountVpcs:getAccountVpcs", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetAccountVpcsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetAccountVpcsVpcResult> Vpcs;

        [OutputConstructor]
        private GetAccountVpcsResult(
            string id,

            ImmutableArray<Outputs.GetAccountVpcsVpcResult> vpcs)
        {
            Id = id;
            Vpcs = vpcs;
        }
    }
}
