// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudAmqp
{
    public static class GetAccountVpcs
    {
        /// <summary>
        /// Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.
        /// 
        /// ## Attributes reference
        /// 
        /// All attributes reference are computed
        /// 
        /// * `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.
        /// * `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.
        /// 
        /// ___
        /// 
        /// The `vpcs` block consist of
        /// 
        /// * `id`          - The VPC identifier.
        /// * `name`        - The internal VPC instance name.
        /// * `region`      - The region the VPC is hosted in.
        /// * `subnet`      - The VPC subnet.
        /// * `tags`        - Optional tags set for the VPC.
        /// * `vpc_name`    - VPC name given when hosted at the cloud provider.
        /// 
        /// ## Dependency
        /// 
        /// This data source depends on apikey set in the provider configuration.
        /// </summary>
        public static Task<GetAccountVpcsResult> InvokeAsync(InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountVpcsResult>("cloudamqp:index/getAccountVpcs:getAccountVpcs", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetAccountVpcsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetAccountVpcsVpcResult> Vpcs;

        [OutputConstructor]
        private GetAccountVpcsResult(
            string id,

            ImmutableArray<Outputs.GetAccountVpcsVpcResult> vpcs)
        {
            Id = id;
            Vpcs = vpcs;
        }
    }
}
