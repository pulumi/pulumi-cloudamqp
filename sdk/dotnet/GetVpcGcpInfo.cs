// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudAmqp
{
    public static class GetVpcGcpInfo
    {
        public static Task<GetVpcGcpInfoResult> InvokeAsync(GetVpcGcpInfoArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcGcpInfoResult>("cloudamqp:index/getVpcGcpInfo:getVpcGcpInfo", args ?? new GetVpcGcpInfoArgs(), options.WithDefaults());

        public static Output<GetVpcGcpInfoResult> Invoke(GetVpcGcpInfoInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcGcpInfoResult>("cloudamqp:index/getVpcGcpInfo:getVpcGcpInfo", args ?? new GetVpcGcpInfoInvokeArgs(), options.WithDefaults());

        public static Output<GetVpcGcpInfoResult> Invoke(GetVpcGcpInfoInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcGcpInfoResult>("cloudamqp:index/getVpcGcpInfo:getVpcGcpInfo", args ?? new GetVpcGcpInfoInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcGcpInfoArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CloudAMQP instance identifier.
        /// 
        /// ***Deprecated:*** from [v1.16.0], will be removed in next major version (v2.0)
        /// </summary>
        [Input("instanceId")]
        public int? InstanceId { get; set; }

        /// <summary>
        /// Configurable sleep time (seconds) between retries when reading peering.
        /// Default set to 10 seconds.
        /// </summary>
        [Input("sleep")]
        public int? Sleep { get; set; }

        /// <summary>
        /// Configurable timeout time (seconds) before retries times out. Default
        /// set to 1800 seconds.
        /// </summary>
        [Input("timeout")]
        public int? Timeout { get; set; }

        /// <summary>
        /// The managed VPC identifier.
        /// 
        /// ***Note:*** Available from [v1.16.0], will be removed in next major version (v2.0)
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetVpcGcpInfoArgs()
        {
        }
        public static new GetVpcGcpInfoArgs Empty => new GetVpcGcpInfoArgs();
    }

    public sealed class GetVpcGcpInfoInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CloudAMQP instance identifier.
        /// 
        /// ***Deprecated:*** from [v1.16.0], will be removed in next major version (v2.0)
        /// </summary>
        [Input("instanceId")]
        public Input<int>? InstanceId { get; set; }

        /// <summary>
        /// Configurable sleep time (seconds) between retries when reading peering.
        /// Default set to 10 seconds.
        /// </summary>
        [Input("sleep")]
        public Input<int>? Sleep { get; set; }

        /// <summary>
        /// Configurable timeout time (seconds) before retries times out. Default
        /// set to 1800 seconds.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// The managed VPC identifier.
        /// 
        /// ***Note:*** Available from [v1.16.0], will be removed in next major version (v2.0)
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetVpcGcpInfoInvokeArgs()
        {
        }
        public static new GetVpcGcpInfoInvokeArgs Empty => new GetVpcGcpInfoInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcGcpInfoResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? InstanceId;
        /// <summary>
        /// The name of the VPC.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// VPC network uri.
        /// </summary>
        public readonly string Network;
        public readonly int? Sleep;
        public readonly int? Timeout;
        public readonly string? VpcId;
        /// <summary>
        /// Dedicated VPC subnet.
        /// </summary>
        public readonly string VpcSubnet;

        [OutputConstructor]
        private GetVpcGcpInfoResult(
            string id,

            int? instanceId,

            string name,

            string network,

            int? sleep,

            int? timeout,

            string? vpcId,

            string vpcSubnet)
        {
            Id = id;
            InstanceId = instanceId;
            Name = name;
            Network = network;
            Sleep = sleep;
            Timeout = timeout;
            VpcId = vpcId;
            VpcSubnet = vpcSubnet;
        }
    }
}
