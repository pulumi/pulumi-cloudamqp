// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudAmqp
{
    public static class GetNotification
    {
        /// <summary>
        /// Use this data source to retrieve information about default or created recipients. The recipient will
        /// receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use
        /// `recipient_id` or `name`.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudAmqp = Pulumi.CloudAmqp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var defaultRecipient = CloudAmqp.GetNotification.Invoke(new()
        ///     {
        ///         InstanceId = instance.Id,
        ///         Name = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Dependency
        /// 
        /// This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
        /// </summary>
        public static Task<GetNotificationResult> InvokeAsync(GetNotificationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNotificationResult>("cloudamqp:index/getNotification:getNotification", args ?? new GetNotificationArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about default or created recipients. The recipient will
        /// receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use
        /// `recipient_id` or `name`.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudAmqp = Pulumi.CloudAmqp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var defaultRecipient = CloudAmqp.GetNotification.Invoke(new()
        ///     {
        ///         InstanceId = instance.Id,
        ///         Name = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Dependency
        /// 
        /// This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
        /// </summary>
        public static Output<GetNotificationResult> Invoke(GetNotificationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNotificationResult>("cloudamqp:index/getNotification:getNotification", args ?? new GetNotificationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about default or created recipients. The recipient will
        /// receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use
        /// `recipient_id` or `name`.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using CloudAmqp = Pulumi.CloudAmqp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var defaultRecipient = CloudAmqp.GetNotification.Invoke(new()
        ///     {
        ///         InstanceId = instance.Id,
        ///         Name = "default",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Dependency
        /// 
        /// This data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
        /// </summary>
        public static Output<GetNotificationResult> Invoke(GetNotificationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNotificationResult>("cloudamqp:index/getNotification:getNotification", args ?? new GetNotificationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNotificationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CloudAMQP instance identifier.
        /// </summary>
        [Input("instanceId", required: true)]
        public int InstanceId { get; set; }

        /// <summary>
        /// The name set for the recipient.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("options")]
        private Dictionary<string, string>? _options;

        /// <summary>
        /// Options argument (e.g. `rk` used for VictorOps routing key).
        /// </summary>
        public Dictionary<string, string> Options
        {
            get => _options ?? (_options = new Dictionary<string, string>());
            set => _options = value;
        }

        /// <summary>
        /// The recipient identifier.
        /// </summary>
        [Input("recipientId")]
        public int? RecipientId { get; set; }

        public GetNotificationArgs()
        {
        }
        public static new GetNotificationArgs Empty => new GetNotificationArgs();
    }

    public sealed class GetNotificationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CloudAMQP instance identifier.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<int> InstanceId { get; set; } = null!;

        /// <summary>
        /// The name set for the recipient.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("options")]
        private InputMap<string>? _options;

        /// <summary>
        /// Options argument (e.g. `rk` used for VictorOps routing key).
        /// </summary>
        public InputMap<string> Options
        {
            get => _options ?? (_options = new InputMap<string>());
            set => _options = value;
        }

        /// <summary>
        /// The recipient identifier.
        /// </summary>
        [Input("recipientId")]
        public Input<int>? RecipientId { get; set; }

        public GetNotificationInvokeArgs()
        {
        }
        public static new GetNotificationInvokeArgs Empty => new GetNotificationInvokeArgs();
    }


    [OutputType]
    public sealed class GetNotificationResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int InstanceId;
        public readonly string? Name;
        /// <summary>
        /// Options argument (e.g. `rk` used for VictorOps routing key).
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Options;
        public readonly int? RecipientId;
        /// <summary>
        /// The type of the recipient.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The notification endpoint, where to send the notification.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetNotificationResult(
            string id,

            int instanceId,

            string? name,

            ImmutableDictionary<string, string>? options,

            int? recipientId,

            string type,

            string value)
        {
            Id = id;
            InstanceId = instanceId;
            Name = name;
            Options = options;
            RecipientId = recipientId;
            Type = type;
            Value = value;
        }
    }
}
