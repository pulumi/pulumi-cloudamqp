// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudAmqp
{
    /// <summary>
    /// This resource allows you to expand the disk with additional storage capacity. There is no downtime when expanding the disk.
    /// 
    /// Only available for dedicated subscription plans hosted at Amazon Web Services (AWS) at this time.
    /// 
    /// &gt; **WARNING:** Due to restrictions from cloud providers, it's only possible to resize the disk every 8 hours.
    /// 
    /// Pricing is available at [cloudamqp.com](https://www.cloudamqp.com/).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using CloudAmqp = Pulumi.CloudAmqp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Instance
    ///     var instance = new CloudAmqp.Instance("instance", new()
    ///     {
    ///         Plan = "squirrel-1",
    ///         Region = "amazon-web-services::us-west-2",
    ///         RmqVersion = "3.10.1",
    ///     });
    /// 
    ///     // Resize disk with 25 extra GB
    ///     var resizeDisk = new CloudAmqp.ExtraDiskSize("resizeDisk", new()
    ///     {
    ///         InstanceId = instance.Id,
    ///         ExtraDiskSizeGb = 25,
    ///     });
    /// 
    ///     var nodes = CloudAmqp.GetNodes.Invoke(new()
    ///     {
    ///         InstanceId = instance.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Not possible to import this resource.
    /// </summary>
    [CloudAmqpResourceType("cloudamqp:index/extraDiskSize:ExtraDiskSize")]
    public partial class ExtraDiskSize : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Extra disk size in GB. Supported values: 25, 50, 100, 250, 500, 1000, 2000
        /// </summary>
        [Output("extraDiskSize")]
        public Output<int> ExtraDiskSizeGb { get; private set; } = null!;

        /// <summary>
        /// The CloudAMQP instance ID.
        /// </summary>
        [Output("instanceId")]
        public Output<int> InstanceId { get; private set; } = null!;


        /// <summary>
        /// Create a ExtraDiskSize resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExtraDiskSize(string name, ExtraDiskSizeArgs args, CustomResourceOptions? options = null)
            : base("cloudamqp:index/extraDiskSize:ExtraDiskSize", name, args ?? new ExtraDiskSizeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExtraDiskSize(string name, Input<string> id, ExtraDiskSizeState? state = null, CustomResourceOptions? options = null)
            : base("cloudamqp:index/extraDiskSize:ExtraDiskSize", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExtraDiskSize resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExtraDiskSize Get(string name, Input<string> id, ExtraDiskSizeState? state = null, CustomResourceOptions? options = null)
        {
            return new ExtraDiskSize(name, id, state, options);
        }
    }

    public sealed class ExtraDiskSizeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Extra disk size in GB. Supported values: 25, 50, 100, 250, 500, 1000, 2000
        /// </summary>
        [Input("extraDiskSize", required: true)]
        public Input<int> ExtraDiskSizeGb { get; set; } = null!;

        /// <summary>
        /// The CloudAMQP instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<int> InstanceId { get; set; } = null!;

        public ExtraDiskSizeArgs()
        {
        }
        public static new ExtraDiskSizeArgs Empty => new ExtraDiskSizeArgs();
    }

    public sealed class ExtraDiskSizeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Extra disk size in GB. Supported values: 25, 50, 100, 250, 500, 1000, 2000
        /// </summary>
        [Input("extraDiskSize")]
        public Input<int>? ExtraDiskSizeGb { get; set; }

        /// <summary>
        /// The CloudAMQP instance ID.
        /// </summary>
        [Input("instanceId")]
        public Input<int>? InstanceId { get; set; }

        public ExtraDiskSizeState()
        {
        }
        public static new ExtraDiskSizeState Empty => new ExtraDiskSizeState();
    }
}
