// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudAmqp
{
    /// <summary>
    /// Enable PrivateLink for a CloudAMQP instance hosted in AWS. If no existing VPC available when enable
    /// PrivateLink, a new VPC will be created with subnet `10.52.72.0/24`.
    /// 
    /// &gt; **Note:** Enabling PrivateLink will automatically add firewall rules for the peered subnet.
    /// &lt;details&gt;
    ///  &lt;summary&gt;
    ///     &lt;i&gt;Default PrivateLink firewall rule&lt;/i&gt;
    ///   &lt;/summary&gt;
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    /// });
    /// ```
    /// 
    /// &lt;/details&gt;
    /// 
    /// Pricing is available at [cloudamqp.com](https://www.cloudamqp.com/plans.html)
    /// where you can also find more information about
    /// [CloudAMQP PrivateLink](https://www.cloudamqp.com/docs/cloudamqp-privatelink.html#aws-privatelink).
    /// 
    /// Only available for dedicated subscription plans.
    /// 
    /// &gt; **Warning:** This resource considered deprecated and will be removed in next major version (v2.0).
    /// Recommended to start using the new resource`cloudamqp.VpcConnect`.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;details&gt;
    ///   &lt;summary&gt;
    ///     &lt;b&gt;
    ///       &lt;i&gt;CloudAMQP instance without existing VPC&lt;/i&gt;
    ///     &lt;/b&gt;
    ///   &lt;/summary&gt;
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using CloudAmqp = Pulumi.CloudAmqp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var instance = new CloudAmqp.Instance("instance", new()
    ///     {
    ///         Plan = "bunny-1",
    ///         Region = "amazon-web-services::us-west-1",
    ///         Tags = new[] {},
    ///     });
    /// 
    ///     var privatelink = new CloudAmqp.PrivatelinkAws("privatelink", new()
    ///     {
    ///         InstanceId = instance.Id,
    ///         AllowedPrincipals = new[]
    ///         {
    ///             "arn:aws:iam::aws-account-id:user/user-name",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// &lt;/details&gt;
    /// 
    /// &lt;details&gt;
    ///   &lt;summary&gt;
    ///     &lt;b&gt;
    ///       &lt;i&gt;CloudAMQP instance in an existing VPC&lt;/i&gt;
    ///     &lt;/b&gt;
    ///   &lt;/summary&gt;
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using CloudAmqp = Pulumi.CloudAmqp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vpc = new CloudAmqp.Vpc("vpc", new()
    ///     {
    ///         Region = "amazon-web-services::us-west-1",
    ///         Subnet = "10.56.72.0/24",
    ///         Tags = new[] {},
    ///     });
    /// 
    ///     var instance = new CloudAmqp.Instance("instance", new()
    ///     {
    ///         Plan = "bunny-1",
    ///         Region = "amazon-web-services::us-west-1",
    ///         Tags = new[] {},
    ///         VpcId = vpc.Id,
    ///         KeepAssociatedVpc = true,
    ///     });
    /// 
    ///     var privatelink = new CloudAmqp.PrivatelinkAws("privatelink", new()
    ///     {
    ///         InstanceId = instance.Id,
    ///         AllowedPrincipals = new[]
    ///         {
    ///             "arn:aws:iam::aws-account-id:user/user-name",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// &lt;/details&gt;
    /// ### With Additional Firewall Rules
    /// 
    /// &lt;details&gt;
    ///   &lt;summary&gt;
    ///     &lt;b&gt;
    ///       &lt;i&gt;CloudAMQP instance in an existing VPC with managed firewall rules&lt;/i&gt;
    ///     &lt;/b&gt;
    ///   &lt;/summary&gt;
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using CloudAmqp = Pulumi.CloudAmqp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vpc = new CloudAmqp.Vpc("vpc", new()
    ///     {
    ///         Region = "amazon-web-services::us-west-1",
    ///         Subnet = "10.56.72.0/24",
    ///         Tags = new[] {},
    ///     });
    /// 
    ///     var instance = new CloudAmqp.Instance("instance", new()
    ///     {
    ///         Plan = "bunny-1",
    ///         Region = "amazon-web-services::us-west-1",
    ///         Tags = new[] {},
    ///         VpcId = vpc.Id,
    ///         KeepAssociatedVpc = true,
    ///     });
    /// 
    ///     var privatelink = new CloudAmqp.PrivatelinkAws("privatelink", new()
    ///     {
    ///         InstanceId = instance.Id,
    ///         AllowedPrincipals = new[]
    ///         {
    ///             "arn:aws:iam::aws-account-id:user/user-name",
    ///         },
    ///     });
    /// 
    ///     var firewallSettings = new CloudAmqp.SecurityFirewall("firewallSettings", new()
    ///     {
    ///         InstanceId = instance.Id,
    ///         Rules = new[]
    ///         {
    ///             new CloudAmqp.Inputs.SecurityFirewallRuleArgs
    ///             {
    ///                 Description = "Custom PrivateLink setup",
    ///                 Ip = vpc.Subnet,
    ///                 Ports = new() { },
    ///                 Services = new[]
    ///                 {
    ///                     "AMQP",
    ///                     "AMQPS",
    ///                     "HTTPS",
    ///                     "STREAM",
    ///                     "STREAM_SSL",
    ///                 },
    ///             },
    ///             new CloudAmqp.Inputs.SecurityFirewallRuleArgs
    ///             {
    ///                 Description = "MGMT interface",
    ///                 Ip = "0.0.0.0/0",
    ///                 Ports = new() { },
    ///                 Services = new[]
    ///                 {
    ///                     "HTTPS",
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             privatelink,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// &lt;/details&gt;
    /// ## Depedency
    /// 
    /// This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
    /// 
    /// ## Create PrivateLink with additional firewall rules
    /// 
    /// To create a PrivateLink configuration with additional firewall rules, it's required to chain the cloudamqp.SecurityFirewall
    /// resource to avoid parallel conflicting resource calls. You can do this by making the firewall
    /// resource depend on the PrivateLink resource, `cloudamqp_privatelink_aws.privatelink`.
    /// 
    /// Furthermore, since all firewall rules are overwritten, the otherwise automatically added rules for
    /// the PrivateLink also needs to be added.
    /// 
    /// ## Import
    /// 
    /// `cloudamqp_privatelink_aws` can be imported using CloudAMQP internal identifier.
    /// 
    /// ```sh
    ///  $ pulumi import cloudamqp:index/privatelinkAws:PrivatelinkAws privatelink &lt;id&gt;`
    /// ```
    /// </summary>
    [CloudAmqpResourceType("cloudamqp:index/privatelinkAws:PrivatelinkAws")]
    public partial class PrivatelinkAws : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Covering availability zones used when creating an Endpoint from other VPC.
        /// </summary>
        [Output("activeZones")]
        public Output<ImmutableArray<string>> ActiveZones { get; private set; } = null!;

        /// <summary>
        /// Allowed principals to access the endpoint service.
        /// </summary>
        [Output("allowedPrincipals")]
        public Output<ImmutableArray<string>> AllowedPrincipals { get; private set; } = null!;

        /// <summary>
        /// The CloudAMQP instance identifier.
        /// </summary>
        [Output("instanceId")]
        public Output<int> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Service name of the PrivateLink used when creating the endpoint from other VPC.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Configurable sleep time (seconds) when enable PrivateLink.
        /// Default set to 10 seconds. *Available from v1.29.0*
        /// </summary>
        [Output("sleep")]
        public Output<int?> Sleep { get; private set; } = null!;

        /// <summary>
        /// PrivateLink status [enable, pending, disable]
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Configurable timeout time (seconds) when enable PrivateLink.
        /// Default set to 1800 seconds. *Available from v1.29.0*
        /// 
        /// Allowed principals format: &lt;br&gt;
        /// `arn:aws:iam::aws-account-id:root` &lt;br&gt;
        /// `arn:aws:iam::aws-account-id:user/user-name` &lt;br&gt;
        /// `arn:aws:iam::aws-account-id:role/role-name`
        /// </summary>
        [Output("timeout")]
        public Output<int?> Timeout { get; private set; } = null!;


        /// <summary>
        /// Create a PrivatelinkAws resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivatelinkAws(string name, PrivatelinkAwsArgs args, CustomResourceOptions? options = null)
            : base("cloudamqp:index/privatelinkAws:PrivatelinkAws", name, args ?? new PrivatelinkAwsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivatelinkAws(string name, Input<string> id, PrivatelinkAwsState? state = null, CustomResourceOptions? options = null)
            : base("cloudamqp:index/privatelinkAws:PrivatelinkAws", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivatelinkAws resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivatelinkAws Get(string name, Input<string> id, PrivatelinkAwsState? state = null, CustomResourceOptions? options = null)
        {
            return new PrivatelinkAws(name, id, state, options);
        }
    }

    public sealed class PrivatelinkAwsArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedPrincipals", required: true)]
        private InputList<string>? _allowedPrincipals;

        /// <summary>
        /// Allowed principals to access the endpoint service.
        /// </summary>
        public InputList<string> AllowedPrincipals
        {
            get => _allowedPrincipals ?? (_allowedPrincipals = new InputList<string>());
            set => _allowedPrincipals = value;
        }

        /// <summary>
        /// The CloudAMQP instance identifier.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<int> InstanceId { get; set; } = null!;

        /// <summary>
        /// Configurable sleep time (seconds) when enable PrivateLink.
        /// Default set to 10 seconds. *Available from v1.29.0*
        /// </summary>
        [Input("sleep")]
        public Input<int>? Sleep { get; set; }

        /// <summary>
        /// Configurable timeout time (seconds) when enable PrivateLink.
        /// Default set to 1800 seconds. *Available from v1.29.0*
        /// 
        /// Allowed principals format: &lt;br&gt;
        /// `arn:aws:iam::aws-account-id:root` &lt;br&gt;
        /// `arn:aws:iam::aws-account-id:user/user-name` &lt;br&gt;
        /// `arn:aws:iam::aws-account-id:role/role-name`
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public PrivatelinkAwsArgs()
        {
        }
        public static new PrivatelinkAwsArgs Empty => new PrivatelinkAwsArgs();
    }

    public sealed class PrivatelinkAwsState : global::Pulumi.ResourceArgs
    {
        [Input("activeZones")]
        private InputList<string>? _activeZones;

        /// <summary>
        /// Covering availability zones used when creating an Endpoint from other VPC.
        /// </summary>
        public InputList<string> ActiveZones
        {
            get => _activeZones ?? (_activeZones = new InputList<string>());
            set => _activeZones = value;
        }

        [Input("allowedPrincipals")]
        private InputList<string>? _allowedPrincipals;

        /// <summary>
        /// Allowed principals to access the endpoint service.
        /// </summary>
        public InputList<string> AllowedPrincipals
        {
            get => _allowedPrincipals ?? (_allowedPrincipals = new InputList<string>());
            set => _allowedPrincipals = value;
        }

        /// <summary>
        /// The CloudAMQP instance identifier.
        /// </summary>
        [Input("instanceId")]
        public Input<int>? InstanceId { get; set; }

        /// <summary>
        /// Service name of the PrivateLink used when creating the endpoint from other VPC.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Configurable sleep time (seconds) when enable PrivateLink.
        /// Default set to 10 seconds. *Available from v1.29.0*
        /// </summary>
        [Input("sleep")]
        public Input<int>? Sleep { get; set; }

        /// <summary>
        /// PrivateLink status [enable, pending, disable]
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Configurable timeout time (seconds) when enable PrivateLink.
        /// Default set to 1800 seconds. *Available from v1.29.0*
        /// 
        /// Allowed principals format: &lt;br&gt;
        /// `arn:aws:iam::aws-account-id:root` &lt;br&gt;
        /// `arn:aws:iam::aws-account-id:user/user-name` &lt;br&gt;
        /// `arn:aws:iam::aws-account-id:role/role-name`
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public PrivatelinkAwsState()
        {
        }
        public static new PrivatelinkAwsState Empty => new PrivatelinkAwsState();
    }
}
