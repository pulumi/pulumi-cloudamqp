// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.CloudAmqp
{
    /// <summary>
    /// This resource allows you to enable or disable webhooks for a specific vhost and queue.
    /// 
    /// Only available for dedicated subscription plans.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using CloudAmqp = Pulumi.CloudAmqp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var webhookQueue = new CloudAmqp.Webhook("webhookQueue", new CloudAmqp.WebhookArgs
    ///         {
    ///             InstanceId = cloudamqp_instance.Instance.Id,
    ///             Vhost = "myvhost",
    ///             Queue = "webhook-queue",
    ///             WebhookUri = "https://example.com/webhook?key=secret",
    ///             RetryInterval = 5,
    ///             Concurrency = 5,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ## Dependency
    /// 
    /// This resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.
    /// 
    /// ## Import
    /// 
    /// `cloudamqp_webhook` can be imported using the resource identifier together with CloudAMQP instance identifier. The identifiers are CSV separated, see example below.
    /// 
    /// ```sh
    ///  $ pulumi import cloudamqp:index/webhook:Webhook webhook_queue &lt;id&gt;,&lt;instance_id&gt;`
    /// ```
    /// </summary>
    [CloudAmqpResourceType("cloudamqp:index/webhook:Webhook")]
    public partial class Webhook : Pulumi.CustomResource
    {
        /// <summary>
        /// Max simultaneous requests to the endpoint.
        /// </summary>
        [Output("concurrency")]
        public Output<int> Concurrency { get; private set; } = null!;

        /// <summary>
        /// The CloudAMQP instance ID.
        /// </summary>
        [Output("instanceId")]
        public Output<int> InstanceId { get; private set; } = null!;

        /// <summary>
        /// A (durable) queue on your RabbitMQ instance.
        /// </summary>
        [Output("queue")]
        public Output<string> Queue { get; private set; } = null!;

        /// <summary>
        /// How often we retry if your endpoint fails (in seconds).
        /// </summary>
        [Output("retryInterval")]
        public Output<int> RetryInterval { get; private set; } = null!;

        /// <summary>
        /// The vhost the queue resides in.
        /// </summary>
        [Output("vhost")]
        public Output<string> Vhost { get; private set; } = null!;

        /// <summary>
        /// A POST request will be made for each message in the queue to this endpoint.
        /// </summary>
        [Output("webhookUri")]
        public Output<string> WebhookUri { get; private set; } = null!;


        /// <summary>
        /// Create a Webhook resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Webhook(string name, WebhookArgs args, CustomResourceOptions? options = null)
            : base("cloudamqp:index/webhook:Webhook", name, args ?? new WebhookArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Webhook(string name, Input<string> id, WebhookState? state = null, CustomResourceOptions? options = null)
            : base("cloudamqp:index/webhook:Webhook", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Webhook resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Webhook Get(string name, Input<string> id, WebhookState? state = null, CustomResourceOptions? options = null)
        {
            return new Webhook(name, id, state, options);
        }
    }

    public sealed class WebhookArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Max simultaneous requests to the endpoint.
        /// </summary>
        [Input("concurrency", required: true)]
        public Input<int> Concurrency { get; set; } = null!;

        /// <summary>
        /// The CloudAMQP instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<int> InstanceId { get; set; } = null!;

        /// <summary>
        /// A (durable) queue on your RabbitMQ instance.
        /// </summary>
        [Input("queue", required: true)]
        public Input<string> Queue { get; set; } = null!;

        /// <summary>
        /// How often we retry if your endpoint fails (in seconds).
        /// </summary>
        [Input("retryInterval", required: true)]
        public Input<int> RetryInterval { get; set; } = null!;

        /// <summary>
        /// The vhost the queue resides in.
        /// </summary>
        [Input("vhost", required: true)]
        public Input<string> Vhost { get; set; } = null!;

        /// <summary>
        /// A POST request will be made for each message in the queue to this endpoint.
        /// </summary>
        [Input("webhookUri", required: true)]
        public Input<string> WebhookUri { get; set; } = null!;

        public WebhookArgs()
        {
        }
    }

    public sealed class WebhookState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Max simultaneous requests to the endpoint.
        /// </summary>
        [Input("concurrency")]
        public Input<int>? Concurrency { get; set; }

        /// <summary>
        /// The CloudAMQP instance ID.
        /// </summary>
        [Input("instanceId")]
        public Input<int>? InstanceId { get; set; }

        /// <summary>
        /// A (durable) queue on your RabbitMQ instance.
        /// </summary>
        [Input("queue")]
        public Input<string>? Queue { get; set; }

        /// <summary>
        /// How often we retry if your endpoint fails (in seconds).
        /// </summary>
        [Input("retryInterval")]
        public Input<int>? RetryInterval { get; set; }

        /// <summary>
        /// The vhost the queue resides in.
        /// </summary>
        [Input("vhost")]
        public Input<string>? Vhost { get; set; }

        /// <summary>
        /// A POST request will be made for each message in the queue to this endpoint.
        /// </summary>
        [Input("webhookUri")]
        public Input<string>? WebhookUri { get; set; }

        public WebhookState()
        {
        }
    }
}
