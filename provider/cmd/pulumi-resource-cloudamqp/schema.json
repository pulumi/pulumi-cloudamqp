{
    "name": "cloudamqp",
    "displayName": "CloudAMQP",
    "description": "A Pulumi package for creating and managing CloudAMQP resources.",
    "keywords": [
        "pulumi",
        "cloudamqp"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`cloudamqp` Terraform Provider](https://github.com/cloudamqp/terraform-provider-cloudamqp).",
    "repository": "https://github.com/pulumi/pulumi-cloudamqp",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "cloudamqp": "CloudAmqp"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing CloudAMQP resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/cloudamqp/terraform-provider-cloudamqp)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cloudamqp` repo](https://github.com/pulumi/pulumi-cloudamqp/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cloudamqp` repo](https://github.com/cloudamqp/terraform-provider-cloudamqp/issues).",
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/cloudamqp/terraform-provider-cloudamqp)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cloudamqp` repo](https://github.com/pulumi/pulumi-cloudamqp/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cloudamqp` repo](https://github.com/cloudamqp/terraform-provider-cloudamqp/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "apikey": {
                "type": "string",
                "description": "Key used to authentication to the CloudAMQP Customer API\n"
            },
            "baseurl": {
                "type": "string",
                "description": "Base URL to CloudAMQP Customer website\n"
            },
            "enableFasterInstanceDestroy": {
                "type": "boolean"
            }
        },
        "defaults": [
            "apikey"
        ]
    },
    "types": {
        "cloudamqp:index/ExtraDiskSizeNode:ExtraDiskSizeNode": {
            "properties": {
                "additionalDiskSize": {
                    "type": "integer",
                    "description": "Additional added disk size\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "Subscription plan disk size\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "additionalDiskSize",
                        "diskSize",
                        "name"
                    ]
                }
            }
        },
        "cloudamqp:index/InstanceCopySetting:InstanceCopySetting": {
            "properties": {
                "settings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of one or more settings to be copied. Allowed values: [alarms, config, definitions, firewall, logs, metrics, plugins]\n\nSee more below, copy settings\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "Instance identifier of the CloudAMQP instance to copy the settings from.\n"
                }
            },
            "type": "object",
            "required": [
                "settings",
                "subscriptionId"
            ]
        },
        "cloudamqp:index/NotificationResponder:NotificationResponder": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier in UUID format\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the responder\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of responder. [`team`, `user`, `escalation`, `schedule`]\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username of the responder\n\nResponders of type `team`, `escalation` and `schedule` can use either id or name.\nWhile `user` can use either id or username.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "cloudamqp:index/SecurityFirewallRule:SecurityFirewallRule": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description name of the rule. e.g. Default.\n\nPre-defined services for RabbitMQ:\n\n| Service name | Port  |\n|--------------|-------|\n| AMQP         | 5672  |\n| AMQPS        | 5671  |\n| HTTPS        | 443   |\n| MQTT         | 1883  |\n| MQTTS        | 8883  |\n| STOMP        | 61613 |\n| STOMPS       | 61614 |\n| STREAM       | 5552  |\n| STREAM_SSL   | 5551  |\n\nPre-defined services for LavinMQ:\n\n| Service name | Port  |\n|--------------|-------|\n| AMQP         | 5672  |\n| AMQPS        | 5671  |\n| HTTPS        | 443   |\n"
                },
                "ip": {
                    "type": "string",
                    "description": "CIDR address: IP address with CIDR notation (e.g. 10.56.72.0/24)\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Custom ports to be opened\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pre-defined service ports, see table below\n"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "cloudamqp:index/getAccountInstance:getAccountInstance": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The instance identifier\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the instance\n"
                },
                "plan": {
                    "type": "string",
                    "description": "The subscription plan used for the instance\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region were the instanece is located in\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tag for the instance\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "plan",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudamqp:index/getAccountVpcsVpc:getAccountVpcsVpc": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The instance identifier\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the instance\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region were the instanece is located in\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "The VPC subnet\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tag the VPC instance with optional tags\n"
                },
                "vpcName": {
                    "type": "string",
                    "description": "VPC name given when hosted at the cloud provider\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "region",
                "subnet",
                "vpcName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudamqp:index/getNodesNode:getNodesNode": {
            "properties": {
                "additionalDiskSize": {
                    "type": "integer"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "configured": {
                    "type": "boolean"
                },
                "diskSize": {
                    "type": "integer"
                },
                "erlangVersion": {
                    "type": "string"
                },
                "hipe": {
                    "type": "boolean"
                },
                "hostname": {
                    "type": "string"
                },
                "hostnameInternal": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rabbitmqVersion": {
                    "type": "string"
                },
                "running": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "additionalDiskSize",
                "availabilityZone",
                "configured",
                "diskSize",
                "erlangVersion",
                "hipe",
                "hostname",
                "hostnameInternal",
                "name",
                "rabbitmqVersion",
                "running"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudamqp:index/getPluginsCommunityPlugin:getPluginsCommunityPlugin": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "require": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "require"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudamqp:index/getPluginsPlugin:getPluginsPlugin": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "name",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the cloudamqp package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apikey": {
                "type": "string",
                "description": "Key used to authentication to the CloudAMQP Customer API\n"
            },
            "baseurl": {
                "type": "string",
                "description": "Base URL to CloudAMQP Customer website\n"
            },
            "enableFasterInstanceDestroy": {
                "type": "boolean"
            }
        },
        "required": [
            "apikey"
        ],
        "inputProperties": {
            "apikey": {
                "type": "string",
                "description": "Key used to authentication to the CloudAMQP Customer API\n"
            },
            "baseurl": {
                "type": "string",
                "description": "Base URL to CloudAMQP Customer website\n"
            },
            "enableFasterInstanceDestroy": {
                "type": "boolean"
            }
        },
        "requiredInputs": [
            "apikey"
        ]
    },
    "resources": {
        "cloudamqp:index/accountAction:AccountAction": {
            "description": "\n\n## Import\n\nNot possible to import this resource.\n\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to be invoked. Allowed actions `rotate-password`, `rotate-apikey`.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                }
            },
            "required": [
                "action",
                "instanceId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action to be invoked. Allowed actions `rotate-password`, `rotate-apikey`.\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                }
            },
            "requiredInputs": [
                "action",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountAction resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to be invoked. Allowed actions `rotate-password`, `rotate-apikey`.\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/alarm:Alarm": {
            "description": "\n\n## Import\n\n`cloudamqp_alarm` can be imported using CloudAMQP internal identifier of the alarm together (CSV separated) with the instance identifier. To retrieve the alarm identifier, use [CloudAMQP API](https://docs.cloudamqp.com/cloudamqp_api.html#list-alarms)\n\n```sh\n$ pulumi import cloudamqp:index/alarm:Alarm alarm \u003cid\u003e,\u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the alarm to trigger.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "messageType": {
                    "type": "string",
                    "description": "Message type `(total, unacked, ready)` used by queue alarm type.\n\nSpecific argument for `disk` alarm\n"
                },
                "queueRegex": {
                    "type": "string",
                    "description": "Regex for which queue to check.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifier for recipient to be notified. Leave empty to notify all recipients.\n"
                },
                "reminderInterval": {
                    "type": "integer",
                    "description": "The reminder interval (in seconds) to resend the alarm if not resolved. Set to 0 for no reminders. The Default is 0.\n"
                },
                "timeThreshold": {
                    "type": "integer",
                    "description": "The time interval (in seconds) the `value_threshold` should be active before triggering an alarm.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The alarm type, see valid options below.\n"
                },
                "valueCalculation": {
                    "type": "string",
                    "description": "Disk value threshold calculation, `fixed, percentage` of disk space remaining.\n\nBased on alarm type, different arguments are flagged as required or optional.\n"
                },
                "valueThreshold": {
                    "type": "integer",
                    "description": "The value to trigger the alarm for.\n"
                },
                "vhostRegex": {
                    "type": "string",
                    "description": "Regex for which vhost to check\n"
                }
            },
            "required": [
                "enabled",
                "instanceId",
                "recipients",
                "type"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the alarm to trigger.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "messageType": {
                    "type": "string",
                    "description": "Message type `(total, unacked, ready)` used by queue alarm type.\n\nSpecific argument for `disk` alarm\n"
                },
                "queueRegex": {
                    "type": "string",
                    "description": "Regex for which queue to check.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identifier for recipient to be notified. Leave empty to notify all recipients.\n"
                },
                "reminderInterval": {
                    "type": "integer",
                    "description": "The reminder interval (in seconds) to resend the alarm if not resolved. Set to 0 for no reminders. The Default is 0.\n"
                },
                "timeThreshold": {
                    "type": "integer",
                    "description": "The time interval (in seconds) the `value_threshold` should be active before triggering an alarm.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The alarm type, see valid options below.\n"
                },
                "valueCalculation": {
                    "type": "string",
                    "description": "Disk value threshold calculation, `fixed, percentage` of disk space remaining.\n\nBased on alarm type, different arguments are flagged as required or optional.\n"
                },
                "valueThreshold": {
                    "type": "integer",
                    "description": "The value to trigger the alarm for.\n"
                },
                "vhostRegex": {
                    "type": "string",
                    "description": "Regex for which vhost to check\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "instanceId",
                "recipients",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Alarm resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable or disable the alarm to trigger.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "messageType": {
                        "type": "string",
                        "description": "Message type `(total, unacked, ready)` used by queue alarm type.\n\nSpecific argument for `disk` alarm\n"
                    },
                    "queueRegex": {
                        "type": "string",
                        "description": "Regex for which queue to check.\n"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Identifier for recipient to be notified. Leave empty to notify all recipients.\n"
                    },
                    "reminderInterval": {
                        "type": "integer",
                        "description": "The reminder interval (in seconds) to resend the alarm if not resolved. Set to 0 for no reminders. The Default is 0.\n"
                    },
                    "timeThreshold": {
                        "type": "integer",
                        "description": "The time interval (in seconds) the `value_threshold` should be active before triggering an alarm.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The alarm type, see valid options below.\n"
                    },
                    "valueCalculation": {
                        "type": "string",
                        "description": "Disk value threshold calculation, `fixed, percentage` of disk space remaining.\n\nBased on alarm type, different arguments are flagged as required or optional.\n"
                    },
                    "valueThreshold": {
                        "type": "integer",
                        "description": "The value to trigger the alarm for.\n"
                    },
                    "vhostRegex": {
                        "type": "string",
                        "description": "Regex for which vhost to check\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/customDomain:CustomDomain": {
            "description": "This resource allows you to configure and manage your custom domain for the CloudAMQP instance.\n\nAdding a custom domain to your instance will generate a TLS certificate from [Let's Encrypt], for the given hostname, and install it on all servers in your cluster. The certificate will be automatically renewed going forward.\n\n\u003e **WARNING:** Please note that when creating, changing or deleting the custom domain, the listeners on your servers will be restarted in order to apply the changes. This will close your current connections.\n\nYour custom domain name needs to point to your CloudAMQP hostname, preferably using a CNAME DNS record.\n\nOnly available for dedicated subscription plans.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst settings = new cloudamqp.CustomDomain(\"settings\", {\n    instanceId: instance.id,\n    hostname: \"myname.mydomain\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nsettings = cloudamqp.CustomDomain(\"settings\",\n    instance_id=instance[\"id\"],\n    hostname=\"myname.mydomain\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var settings = new CloudAmqp.CustomDomain(\"settings\", new()\n    {\n        InstanceId = instance.Id,\n        Hostname = \"myname.mydomain\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewCustomDomain(ctx, \"settings\", \u0026cloudamqp.CustomDomainArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tHostname:   pulumi.String(\"myname.mydomain\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CustomDomain;\nimport com.pulumi.cloudamqp.CustomDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var settings = new CustomDomain(\"settings\", CustomDomainArgs.builder()\n            .instanceId(instance.id())\n            .hostname(\"myname.mydomain\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  settings:\n    type: cloudamqp:CustomDomain\n    properties:\n      instanceId: ${instance.id}\n      hostname: myname.mydomain\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Depedency\n\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n## Import\n\n`cloudamqp_custom_domain` can be imported using CloudAMQP instance identifier.\n\n```sh\n$ pulumi import cloudamqp:index/customDomain:CustomDomain settings \u003cinstance_id\u003e`\n```\n\n[Let's Encrypt]: https://letsencrypt.org/\n\n",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": "Your custom domain name.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                }
            },
            "required": [
                "hostname",
                "instanceId"
            ],
            "inputProperties": {
                "hostname": {
                    "type": "string",
                    "description": "Your custom domain name.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostname",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomDomain resources.\n",
                "properties": {
                    "hostname": {
                        "type": "string",
                        "description": "Your custom domain name.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/extraDiskSize:ExtraDiskSize": {
            "description": "This resource allows you to resize the disk with additional storage capacity.\n\n***Before v1.25.0***: Only available for Amazon Web Services (AWS) without downtime.\n\n***From v1.25.0***: Google Compute Engine (GCE) and Azure available.\n\nIntroducing a new optional argument called `allow_downtime`.  Leaving it out or set it to false will proceed to try and resize the disk without downtime, available for *AWS* and *GCE*.\nWhile *Azure* only support swapping the disk, and this argument needs to be set to *true*.\n\n`allow_downtime` also makes it possible to circumvent the time rate limit or shrinking the disk.\n\n| Cloud Platform        | allow_downtime=false | allow_downtime=true           |\n|-----------------------|----------------------|-------------------------------|\n| amazon-web-services   | Expand current disk* | Try to expand, otherwise swap |\n| google-compute-engine | Expand current disk* | Try to expand, otherwise swap |\n| azure-arm             | Not supported        | Swap disk to new size         |\n\n*Preferable method to use.\n\n\u003e **WARNING:** Due to restrictions from cloud providers, it's only possible to resize the disk every 8 hours. Unless the `allow_downtime=true` is set, then the disk will be swapped for a new.\n\nPricing is available at [cloudamqp.com](https://www.cloudamqp.com/) and only available for dedicated subscription plans.\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eAWS extra disk size (before v1.25.0)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Instance\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-2\",\n});\n// Resize disk with 25 extra GB\nconst resizeDisk = new cloudamqp.ExtraDiskSize(\"resize_disk\", {\n    instanceId: instance.id,\n    extraDiskSize: 25,\n});\n// Optional, refresh nodes info after disk resize by adding dependency\n// to cloudamqp_extra_disk_size.resize_disk resource\nconst nodes = instance.id.apply(id =\u003e cloudamqp.getNodesOutput({\n    instanceId: id,\n}));\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Instance\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-2\")\n# Resize disk with 25 extra GB\nresize_disk = cloudamqp.ExtraDiskSize(\"resize_disk\",\n    instance_id=instance.id,\n    extra_disk_size=25)\n# Optional, refresh nodes info after disk resize by adding dependency\n# to cloudamqp_extra_disk_size.resize_disk resource\nnodes = instance.id.apply(lambda id: cloudamqp.get_nodes_output(instance_id=id))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Instance\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-2\",\n    });\n\n    // Resize disk with 25 extra GB\n    var resizeDisk = new CloudAmqp.ExtraDiskSize(\"resize_disk\", new()\n    {\n        InstanceId = instance.Id,\n        ExtraDiskSizeGb = 25,\n    });\n\n    // Optional, refresh nodes info after disk resize by adding dependency\n    // to cloudamqp_extra_disk_size.resize_disk resource\n    var nodes = CloudAmqp.GetNodes.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Instance\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"Instance\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Resize disk with 25 extra GB\n\t\t_, err = cloudamqp.NewExtraDiskSize(ctx, \"resize_disk\", \u0026cloudamqp.ExtraDiskSizeArgs{\n\t\t\tInstanceId:    instance.ID(),\n\t\t\tExtraDiskSize: pulumi.Int(25),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Optional, refresh nodes info after disk resize by adding dependency\n\t\t// to cloudamqp_extra_disk_size.resize_disk resource\n\t\t_ = instance.ID().ApplyT(func(id string) (cloudamqp.GetNodesResult, error) {\n\t\t\treturn cloudamqp.GetNodesResult(interface{}(cloudamqp.GetNodesOutput(ctx, cloudamqp.GetNodesOutputArgs{\n\t\t\t\tInstanceId: id,\n\t\t\t}, nil))), nil\n\t\t}).(cloudamqp.GetNodesResultOutput)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.ExtraDiskSize;\nimport com.pulumi.cloudamqp.ExtraDiskSizeArgs;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetNodesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Instance\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-2\")\n            .build());\n\n        // Resize disk with 25 extra GB\n        var resizeDisk = new ExtraDiskSize(\"resizeDisk\", ExtraDiskSizeArgs.builder()\n            .instanceId(instance.id())\n            .extraDiskSize(25)\n            .build());\n\n        // Optional, refresh nodes info after disk resize by adding dependency\n        // to cloudamqp_extra_disk_size.resize_disk resource\n        final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Instance\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance\n      plan: bunny-1\n      region: amazon-web-services::us-west-2\n  # Resize disk with 25 extra GB\n  resizeDisk:\n    type: cloudamqp:ExtraDiskSize\n    name: resize_disk\n    properties:\n      instanceId: ${instance.id}\n      extraDiskSize: 25\nvariables:\n  # Optional, refresh nodes info after disk resize by adding dependency\n  # to cloudamqp_extra_disk_size.resize_disk resource\n  nodes:\n    fn::invoke:\n      function: cloudamqp:getNodes\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eAWS extra disk size without downtime\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Instance\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-2\",\n});\n// Resize disk with 25 extra GB, without downtime\nconst resizeDisk = new cloudamqp.ExtraDiskSize(\"resize_disk\", {\n    instanceId: instance.id,\n    extraDiskSize: 25,\n});\n// Optional, refresh nodes info after disk resize by adding dependency\n// to cloudamqp_extra_disk_size.resize_disk resource\nconst nodes = instance.id.apply(id =\u003e cloudamqp.getNodesOutput({\n    instanceId: id,\n}));\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Instance\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-2\")\n# Resize disk with 25 extra GB, without downtime\nresize_disk = cloudamqp.ExtraDiskSize(\"resize_disk\",\n    instance_id=instance.id,\n    extra_disk_size=25)\n# Optional, refresh nodes info after disk resize by adding dependency\n# to cloudamqp_extra_disk_size.resize_disk resource\nnodes = instance.id.apply(lambda id: cloudamqp.get_nodes_output(instance_id=id))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Instance\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-2\",\n    });\n\n    // Resize disk with 25 extra GB, without downtime\n    var resizeDisk = new CloudAmqp.ExtraDiskSize(\"resize_disk\", new()\n    {\n        InstanceId = instance.Id,\n        ExtraDiskSizeGb = 25,\n    });\n\n    // Optional, refresh nodes info after disk resize by adding dependency\n    // to cloudamqp_extra_disk_size.resize_disk resource\n    var nodes = CloudAmqp.GetNodes.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Instance\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"Instance\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Resize disk with 25 extra GB, without downtime\n\t\t_, err = cloudamqp.NewExtraDiskSize(ctx, \"resize_disk\", \u0026cloudamqp.ExtraDiskSizeArgs{\n\t\t\tInstanceId:    instance.ID(),\n\t\t\tExtraDiskSize: pulumi.Int(25),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Optional, refresh nodes info after disk resize by adding dependency\n\t\t// to cloudamqp_extra_disk_size.resize_disk resource\n\t\t_ = instance.ID().ApplyT(func(id string) (cloudamqp.GetNodesResult, error) {\n\t\t\treturn cloudamqp.GetNodesResult(interface{}(cloudamqp.GetNodesOutput(ctx, cloudamqp.GetNodesOutputArgs{\n\t\t\t\tInstanceId: id,\n\t\t\t}, nil))), nil\n\t\t}).(cloudamqp.GetNodesResultOutput)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.ExtraDiskSize;\nimport com.pulumi.cloudamqp.ExtraDiskSizeArgs;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetNodesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Instance\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-2\")\n            .build());\n\n        // Resize disk with 25 extra GB, without downtime\n        var resizeDisk = new ExtraDiskSize(\"resizeDisk\", ExtraDiskSizeArgs.builder()\n            .instanceId(instance.id())\n            .extraDiskSize(25)\n            .build());\n\n        // Optional, refresh nodes info after disk resize by adding dependency\n        // to cloudamqp_extra_disk_size.resize_disk resource\n        final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Instance\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance\n      plan: bunny-1\n      region: amazon-web-services::us-west-2\n  # Resize disk with 25 extra GB, without downtime\n  resizeDisk:\n    type: cloudamqp:ExtraDiskSize\n    name: resize_disk\n    properties:\n      instanceId: ${instance.id}\n      extraDiskSize: 25\nvariables:\n  # Optional, refresh nodes info after disk resize by adding dependency\n  # to cloudamqp_extra_disk_size.resize_disk resource\n  nodes:\n    fn::invoke:\n      function: cloudamqp:getNodes\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eGCE extra disk size without downtime\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Instance\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance\",\n    plan: \"bunny-1\",\n    region: \"google-compute-engine::us-central1\",\n});\n// Resize disk with 25 extra GB, without downtime\nconst resizeDisk = new cloudamqp.ExtraDiskSize(\"resize_disk\", {\n    instanceId: instance.id,\n    extraDiskSize: 25,\n});\n// Optional, refresh nodes info after disk resize by adding dependency\n// to cloudamqp_extra_disk_size.resize_disk resource\nconst nodes = instance.id.apply(id =\u003e cloudamqp.getNodesOutput({\n    instanceId: id,\n}));\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Instance\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance\",\n    plan=\"bunny-1\",\n    region=\"google-compute-engine::us-central1\")\n# Resize disk with 25 extra GB, without downtime\nresize_disk = cloudamqp.ExtraDiskSize(\"resize_disk\",\n    instance_id=instance.id,\n    extra_disk_size=25)\n# Optional, refresh nodes info after disk resize by adding dependency\n# to cloudamqp_extra_disk_size.resize_disk resource\nnodes = instance.id.apply(lambda id: cloudamqp.get_nodes_output(instance_id=id))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Instance\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance\",\n        Plan = \"bunny-1\",\n        Region = \"google-compute-engine::us-central1\",\n    });\n\n    // Resize disk with 25 extra GB, without downtime\n    var resizeDisk = new CloudAmqp.ExtraDiskSize(\"resize_disk\", new()\n    {\n        InstanceId = instance.Id,\n        ExtraDiskSizeGb = 25,\n    });\n\n    // Optional, refresh nodes info after disk resize by adding dependency\n    // to cloudamqp_extra_disk_size.resize_disk resource\n    var nodes = CloudAmqp.GetNodes.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Instance\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"Instance\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"google-compute-engine::us-central1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Resize disk with 25 extra GB, without downtime\n\t\t_, err = cloudamqp.NewExtraDiskSize(ctx, \"resize_disk\", \u0026cloudamqp.ExtraDiskSizeArgs{\n\t\t\tInstanceId:    instance.ID(),\n\t\t\tExtraDiskSize: pulumi.Int(25),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Optional, refresh nodes info after disk resize by adding dependency\n\t\t// to cloudamqp_extra_disk_size.resize_disk resource\n\t\t_ = instance.ID().ApplyT(func(id string) (cloudamqp.GetNodesResult, error) {\n\t\t\treturn cloudamqp.GetNodesResult(interface{}(cloudamqp.GetNodesOutput(ctx, cloudamqp.GetNodesOutputArgs{\n\t\t\t\tInstanceId: id,\n\t\t\t}, nil))), nil\n\t\t}).(cloudamqp.GetNodesResultOutput)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.ExtraDiskSize;\nimport com.pulumi.cloudamqp.ExtraDiskSizeArgs;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetNodesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Instance\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance\")\n            .plan(\"bunny-1\")\n            .region(\"google-compute-engine::us-central1\")\n            .build());\n\n        // Resize disk with 25 extra GB, without downtime\n        var resizeDisk = new ExtraDiskSize(\"resizeDisk\", ExtraDiskSizeArgs.builder()\n            .instanceId(instance.id())\n            .extraDiskSize(25)\n            .build());\n\n        // Optional, refresh nodes info after disk resize by adding dependency\n        // to cloudamqp_extra_disk_size.resize_disk resource\n        final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Instance\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance\n      plan: bunny-1\n      region: google-compute-engine::us-central1\n  # Resize disk with 25 extra GB, without downtime\n  resizeDisk:\n    type: cloudamqp:ExtraDiskSize\n    name: resize_disk\n    properties:\n      instanceId: ${instance.id}\n      extraDiskSize: 25\nvariables:\n  # Optional, refresh nodes info after disk resize by adding dependency\n  # to cloudamqp_extra_disk_size.resize_disk resource\n  nodes:\n    fn::invoke:\n      function: cloudamqp:getNodes\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eAzure extra disk size with downtime\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Instance\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance\",\n    plan: \"bunny-1\",\n    region: \"azure-arm::centralus\",\n});\n// Resize disk with 25 extra GB, with downtime\nconst resizeDisk = new cloudamqp.ExtraDiskSize(\"resize_disk\", {\n    instanceId: instance.id,\n    extraDiskSize: 25,\n    allowDowntime: true,\n});\n// Optional, refresh nodes info after disk resize by adding dependency\n// to cloudamqp_extra_disk_size.resize_disk resource\nconst nodes = instance.id.apply(id =\u003e cloudamqp.getNodesOutput({\n    instanceId: id,\n}));\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Instance\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance\",\n    plan=\"bunny-1\",\n    region=\"azure-arm::centralus\")\n# Resize disk with 25 extra GB, with downtime\nresize_disk = cloudamqp.ExtraDiskSize(\"resize_disk\",\n    instance_id=instance.id,\n    extra_disk_size=25,\n    allow_downtime=True)\n# Optional, refresh nodes info after disk resize by adding dependency\n# to cloudamqp_extra_disk_size.resize_disk resource\nnodes = instance.id.apply(lambda id: cloudamqp.get_nodes_output(instance_id=id))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Instance\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance\",\n        Plan = \"bunny-1\",\n        Region = \"azure-arm::centralus\",\n    });\n\n    // Resize disk with 25 extra GB, with downtime\n    var resizeDisk = new CloudAmqp.ExtraDiskSize(\"resize_disk\", new()\n    {\n        InstanceId = instance.Id,\n        ExtraDiskSizeGb = 25,\n        AllowDowntime = true,\n    });\n\n    // Optional, refresh nodes info after disk resize by adding dependency\n    // to cloudamqp_extra_disk_size.resize_disk resource\n    var nodes = CloudAmqp.GetNodes.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Instance\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"Instance\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"azure-arm::centralus\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Resize disk with 25 extra GB, with downtime\n\t\t_, err = cloudamqp.NewExtraDiskSize(ctx, \"resize_disk\", \u0026cloudamqp.ExtraDiskSizeArgs{\n\t\t\tInstanceId:    instance.ID(),\n\t\t\tExtraDiskSize: pulumi.Int(25),\n\t\t\tAllowDowntime: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Optional, refresh nodes info after disk resize by adding dependency\n\t\t// to cloudamqp_extra_disk_size.resize_disk resource\n\t\t_ = instance.ID().ApplyT(func(id string) (cloudamqp.GetNodesResult, error) {\n\t\t\treturn cloudamqp.GetNodesResult(interface{}(cloudamqp.GetNodesOutput(ctx, cloudamqp.GetNodesOutputArgs{\n\t\t\t\tInstanceId: id,\n\t\t\t}, nil))), nil\n\t\t}).(cloudamqp.GetNodesResultOutput)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.ExtraDiskSize;\nimport com.pulumi.cloudamqp.ExtraDiskSizeArgs;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetNodesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Instance\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance\")\n            .plan(\"bunny-1\")\n            .region(\"azure-arm::centralus\")\n            .build());\n\n        // Resize disk with 25 extra GB, with downtime\n        var resizeDisk = new ExtraDiskSize(\"resizeDisk\", ExtraDiskSizeArgs.builder()\n            .instanceId(instance.id())\n            .extraDiskSize(25)\n            .allowDowntime(true)\n            .build());\n\n        // Optional, refresh nodes info after disk resize by adding dependency\n        // to cloudamqp_extra_disk_size.resize_disk resource\n        final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Instance\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance\n      plan: bunny-1\n      region: azure-arm::centralus\n  # Resize disk with 25 extra GB, with downtime\n  resizeDisk:\n    type: cloudamqp:ExtraDiskSize\n    name: resize_disk\n    properties:\n      instanceId: ${instance.id}\n      extraDiskSize: 25\n      allowDowntime: true\nvariables:\n  # Optional, refresh nodes info after disk resize by adding dependency\n  # to cloudamqp_extra_disk_size.resize_disk resource\n  nodes:\n    fn::invoke:\n      function: cloudamqp:getNodes\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `id`    - The identifier for this resource.\n* `nodes` - An array of node information. Each `nodes` block consists of the fields documented below.\n\n___\n\nThe `nodes` block consist of\n\n* `name`                  - Name of the node.\n* `disk_size`             - Subscription plan disk size\n* `additional_disk_size`  - Additional added disk size\n\n***Note:*** *Total disk size = disk_size + additional_disk_size*\n\n## Dependency\n\nThis data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n## Import\n\nNot possible to import this resource.\n\n",
            "properties": {
                "allowDowntime": {
                    "type": "boolean",
                    "description": "When resizing the disk, allow cluster downtime if necessary. Default set to false. Required when hosting in *Azure*.\n"
                },
                "extraDiskSize": {
                    "type": "integer",
                    "description": "Extra disk size in GB. Supported values: 0, 25, 50, 100, 250, 500, 1000, 2000\n",
                    "language": {
                        "csharp": {
                            "name": "ExtraDiskSizeGb"
                        }
                    }
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudamqp:index/ExtraDiskSizeNode:ExtraDiskSizeNode"
                    }
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time in seconds between retries for resizing the disk. Default set to 30 seconds.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time in seconds for resizing the disk. Default set to 1800 seconds.\n\n***Note:*** `allow_downtime`, `sleep`, `timeout` only available from v1.25.0.\n"
                }
            },
            "required": [
                "extraDiskSize",
                "instanceId",
                "nodes"
            ],
            "inputProperties": {
                "allowDowntime": {
                    "type": "boolean",
                    "description": "When resizing the disk, allow cluster downtime if necessary. Default set to false. Required when hosting in *Azure*.\n"
                },
                "extraDiskSize": {
                    "type": "integer",
                    "description": "Extra disk size in GB. Supported values: 0, 25, 50, 100, 250, 500, 1000, 2000\n",
                    "language": {
                        "csharp": {
                            "name": "ExtraDiskSizeGb"
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time in seconds between retries for resizing the disk. Default set to 30 seconds.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time in seconds for resizing the disk. Default set to 1800 seconds.\n\n***Note:*** `allow_downtime`, `sleep`, `timeout` only available from v1.25.0.\n"
                }
            },
            "requiredInputs": [
                "extraDiskSize",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ExtraDiskSize resources.\n",
                "properties": {
                    "allowDowntime": {
                        "type": "boolean",
                        "description": "When resizing the disk, allow cluster downtime if necessary. Default set to false. Required when hosting in *Azure*.\n"
                    },
                    "extraDiskSize": {
                        "type": "integer",
                        "description": "Extra disk size in GB. Supported values: 0, 25, 50, 100, 250, 500, 1000, 2000\n",
                        "language": {
                            "csharp": {
                                "name": "ExtraDiskSizeGb"
                            }
                        },
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudamqp:index/ExtraDiskSizeNode:ExtraDiskSizeNode"
                        }
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time in seconds between retries for resizing the disk. Default set to 30 seconds.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time in seconds for resizing the disk. Default set to 1800 seconds.\n\n***Note:*** `allow_downtime`, `sleep`, `timeout` only available from v1.25.0.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/instance:Instance": {
            "description": "This resource allows you to create and manage a CloudAMQP instance running either [**RabbitMQ**](https://www.rabbitmq.com/) or [**LavinMQ**](https://lavinmq.com/) and can be deployed to multiple cloud platforms provider and regions, see instance regions for more information.\n\nOnce the instance is created it will be assigned a unique identifier. All other resources and data sources created for this instance needs to reference this unique instance identifier.\n\nPricing is available at [cloudamqp.com](https://www.cloudamqp.com/plans.html).\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eBasic example of shared and dedicated instances\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Minimum free lemur instance running RabbitMQ\nconst lemurInstance = new cloudamqp.Instance(\"lemur_instance\", {\n    name: \"cloudamqp-free-instance\",\n    plan: \"lemur\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [\"rabbitmq\"],\n});\n// Minimum free lemming instance running LavinMQ\nconst lemmingInstance = new cloudamqp.Instance(\"lemming_instance\", {\n    name: \"cloudamqp-free-instance\",\n    plan: \"lemming\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [\"lavinmq\"],\n});\n// New dedicated bunny instance running RabbitMQ\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"terraform-cloudamqp-instance\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [\"terraform\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Minimum free lemur instance running RabbitMQ\nlemur_instance = cloudamqp.Instance(\"lemur_instance\",\n    name=\"cloudamqp-free-instance\",\n    plan=\"lemur\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[\"rabbitmq\"])\n# Minimum free lemming instance running LavinMQ\nlemming_instance = cloudamqp.Instance(\"lemming_instance\",\n    name=\"cloudamqp-free-instance\",\n    plan=\"lemming\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[\"lavinmq\"])\n# New dedicated bunny instance running RabbitMQ\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"terraform-cloudamqp-instance\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[\"terraform\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Minimum free lemur instance running RabbitMQ\n    var lemurInstance = new CloudAmqp.Instance(\"lemur_instance\", new()\n    {\n        Name = \"cloudamqp-free-instance\",\n        Plan = \"lemur\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[]\n        {\n            \"rabbitmq\",\n        },\n    });\n\n    // Minimum free lemming instance running LavinMQ\n    var lemmingInstance = new CloudAmqp.Instance(\"lemming_instance\", new()\n    {\n        Name = \"cloudamqp-free-instance\",\n        Plan = \"lemming\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[]\n        {\n            \"lavinmq\",\n        },\n    });\n\n    // New dedicated bunny instance running RabbitMQ\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"terraform-cloudamqp-instance\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[]\n        {\n            \"terraform\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Minimum free lemur instance running RabbitMQ\n\t\t_, err := cloudamqp.NewInstance(ctx, \"lemur_instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"cloudamqp-free-instance\"),\n\t\t\tPlan:   pulumi.String(\"lemur\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"rabbitmq\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Minimum free lemming instance running LavinMQ\n\t\t_, err = cloudamqp.NewInstance(ctx, \"lemming_instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"cloudamqp-free-instance\"),\n\t\t\tPlan:   pulumi.String(\"lemming\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"lavinmq\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// New dedicated bunny instance running RabbitMQ\n\t\t_, err = cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"terraform-cloudamqp-instance\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Minimum free lemur instance running RabbitMQ\n        var lemurInstance = new Instance(\"lemurInstance\", InstanceArgs.builder()\n            .name(\"cloudamqp-free-instance\")\n            .plan(\"lemur\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags(\"rabbitmq\")\n            .build());\n\n        // Minimum free lemming instance running LavinMQ\n        var lemmingInstance = new Instance(\"lemmingInstance\", InstanceArgs.builder()\n            .name(\"cloudamqp-free-instance\")\n            .plan(\"lemming\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags(\"lavinmq\")\n            .build());\n\n        // New dedicated bunny instance running RabbitMQ\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"terraform-cloudamqp-instance\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags(\"terraform\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Minimum free lemur instance running RabbitMQ\n  lemurInstance:\n    type: cloudamqp:Instance\n    name: lemur_instance\n    properties:\n      name: cloudamqp-free-instance\n      plan: lemur\n      region: amazon-web-services::us-west-1\n      tags:\n        - rabbitmq\n  # Minimum free lemming instance running LavinMQ\n  lemmingInstance:\n    type: cloudamqp:Instance\n    name: lemming_instance\n    properties:\n      name: cloudamqp-free-instance\n      plan: lemming\n      region: amazon-web-services::us-west-1\n      tags:\n        - lavinmq\n  # New dedicated bunny instance running RabbitMQ\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: terraform-cloudamqp-instance\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags:\n        - terraform\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eDedicated instance using attribute vpc_subnet to create VPC, before v1.16.0\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"terraform-cloudamqp-instance\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [\"terraform\"],\n    vpcSubnet: \"10.56.72.0/24\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"terraform-cloudamqp-instance\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[\"terraform\"],\n    vpc_subnet=\"10.56.72.0/24\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"terraform-cloudamqp-instance\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[]\n        {\n            \"terraform\",\n        },\n        VpcSubnet = \"10.56.72.0/24\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"terraform-cloudamqp-instance\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t},\n\t\t\tVpcSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"terraform-cloudamqp-instance\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags(\"terraform\")\n            .vpcSubnet(\"10.56.72.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: terraform-cloudamqp-instance\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags:\n        - terraform\n      vpcSubnet: 10.56.72.0/24\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eDedicated instance using attribute vpc_subnet to create VPC and then import managed VPC, from v1.16.0 (Managed VPC)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Dedicated instance that also creates VPC\nconst instance01 = new cloudamqp.Instance(\"instance_01\", {\n    name: \"terraform-cloudamqp-instance-01\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [\"terraform\"],\n    vpcSubnet: \"10.56.72.0/24\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Dedicated instance that also creates VPC\ninstance01 = cloudamqp.Instance(\"instance_01\",\n    name=\"terraform-cloudamqp-instance-01\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[\"terraform\"],\n    vpc_subnet=\"10.56.72.0/24\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Dedicated instance that also creates VPC\n    var instance01 = new CloudAmqp.Instance(\"instance_01\", new()\n    {\n        Name = \"terraform-cloudamqp-instance-01\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[]\n        {\n            \"terraform\",\n        },\n        VpcSubnet = \"10.56.72.0/24\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Dedicated instance that also creates VPC\n\t\t_, err := cloudamqp.NewInstance(ctx, \"instance_01\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"terraform-cloudamqp-instance-01\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t},\n\t\t\tVpcSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Dedicated instance that also creates VPC\n        var instance01 = new Instance(\"instance01\", InstanceArgs.builder()\n            .name(\"terraform-cloudamqp-instance-01\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags(\"terraform\")\n            .vpcSubnet(\"10.56.72.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Dedicated instance that also creates VPC\n  instance01:\n    type: cloudamqp:Instance\n    name: instance_01\n    properties:\n      name: terraform-cloudamqp-instance-01\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags:\n        - terraform\n      vpcSubnet: 10.56.72.0/24\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nOnce the instance and the VPC are created, the VPC can be imported as managed VPC and added to the configuration file.\nSet attribute `vpc_id` to the managed VPC identifier. To keep the managed VPC when deleting the instance, set attribute `keep_associated_vpc` to true.\nFor more information see guide Managed VPC.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Imported managed VPC\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"\u003cvpc-name\u003e\",\n    region: \"amazon-web-services::us-east-1\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\n// Add vpc_id and keep_associated_vpc attributes\nconst instance01 = new cloudamqp.Instance(\"instance_01\", {\n    name: \"terraform-cloudamqp-instance-01\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [\"terraform\"],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Imported managed VPC\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"\u003cvpc-name\u003e\",\n    region=\"amazon-web-services::us-east-1\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\n# Add vpc_id and keep_associated_vpc attributes\ninstance01 = cloudamqp.Instance(\"instance_01\",\n    name=\"terraform-cloudamqp-instance-01\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[\"terraform\"],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Imported managed VPC\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"\u003cvpc-name\u003e\",\n        Region = \"amazon-web-services::us-east-1\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    // Add vpc_id and keep_associated_vpc attributes\n    var instance01 = new CloudAmqp.Instance(\"instance_01\", new()\n    {\n        Name = \"terraform-cloudamqp-instance-01\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[]\n        {\n            \"terraform\",\n        },\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Imported managed VPC\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"\u003cvpc-name\u003e\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-east-1\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Add vpc_id and keep_associated_vpc attributes\n\t\t_, err = cloudamqp.NewInstance(ctx, \"instance_01\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"terraform-cloudamqp-instance-01\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Imported managed VPC\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"\u003cvpc-name\u003e\")\n            .region(\"amazon-web-services::us-east-1\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        // Add vpc_id and keep_associated_vpc attributes\n        var instance01 = new Instance(\"instance01\", InstanceArgs.builder()\n            .name(\"terraform-cloudamqp-instance-01\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags(\"terraform\")\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Imported managed VPC\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: \u003cvpc-name\u003e\n      region: amazon-web-services::us-east-1\n      subnet: 10.56.72.0/24\n      tags: []\n  # Add vpc_id and keep_associated_vpc attributes\n  instance01:\n    type: cloudamqp:Instance\n    name: instance_01\n    properties:\n      name: terraform-cloudamqp-instance-01\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags:\n        - terraform\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eDedicated instances and managed VPC, from v1.16.0 (Managed VPC)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Managed VPC\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"\u003cvpc-name\u003e\",\n    region: \"amazon-web-services::us-east-1\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\n// First instance added to managed VPC\nconst instance01 = new cloudamqp.Instance(\"instance_01\", {\n    name: \"terraform-cloudamqp-instance-01\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [\"terraform\"],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\n// Second instance added to managed VPC\nconst instance02 = new cloudamqp.Instance(\"instance_02\", {\n    name: \"terraform-cloudamqp-instance-02\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [\"terraform\"],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Managed VPC\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"\u003cvpc-name\u003e\",\n    region=\"amazon-web-services::us-east-1\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\n# First instance added to managed VPC\ninstance01 = cloudamqp.Instance(\"instance_01\",\n    name=\"terraform-cloudamqp-instance-01\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[\"terraform\"],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\n# Second instance added to managed VPC\ninstance02 = cloudamqp.Instance(\"instance_02\",\n    name=\"terraform-cloudamqp-instance-02\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[\"terraform\"],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Managed VPC\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"\u003cvpc-name\u003e\",\n        Region = \"amazon-web-services::us-east-1\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    // First instance added to managed VPC\n    var instance01 = new CloudAmqp.Instance(\"instance_01\", new()\n    {\n        Name = \"terraform-cloudamqp-instance-01\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[]\n        {\n            \"terraform\",\n        },\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    // Second instance added to managed VPC\n    var instance02 = new CloudAmqp.Instance(\"instance_02\", new()\n    {\n        Name = \"terraform-cloudamqp-instance-02\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[]\n        {\n            \"terraform\",\n        },\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Managed VPC\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"\u003cvpc-name\u003e\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-east-1\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// First instance added to managed VPC\n\t\t_, err = cloudamqp.NewInstance(ctx, \"instance_01\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"terraform-cloudamqp-instance-01\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Second instance added to managed VPC\n\t\t_, err = cloudamqp.NewInstance(ctx, \"instance_02\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"terraform-cloudamqp-instance-02\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Managed VPC\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"\u003cvpc-name\u003e\")\n            .region(\"amazon-web-services::us-east-1\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        // First instance added to managed VPC\n        var instance01 = new Instance(\"instance01\", InstanceArgs.builder()\n            .name(\"terraform-cloudamqp-instance-01\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags(\"terraform\")\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        // Second instance added to managed VPC\n        var instance02 = new Instance(\"instance02\", InstanceArgs.builder()\n            .name(\"terraform-cloudamqp-instance-02\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags(\"terraform\")\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Managed VPC\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: \u003cvpc-name\u003e\n      region: amazon-web-services::us-east-1\n      subnet: 10.56.72.0/24\n      tags: []\n  # First instance added to managed VPC\n  instance01:\n    type: cloudamqp:Instance\n    name: instance_01\n    properties:\n      name: terraform-cloudamqp-instance-01\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags:\n        - terraform\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n  # Second instance added to managed VPC\n  instance02:\n    type: cloudamqp:Instance\n    name: instance_02\n    properties:\n      name: terraform-cloudamqp-instance-02\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags:\n        - terraform\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nSet attribute `keep_associated_vpc` to true, will keep managed VPC when deleting the instances.\n\n\u003c/details\u003e\n\n## Copy settings to a new dedicated instance\n\nWith copy settings it's possible to create a new dedicated instance with settings such as alarms, config, etc. from another dedicated instance. This can be done by adding the `copy_settings` block to this resource and populate `subscription_id` with a CloudAMQP instance identifier from another already existing instance.\n\nThen add the settings to be copied over to the new dedicated instance. Settings that can be copied [alarms, config, definitions, firewall, logs, metrics, plugins]\n\n\u003e `rmq_version` argument is required when doing this action. Must match the RabbitMQ version of the dedicated instance to be copied from.\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCopy settings from a dedicated instance to a new dedicated instance\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst instance02 = new cloudamqp.Instance(\"instance_02\", {\n    name: \"terraform-cloudamqp-instance-02\",\n    plan: \"squirrel-1\",\n    region: \"amazon-web-services::us-west-1\",\n    rmqVersion: \"3.12.2\",\n    tags: [\"terraform\"],\n    copySettings: [{\n        subscriptionId: instanceId,\n        settings: [\n            \"alarms\",\n            \"config\",\n            \"definitions\",\n            \"firewall\",\n            \"logs\",\n            \"metrics\",\n            \"plugins\",\n        ],\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ninstance02 = cloudamqp.Instance(\"instance_02\",\n    name=\"terraform-cloudamqp-instance-02\",\n    plan=\"squirrel-1\",\n    region=\"amazon-web-services::us-west-1\",\n    rmq_version=\"3.12.2\",\n    tags=[\"terraform\"],\n    copy_settings=[{\n        \"subscription_id\": instance_id,\n        \"settings\": [\n            \"alarms\",\n            \"config\",\n            \"definitions\",\n            \"firewall\",\n            \"logs\",\n            \"metrics\",\n            \"plugins\",\n        ],\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance02 = new CloudAmqp.Instance(\"instance_02\", new()\n    {\n        Name = \"terraform-cloudamqp-instance-02\",\n        Plan = \"squirrel-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        RmqVersion = \"3.12.2\",\n        Tags = new[]\n        {\n            \"terraform\",\n        },\n        CopySettings = new[]\n        {\n            new CloudAmqp.Inputs.InstanceCopySettingArgs\n            {\n                SubscriptionId = instanceId,\n                Settings = new[]\n                {\n                    \"alarms\",\n                    \"config\",\n                    \"definitions\",\n                    \"firewall\",\n                    \"logs\",\n                    \"metrics\",\n                    \"plugins\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewInstance(ctx, \"instance_02\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:       pulumi.String(\"terraform-cloudamqp-instance-02\"),\n\t\t\tPlan:       pulumi.String(\"squirrel-1\"),\n\t\t\tRegion:     pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tRmqVersion: pulumi.String(\"3.12.2\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t},\n\t\t\tCopySettings: cloudamqp.InstanceCopySettingArray{\n\t\t\t\t\u0026cloudamqp.InstanceCopySettingArgs{\n\t\t\t\t\tSubscriptionId: pulumi.Any(instanceId),\n\t\t\t\t\tSettings: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"alarms\"),\n\t\t\t\t\t\tpulumi.String(\"config\"),\n\t\t\t\t\t\tpulumi.String(\"definitions\"),\n\t\t\t\t\t\tpulumi.String(\"firewall\"),\n\t\t\t\t\t\tpulumi.String(\"logs\"),\n\t\t\t\t\t\tpulumi.String(\"metrics\"),\n\t\t\t\t\t\tpulumi.String(\"plugins\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.inputs.InstanceCopySettingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance02 = new Instance(\"instance02\", InstanceArgs.builder()\n            .name(\"terraform-cloudamqp-instance-02\")\n            .plan(\"squirrel-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .rmqVersion(\"3.12.2\")\n            .tags(\"terraform\")\n            .copySettings(InstanceCopySettingArgs.builder()\n                .subscriptionId(instanceId)\n                .settings(                \n                    \"alarms\",\n                    \"config\",\n                    \"definitions\",\n                    \"firewall\",\n                    \"logs\",\n                    \"metrics\",\n                    \"plugins\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance02:\n    type: cloudamqp:Instance\n    name: instance_02\n    properties:\n      name: terraform-cloudamqp-instance-02\n      plan: squirrel-1\n      region: amazon-web-services::us-west-1\n      rmqVersion: 3.12.2\n      tags:\n        - terraform\n      copySettings:\n        - subscriptionId: ${instanceId}\n          settings:\n            - alarms\n            - config\n            - definitions\n            - firewall\n            - logs\n            - metrics\n            - plugins\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Import\n\n`cloudamqp_instance`can be imported using CloudAMQP internal identifier.\n\n```sh\n$ pulumi import cloudamqp:index/instance:Instance instance \u003cid\u003e`\n```\n\nTo retrieve the identifier for an instance, either use [CloudAMQP customer API](https://docs.cloudamqp.com/#list-instances) or use the data source [`cloudamqp_account`](./data-sources/account.md) to list all available instances for an account.\n\n",
            "properties": {
                "apikey": {
                    "type": "string",
                    "description": "API key needed to communicate to CloudAMQP's second API. The second API is used to manage alarms, integration and more, full description [CloudAMQP API](https://docs.cloudamqp.com/cloudamqp_api.html).\n",
                    "secret": true
                },
                "backend": {
                    "type": "string",
                    "description": "Information if the CloudAMQP instance runs either RabbitMQ or LavinMQ.\n"
                },
                "copySettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudamqp:index/InstanceCopySetting:InstanceCopySetting"
                    },
                    "description": "Copy settings from one CloudAMQP instance to a new. Consists of the block documented below.\n\n___\n\nThe `copy_settings` block consists of:\n"
                },
                "dedicated": {
                    "type": "boolean",
                    "description": "Information if the CloudAMQP instance is shared or dedicated.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The external hostname for the CloudAMQP instance.\n"
                },
                "hostInternal": {
                    "type": "string",
                    "description": "The internal hostname for the CloudAMQP instance.\n"
                },
                "keepAssociatedVpc": {
                    "type": "boolean",
                    "description": "Keep associated VPC when deleting instance, default set to false.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the CloudAMQP instance.\n"
                },
                "noDefaultAlarms": {
                    "type": "boolean",
                    "description": "Set to true to discard creating default alarms when the instance is created. Can be left out, will then use default value = false.\n"
                },
                "nodes": {
                    "type": "integer",
                    "description": "Number of nodes, 1, 3 or 5 depending on plan used. Only needed for legacy plans, will otherwise be computed.\n\n***Deprecated: Legacy subscriptions plan can still change this to scale up or down the instance. New subscriptions plans use the plan to determine number of nodes. In order to change number of nodes the `plan` needs to be updated.***\n"
                },
                "plan": {
                    "type": "string",
                    "description": "The subscription plan. See available plans\n"
                },
                "ready": {
                    "type": "boolean",
                    "description": "Flag describing if the resource is ready\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region to host the instance in. See instance regions\n\n***Note: Changing region will force the instance to be destroyed and a new created in the new region. All data will be lost and a new name assigned.***\n"
                },
                "rmqVersion": {
                    "type": "string",
                    "description": "The Rabbit MQ version. Can be left out, will then be set to default value used by CloudAMQP API.\n\n***Note: There is not yet any support in the provider to change the RMQ version. Once it's set in the initial creation, it will remain.***\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more tags for the CloudAMQP instance, makes it possible to categories multiple instances in console view. Default there is no tags assigned.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The AMQP URL (uses the internal hostname if the instance was created with VPC). Has the format: `amqps://{username}:{password}@{hostname}/{vhost}`\n",
                    "secret": true
                },
                "vhost": {
                    "type": "string",
                    "description": "The virtual host used by Rabbit MQ.\n"
                },
                "vpcId": {
                    "type": "integer",
                    "description": "The VPC ID. Use this to create your instance in an existing VPC. See available example.\n"
                },
                "vpcSubnet": {
                    "type": "string",
                    "description": "Creates a dedicated VPC subnet, shouldn't overlap with other VPC subnet, default subnet used 10.56.72.0/24.\n\n***Deprecated: Will be removed in next major version (v2.0)***\n\n***Note: extra fee will be charged when using VPC, see [CloudAMQP](https://cloudamqp.com) for more information.***\n"
                }
            },
            "required": [
                "apikey",
                "backend",
                "dedicated",
                "host",
                "hostInternal",
                "name",
                "noDefaultAlarms",
                "nodes",
                "plan",
                "ready",
                "region",
                "rmqVersion",
                "url",
                "vhost",
                "vpcId",
                "vpcSubnet"
            ],
            "inputProperties": {
                "copySettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudamqp:index/InstanceCopySetting:InstanceCopySetting"
                    },
                    "description": "Copy settings from one CloudAMQP instance to a new. Consists of the block documented below.\n\n___\n\nThe `copy_settings` block consists of:\n"
                },
                "keepAssociatedVpc": {
                    "type": "boolean",
                    "description": "Keep associated VPC when deleting instance, default set to false.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the CloudAMQP instance.\n"
                },
                "noDefaultAlarms": {
                    "type": "boolean",
                    "description": "Set to true to discard creating default alarms when the instance is created. Can be left out, will then use default value = false.\n"
                },
                "nodes": {
                    "type": "integer",
                    "description": "Number of nodes, 1, 3 or 5 depending on plan used. Only needed for legacy plans, will otherwise be computed.\n\n***Deprecated: Legacy subscriptions plan can still change this to scale up or down the instance. New subscriptions plans use the plan to determine number of nodes. In order to change number of nodes the `plan` needs to be updated.***\n"
                },
                "plan": {
                    "type": "string",
                    "description": "The subscription plan. See available plans\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region to host the instance in. See instance regions\n\n***Note: Changing region will force the instance to be destroyed and a new created in the new region. All data will be lost and a new name assigned.***\n",
                    "willReplaceOnChanges": true
                },
                "rmqVersion": {
                    "type": "string",
                    "description": "The Rabbit MQ version. Can be left out, will then be set to default value used by CloudAMQP API.\n\n***Note: There is not yet any support in the provider to change the RMQ version. Once it's set in the initial creation, it will remain.***\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more tags for the CloudAMQP instance, makes it possible to categories multiple instances in console view. Default there is no tags assigned.\n"
                },
                "vpcId": {
                    "type": "integer",
                    "description": "The VPC ID. Use this to create your instance in an existing VPC. See available example.\n",
                    "willReplaceOnChanges": true
                },
                "vpcSubnet": {
                    "type": "string",
                    "description": "Creates a dedicated VPC subnet, shouldn't overlap with other VPC subnet, default subnet used 10.56.72.0/24.\n\n***Deprecated: Will be removed in next major version (v2.0)***\n\n***Note: extra fee will be charged when using VPC, see [CloudAMQP](https://cloudamqp.com) for more information.***\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "plan",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "apikey": {
                        "type": "string",
                        "description": "API key needed to communicate to CloudAMQP's second API. The second API is used to manage alarms, integration and more, full description [CloudAMQP API](https://docs.cloudamqp.com/cloudamqp_api.html).\n",
                        "secret": true
                    },
                    "backend": {
                        "type": "string",
                        "description": "Information if the CloudAMQP instance runs either RabbitMQ or LavinMQ.\n"
                    },
                    "copySettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudamqp:index/InstanceCopySetting:InstanceCopySetting"
                        },
                        "description": "Copy settings from one CloudAMQP instance to a new. Consists of the block documented below.\n\n___\n\nThe `copy_settings` block consists of:\n"
                    },
                    "dedicated": {
                        "type": "boolean",
                        "description": "Information if the CloudAMQP instance is shared or dedicated.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "The external hostname for the CloudAMQP instance.\n"
                    },
                    "hostInternal": {
                        "type": "string",
                        "description": "The internal hostname for the CloudAMQP instance.\n"
                    },
                    "keepAssociatedVpc": {
                        "type": "boolean",
                        "description": "Keep associated VPC when deleting instance, default set to false.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the CloudAMQP instance.\n"
                    },
                    "noDefaultAlarms": {
                        "type": "boolean",
                        "description": "Set to true to discard creating default alarms when the instance is created. Can be left out, will then use default value = false.\n"
                    },
                    "nodes": {
                        "type": "integer",
                        "description": "Number of nodes, 1, 3 or 5 depending on plan used. Only needed for legacy plans, will otherwise be computed.\n\n***Deprecated: Legacy subscriptions plan can still change this to scale up or down the instance. New subscriptions plans use the plan to determine number of nodes. In order to change number of nodes the `plan` needs to be updated.***\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "The subscription plan. See available plans\n"
                    },
                    "ready": {
                        "type": "boolean",
                        "description": "Flag describing if the resource is ready\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region to host the instance in. See instance regions\n\n***Note: Changing region will force the instance to be destroyed and a new created in the new region. All data will be lost and a new name assigned.***\n",
                        "willReplaceOnChanges": true
                    },
                    "rmqVersion": {
                        "type": "string",
                        "description": "The Rabbit MQ version. Can be left out, will then be set to default value used by CloudAMQP API.\n\n***Note: There is not yet any support in the provider to change the RMQ version. Once it's set in the initial creation, it will remain.***\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more tags for the CloudAMQP instance, makes it possible to categories multiple instances in console view. Default there is no tags assigned.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The AMQP URL (uses the internal hostname if the instance was created with VPC). Has the format: `amqps://{username}:{password}@{hostname}/{vhost}`\n",
                        "secret": true
                    },
                    "vhost": {
                        "type": "string",
                        "description": "The virtual host used by Rabbit MQ.\n"
                    },
                    "vpcId": {
                        "type": "integer",
                        "description": "The VPC ID. Use this to create your instance in an existing VPC. See available example.\n",
                        "willReplaceOnChanges": true
                    },
                    "vpcSubnet": {
                        "type": "string",
                        "description": "Creates a dedicated VPC subnet, shouldn't overlap with other VPC subnet, default subnet used 10.56.72.0/24.\n\n***Deprecated: Will be removed in next major version (v2.0)***\n\n***Note: extra fee will be charged when using VPC, see [CloudAMQP](https://cloudamqp.com) for more information.***\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/integrationAwsEventbridge:IntegrationAwsEventbridge": {
            "description": "This resource allows you to create and manage, an [AWS EventBridge](https://aws.amazon.com/eventbridge/) for a CloudAMQP instance. Once created, continue to map the EventBridge in the [AWS Eventbridge console](https://console.aws.amazon.com/events/home).\n\n\u003e  Our consumer needs to have exclusive usage to the configured queue and the maximum body size allowed on msgs by AWS is 256kb. The message body has to be valid JSON for AWS Eventbridge to accept it. If messages are too large or are not valid JSON, they will be rejected (tip: setup a dead-letter queue to catch them).\n\nNot possible to update this resource. Any changes made to the argument will destroy and recreate the resource. Hence why all arguments use ForceNew.\n\nOnly available for dedicated subscription plans.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Test instance\",\n    plan: \"squirrel-1\",\n    region: \"amazon-web-services::us-west-1\",\n    rmqVersion: \"3.11.5\",\n    tags: [\"aws\"],\n});\nconst awsEventbridge = new cloudamqp.IntegrationAwsEventbridge(\"aws_eventbridge\", {\n    instanceId: instance.id,\n    vhost: instance.vhost,\n    queue: \"\u003cQUEUE-NAME\u003e\",\n    awsAccountId: \"\u003cAWS-ACCOUNT-ID\u003e\",\n    awsRegion: \"us-west-1\",\n    withHeaders: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Test instance\",\n    plan=\"squirrel-1\",\n    region=\"amazon-web-services::us-west-1\",\n    rmq_version=\"3.11.5\",\n    tags=[\"aws\"])\naws_eventbridge = cloudamqp.IntegrationAwsEventbridge(\"aws_eventbridge\",\n    instance_id=instance.id,\n    vhost=instance.vhost,\n    queue=\"\u003cQUEUE-NAME\u003e\",\n    aws_account_id=\"\u003cAWS-ACCOUNT-ID\u003e\",\n    aws_region=\"us-west-1\",\n    with_headers=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Test instance\",\n        Plan = \"squirrel-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        RmqVersion = \"3.11.5\",\n        Tags = new[]\n        {\n            \"aws\",\n        },\n    });\n\n    var awsEventbridge = new CloudAmqp.IntegrationAwsEventbridge(\"aws_eventbridge\", new()\n    {\n        InstanceId = instance.Id,\n        Vhost = instance.Vhost,\n        Queue = \"\u003cQUEUE-NAME\u003e\",\n        AwsAccountId = \"\u003cAWS-ACCOUNT-ID\u003e\",\n        AwsRegion = \"us-west-1\",\n        WithHeaders = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:       pulumi.String(\"Test instance\"),\n\t\t\tPlan:       pulumi.String(\"squirrel-1\"),\n\t\t\tRegion:     pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tRmqVersion: pulumi.String(\"3.11.5\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"aws\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewIntegrationAwsEventbridge(ctx, \"aws_eventbridge\", \u0026cloudamqp.IntegrationAwsEventbridgeArgs{\n\t\t\tInstanceId:   instance.ID(),\n\t\t\tVhost:        instance.Vhost,\n\t\t\tQueue:        pulumi.String(\"\u003cQUEUE-NAME\u003e\"),\n\t\t\tAwsAccountId: pulumi.String(\"\u003cAWS-ACCOUNT-ID\u003e\"),\n\t\t\tAwsRegion:    pulumi.String(\"us-west-1\"),\n\t\t\tWithHeaders:  pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.IntegrationAwsEventbridge;\nimport com.pulumi.cloudamqp.IntegrationAwsEventbridgeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Test instance\")\n            .plan(\"squirrel-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .rmqVersion(\"3.11.5\")\n            .tags(\"aws\")\n            .build());\n\n        var awsEventbridge = new IntegrationAwsEventbridge(\"awsEventbridge\", IntegrationAwsEventbridgeArgs.builder()\n            .instanceId(instance.id())\n            .vhost(instance.vhost())\n            .queue(\"\u003cQUEUE-NAME\u003e\")\n            .awsAccountId(\"\u003cAWS-ACCOUNT-ID\u003e\")\n            .awsRegion(\"us-west-1\")\n            .withHeaders(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Test instance\n      plan: squirrel-1\n      region: amazon-web-services::us-west-1\n      rmqVersion: 3.11.5\n      tags:\n        - aws\n  awsEventbridge:\n    type: cloudamqp:IntegrationAwsEventbridge\n    name: aws_eventbridge\n    properties:\n      instanceId: ${instance.id}\n      vhost: ${instance.vhost}\n      queue: \u003cQUEUE-NAME\u003e\n      awsAccountId: \u003cAWS-ACCOUNT-ID\u003e\n      awsRegion: us-west-1\n      withHeaders: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Argument references\n\nThe following arguments are supported:\n\n* `aws_account_id` - (ForceNew/Required) The 12 digit AWS Account ID where you want the events to be sent to.\n* `aws_region`- (ForceNew/Required) The AWS region where you the events to be sent to. (e.g. us-west-1, us-west-2, ..., etc.)\n* `vhost`- (ForceNew/Required) The VHost the queue resides in.\n* `queue` - (ForceNew/Required) A (durable) queue on your RabbitMQ instance.\n* `with_headers` - (ForceNew/Required) Include message headers in the event data. `({ \"headers\": { }, \"body\": { \"your\": \"message\" } })`\n\n## Dependency\n\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n## Import\n\n`cloudamqp_integration_aws_eventbridge` can be imported using CloudAMQP internal identifier of the AWS EventBridge together (CSV separated) with the instance identifier. To retrieve the AWS EventBridge identifier, use [CloudAMQP API](https://docs.cloudamqp.com/cloudamqp_api.html#list-eventbridges)\n\n```sh\n$ pulumi import cloudamqp:index/integrationAwsEventbridge:IntegrationAwsEventbridge aws_eventbridge \u003cid\u003e,\u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "awsAccountId": {
                    "type": "string",
                    "description": "The 12 digit AWS Account ID where you want the events to be sent to.\n"
                },
                "awsRegion": {
                    "type": "string",
                    "description": "The AWS region where you the events to be sent to. (e.g. us-west-1, us-west-2, ..., etc.)\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "Instance identifier\n"
                },
                "queue": {
                    "type": "string",
                    "description": "A (durable) queue on your RabbitMQ instance.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Always set to null, unless there is an error starting the EventBridge.\n"
                },
                "vhost": {
                    "type": "string",
                    "description": "The VHost the queue resides in.\n"
                },
                "withHeaders": {
                    "type": "boolean",
                    "description": "Include message headers in the event data.\n"
                }
            },
            "required": [
                "awsAccountId",
                "awsRegion",
                "instanceId",
                "queue",
                "status",
                "vhost",
                "withHeaders"
            ],
            "inputProperties": {
                "awsAccountId": {
                    "type": "string",
                    "description": "The 12 digit AWS Account ID where you want the events to be sent to.\n",
                    "willReplaceOnChanges": true
                },
                "awsRegion": {
                    "type": "string",
                    "description": "The AWS region where you the events to be sent to. (e.g. us-west-1, us-west-2, ..., etc.)\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "integer",
                    "description": "Instance identifier\n",
                    "willReplaceOnChanges": true
                },
                "queue": {
                    "type": "string",
                    "description": "A (durable) queue on your RabbitMQ instance.\n",
                    "willReplaceOnChanges": true
                },
                "vhost": {
                    "type": "string",
                    "description": "The VHost the queue resides in.\n",
                    "willReplaceOnChanges": true
                },
                "withHeaders": {
                    "type": "boolean",
                    "description": "Include message headers in the event data.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "awsAccountId",
                "awsRegion",
                "instanceId",
                "queue",
                "vhost",
                "withHeaders"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationAwsEventbridge resources.\n",
                "properties": {
                    "awsAccountId": {
                        "type": "string",
                        "description": "The 12 digit AWS Account ID where you want the events to be sent to.\n",
                        "willReplaceOnChanges": true
                    },
                    "awsRegion": {
                        "type": "string",
                        "description": "The AWS region where you the events to be sent to. (e.g. us-west-1, us-west-2, ..., etc.)\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "Instance identifier\n",
                        "willReplaceOnChanges": true
                    },
                    "queue": {
                        "type": "string",
                        "description": "A (durable) queue on your RabbitMQ instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Always set to null, unless there is an error starting the EventBridge.\n"
                    },
                    "vhost": {
                        "type": "string",
                        "description": "The VHost the queue resides in.\n",
                        "willReplaceOnChanges": true
                    },
                    "withHeaders": {
                        "type": "boolean",
                        "description": "Include message headers in the event data.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/integrationLog:IntegrationLog": {
            "description": "This resource allows you to create and manage third party log integrations for a CloudAMQP instance.\nOnce configured, the logs produced will be forward to corresponding integration.\n\nOnly available for dedicated subscription plans.\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eAzure monitor log integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst azureMonitor = new cloudamqp.IntegrationLog(\"azure_monitor\", {\n    instanceId: instance.id,\n    name: \"azure_monitor\",\n    tenantId: azmTentantId,\n    applicationId: azmApplicationId,\n    applicationSecret: azmApplicationSecret,\n    dceUri: azmDceUri,\n    table: azmTable,\n    dcrId: azmDcrId,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nazure_monitor = cloudamqp.IntegrationLog(\"azure_monitor\",\n    instance_id=instance[\"id\"],\n    name=\"azure_monitor\",\n    tenant_id=azm_tentant_id,\n    application_id=azm_application_id,\n    application_secret=azm_application_secret,\n    dce_uri=azm_dce_uri,\n    table=azm_table,\n    dcr_id=azm_dcr_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var azureMonitor = new CloudAmqp.IntegrationLog(\"azure_monitor\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"azure_monitor\",\n        TenantId = azmTentantId,\n        ApplicationId = azmApplicationId,\n        ApplicationSecret = azmApplicationSecret,\n        DceUri = azmDceUri,\n        Table = azmTable,\n        DcrId = azmDcrId,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"azure_monitor\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId:        pulumi.Any(instance.Id),\n\t\t\tName:              pulumi.String(\"azure_monitor\"),\n\t\t\tTenantId:          pulumi.Any(azmTentantId),\n\t\t\tApplicationId:     pulumi.Any(azmApplicationId),\n\t\t\tApplicationSecret: pulumi.Any(azmApplicationSecret),\n\t\t\tDceUri:            pulumi.Any(azmDceUri),\n\t\t\tTable:             pulumi.Any(azmTable),\n\t\t\tDcrId:             pulumi.Any(azmDcrId),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var azureMonitor = new IntegrationLog(\"azureMonitor\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"azure_monitor\")\n            .tenantId(azmTentantId)\n            .applicationId(azmApplicationId)\n            .applicationSecret(azmApplicationSecret)\n            .dceUri(azmDceUri)\n            .table(azmTable)\n            .dcrId(azmDcrId)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  azureMonitor:\n    type: cloudamqp:IntegrationLog\n    name: azure_monitor\n    properties:\n      instanceId: ${instance.id}\n      name: azure_monitor\n      tenantId: ${azmTentantId}\n      applicationId: ${azmApplicationId}\n      applicationSecret: ${azmApplicationSecret}\n      dceUri: ${azmDceUri}\n      table: ${azmTable}\n      dcrId: ${azmDcrId}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCloudwatch log integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst cloudwatch = new cloudamqp.IntegrationLog(\"cloudwatch\", {\n    instanceId: instance.id,\n    name: \"cloudwatchlog\",\n    accessKeyId: awsAccessKeyId,\n    secretAccessKey: awsSecretAccessKey,\n    region: awsRegion,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ncloudwatch = cloudamqp.IntegrationLog(\"cloudwatch\",\n    instance_id=instance[\"id\"],\n    name=\"cloudwatchlog\",\n    access_key_id=aws_access_key_id,\n    secret_access_key=aws_secret_access_key,\n    region=aws_region)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cloudwatch = new CloudAmqp.IntegrationLog(\"cloudwatch\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"cloudwatchlog\",\n        AccessKeyId = awsAccessKeyId,\n        SecretAccessKey = awsSecretAccessKey,\n        Region = awsRegion,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"cloudwatch\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId:      pulumi.Any(instance.Id),\n\t\t\tName:            pulumi.String(\"cloudwatchlog\"),\n\t\t\tAccessKeyId:     pulumi.Any(awsAccessKeyId),\n\t\t\tSecretAccessKey: pulumi.Any(awsSecretAccessKey),\n\t\t\tRegion:          pulumi.Any(awsRegion),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cloudwatch = new IntegrationLog(\"cloudwatch\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"cloudwatchlog\")\n            .accessKeyId(awsAccessKeyId)\n            .secretAccessKey(awsSecretAccessKey)\n            .region(awsRegion)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cloudwatch:\n    type: cloudamqp:IntegrationLog\n    properties:\n      instanceId: ${instance.id}\n      name: cloudwatchlog\n      accessKeyId: ${awsAccessKeyId}\n      secretAccessKey: ${awsSecretAccessKey}\n      region: ${awsRegion}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCoralogix log integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst coralogix = new cloudamqp.IntegrationLog(\"coralogix\", {\n    instanceId: instance.id,\n    name: \"coralogix\",\n    privateKey: coralogixSendDataKey,\n    endpoint: coralogixEndpoint,\n    application: coralogixApplication,\n    subsystem: instance.host,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ncoralogix = cloudamqp.IntegrationLog(\"coralogix\",\n    instance_id=instance[\"id\"],\n    name=\"coralogix\",\n    private_key=coralogix_send_data_key,\n    endpoint=coralogix_endpoint,\n    application=coralogix_application,\n    subsystem=instance[\"host\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var coralogix = new CloudAmqp.IntegrationLog(\"coralogix\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"coralogix\",\n        PrivateKey = coralogixSendDataKey,\n        Endpoint = coralogixEndpoint,\n        Application = coralogixApplication,\n        Subsystem = instance.Host,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"coralogix\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId:  pulumi.Any(instance.Id),\n\t\t\tName:        pulumi.String(\"coralogix\"),\n\t\t\tPrivateKey:  pulumi.Any(coralogixSendDataKey),\n\t\t\tEndpoint:    pulumi.Any(coralogixEndpoint),\n\t\t\tApplication: pulumi.Any(coralogixApplication),\n\t\t\tSubsystem:   pulumi.Any(instance.Host),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var coralogix = new IntegrationLog(\"coralogix\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"coralogix\")\n            .privateKey(coralogixSendDataKey)\n            .endpoint(coralogixEndpoint)\n            .application(coralogixApplication)\n            .subsystem(instance.host())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  coralogix:\n    type: cloudamqp:IntegrationLog\n    properties:\n      instanceId: ${instance.id}\n      name: coralogix\n      privateKey: ${coralogixSendDataKey}\n      endpoint: ${coralogixEndpoint}\n      application: ${coralogixApplication}\n      subsystem: ${instance.host}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eDatadog log integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst datadog = new cloudamqp.IntegrationLog(\"datadog\", {\n    instanceId: instance.id,\n    name: \"datadog\",\n    region: datadogRegion,\n    apiKey: datadogApiKey,\n    tags: \"env=prod,region=us1,version=v1.0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ndatadog = cloudamqp.IntegrationLog(\"datadog\",\n    instance_id=instance[\"id\"],\n    name=\"datadog\",\n    region=datadog_region,\n    api_key=datadog_api_key,\n    tags=\"env=prod,region=us1,version=v1.0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datadog = new CloudAmqp.IntegrationLog(\"datadog\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"datadog\",\n        Region = datadogRegion,\n        ApiKey = datadogApiKey,\n        Tags = \"env=prod,region=us1,version=v1.0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"datadog\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"datadog\"),\n\t\t\tRegion:     pulumi.Any(datadogRegion),\n\t\t\tApiKey:     pulumi.Any(datadogApiKey),\n\t\t\tTags:       pulumi.String(\"env=prod,region=us1,version=v1.0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var datadog = new IntegrationLog(\"datadog\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"datadog\")\n            .region(datadogRegion)\n            .apiKey(datadogApiKey)\n            .tags(\"env=prod,region=us1,version=v1.0\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  datadog:\n    type: cloudamqp:IntegrationLog\n    properties:\n      instanceId: ${instance.id}\n      name: datadog\n      region: ${datadogRegion}\n      apiKey: ${datadogApiKey}\n      tags: env=prod,region=us1,version=v1.0\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eLogentries log integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst logentries = new cloudamqp.IntegrationLog(\"logentries\", {\n    instanceId: instance.id,\n    name: \"logentries\",\n    token: logentriesToken,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nlogentries = cloudamqp.IntegrationLog(\"logentries\",\n    instance_id=instance[\"id\"],\n    name=\"logentries\",\n    token=logentries_token)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logentries = new CloudAmqp.IntegrationLog(\"logentries\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"logentries\",\n        Token = logentriesToken,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"logentries\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"logentries\"),\n\t\t\tToken:      pulumi.Any(logentriesToken),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var logentries = new IntegrationLog(\"logentries\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"logentries\")\n            .token(logentriesToken)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  logentries:\n    type: cloudamqp:IntegrationLog\n    properties:\n      instanceId: ${instance.id}\n      name: logentries\n      token: ${logentriesToken}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eLoggly log integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst loggly = new cloudamqp.IntegrationLog(\"loggly\", {\n    instanceId: instance.id,\n    name: \"loggly\",\n    token: logglyToken,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nloggly = cloudamqp.IntegrationLog(\"loggly\",\n    instance_id=instance[\"id\"],\n    name=\"loggly\",\n    token=loggly_token)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var loggly = new CloudAmqp.IntegrationLog(\"loggly\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"loggly\",\n        Token = logglyToken,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"loggly\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"loggly\"),\n\t\t\tToken:      pulumi.Any(logglyToken),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var loggly = new IntegrationLog(\"loggly\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"loggly\")\n            .token(logglyToken)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  loggly:\n    type: cloudamqp:IntegrationLog\n    properties:\n      instanceId: ${instance.id}\n      name: loggly\n      token: ${logglyToken}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003ePapertrail log integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst papertrail = new cloudamqp.IntegrationLog(\"papertrail\", {\n    instanceId: instance.id,\n    name: \"papertrail\",\n    url: papertrailUrl,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\npapertrail = cloudamqp.IntegrationLog(\"papertrail\",\n    instance_id=instance[\"id\"],\n    name=\"papertrail\",\n    url=papertrail_url)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var papertrail = new CloudAmqp.IntegrationLog(\"papertrail\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"papertrail\",\n        Url = papertrailUrl,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"papertrail\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"papertrail\"),\n\t\t\tUrl:        pulumi.Any(papertrailUrl),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var papertrail = new IntegrationLog(\"papertrail\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"papertrail\")\n            .url(papertrailUrl)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  papertrail:\n    type: cloudamqp:IntegrationLog\n    properties:\n      instanceId: ${instance.id}\n      name: papertrail\n      url: ${papertrailUrl}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eScalyr log integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst scalyr = new cloudamqp.IntegrationLog(\"scalyr\", {\n    instanceId: instance.id,\n    name: \"scalyr\",\n    token: scalyrToken,\n    host: scalyrHost,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nscalyr = cloudamqp.IntegrationLog(\"scalyr\",\n    instance_id=instance[\"id\"],\n    name=\"scalyr\",\n    token=scalyr_token,\n    host=scalyr_host)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var scalyr = new CloudAmqp.IntegrationLog(\"scalyr\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"scalyr\",\n        Token = scalyrToken,\n        Host = scalyrHost,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"scalyr\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"scalyr\"),\n\t\t\tToken:      pulumi.Any(scalyrToken),\n\t\t\tHost:       pulumi.Any(scalyrHost),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var scalyr = new IntegrationLog(\"scalyr\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"scalyr\")\n            .token(scalyrToken)\n            .host(scalyrHost)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  scalyr:\n    type: cloudamqp:IntegrationLog\n    properties:\n      instanceId: ${instance.id}\n      name: scalyr\n      token: ${scalyrToken}\n      host: ${scalyrHost}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eSplunk log integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst splunk = new cloudamqp.IntegrationLog(\"splunk\", {\n    instanceId: instance.id,\n    name: \"splunk\",\n    token: splunkToken,\n    hostPort: splunkHostPort,\n    sourceType: \"generic_single_line\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nsplunk = cloudamqp.IntegrationLog(\"splunk\",\n    instance_id=instance[\"id\"],\n    name=\"splunk\",\n    token=splunk_token,\n    host_port=splunk_host_port,\n    source_type=\"generic_single_line\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var splunk = new CloudAmqp.IntegrationLog(\"splunk\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"splunk\",\n        Token = splunkToken,\n        HostPort = splunkHostPort,\n        SourceType = \"generic_single_line\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"splunk\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"splunk\"),\n\t\t\tToken:      pulumi.Any(splunkToken),\n\t\t\tHostPort:   pulumi.Any(splunkHostPort),\n\t\t\tSourceType: pulumi.String(\"generic_single_line\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var splunk = new IntegrationLog(\"splunk\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"splunk\")\n            .token(splunkToken)\n            .hostPort(splunkHostPort)\n            .sourceType(\"generic_single_line\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  splunk:\n    type: cloudamqp:IntegrationLog\n    properties:\n      instanceId: ${instance.id}\n      name: splunk\n      token: ${splunkToken}\n      hostPort: ${splunkHostPort}\n      sourceType: generic_single_line\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eStackdriver log integration (v1.20.2 or older versions)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\nUse variable file populated with project_id, private_key and client_email\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst stackdriver = new cloudamqp.IntegrationLog(\"stackdriver\", {\n    instanceId: instance.id,\n    name: \"stackdriver\",\n    projectId: stackdriverProjectId,\n    privateKey: stackdriverPrivateKey,\n    clientEmail: stackdriverClientEmail,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nstackdriver = cloudamqp.IntegrationLog(\"stackdriver\",\n    instance_id=instance[\"id\"],\n    name=\"stackdriver\",\n    project_id=stackdriver_project_id,\n    private_key=stackdriver_private_key,\n    client_email=stackdriver_client_email)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var stackdriver = new CloudAmqp.IntegrationLog(\"stackdriver\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"stackdriver\",\n        ProjectId = stackdriverProjectId,\n        PrivateKey = stackdriverPrivateKey,\n        ClientEmail = stackdriverClientEmail,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationLog(ctx, \"stackdriver\", \u0026cloudamqp.IntegrationLogArgs{\n\t\t\tInstanceId:  pulumi.Any(instance.Id),\n\t\t\tName:        pulumi.String(\"stackdriver\"),\n\t\t\tProjectId:   pulumi.Any(stackdriverProjectId),\n\t\t\tPrivateKey:  pulumi.Any(stackdriverPrivateKey),\n\t\t\tClientEmail: pulumi.Any(stackdriverClientEmail),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationLog;\nimport com.pulumi.cloudamqp.IntegrationLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var stackdriver = new IntegrationLog(\"stackdriver\", IntegrationLogArgs.builder()\n            .instanceId(instance.id())\n            .name(\"stackdriver\")\n            .projectId(stackdriverProjectId)\n            .privateKey(stackdriverPrivateKey)\n            .clientEmail(stackdriverClientEmail)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  stackdriver:\n    type: cloudamqp:IntegrationLog\n    properties:\n      instanceId: ${instance.id}\n      name: stackdriver\n      projectId: ${stackdriverProjectId}\n      privateKey: ${stackdriverPrivateKey}\n      clientEmail: ${stackdriverClientEmail}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nor by using google_service_account_key resource from Google provider\n\n## Import\n\n`cloudamqp_integration_log`can be imported using the resource identifier together with CloudAMQP instance identifier. The name and identifier are CSV separated, see example below.\n\n```sh\n$ pulumi import cloudamqp:index/integrationLog:IntegrationLog \u003cresource_name\u003e \u003cid\u003e,\u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "AWS access key identifier.\n",
                    "secret": true
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key.\n",
                    "secret": true
                },
                "application": {
                    "type": "string",
                    "description": "The application name for Coralogix.\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The application identifier for Azure monitor.\n"
                },
                "applicationSecret": {
                    "type": "string",
                    "description": "The application secret for Azure monitor.\n",
                    "secret": true
                },
                "clientEmail": {
                    "type": "string",
                    "description": "The client email registered for the integration service.\n"
                },
                "credentials": {
                    "type": "string",
                    "description": "Google Service Account private key credentials.\n",
                    "secret": true
                },
                "dceUri": {
                    "type": "string",
                    "description": "The data collection endpoint for Azure monitor.\n"
                },
                "dcrId": {
                    "type": "string",
                    "description": "ID of data collection rule that your DCE is linked to for Azure Monitor.\n\nThis is the full list of all arguments. Only a subset of arguments are used based on which type of integration used. See Integration Type reference table below for more information.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The syslog destination to send the logs to for Coralogix.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host for Scalyr integration. (app.scalyr.com, app.eu.scalyr.com)\n"
                },
                "hostPort": {
                    "type": "string",
                    "description": "Destination to send the logs.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "Instance identifier used to make proxy calls\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the third party log integration. See\nIntegration type reference\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private access key.\n",
                    "secret": true
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Private key identifier. (Stackdriver)\n",
                    "secret": true
                },
                "projectId": {
                    "type": "string",
                    "description": "The project identifier.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region hosting the integration service.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "AWS secret access key.\n",
                    "secret": true
                },
                "sourcetype": {
                    "type": "string",
                    "description": "Assign source type to the data exported, eg. generic_single_line. (Splunk)\n"
                },
                "subsystem": {
                    "type": "string",
                    "description": "The subsystem name for Coralogix.\n"
                },
                "table": {
                    "type": "string",
                    "description": "The table name for Azure monitor.\n"
                },
                "tags": {
                    "type": "string",
                    "description": "Tags. e.g. `env=prod,region=europe`.\n\n***Note: If tags are used with Datadog. The value part (prod, europe, ...) must start with a letter, read more about tags format in the [Datadog documentation](https://docs.datadoghq.com/getting_started/tagging/#define-tags)***\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant identifier for Azure monitor.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token used for authentication.\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "Endpoint to log integration.\n"
                }
            },
            "required": [
                "clientEmail",
                "instanceId",
                "name",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "inputProperties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "AWS access key identifier.\n",
                    "secret": true
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key.\n",
                    "secret": true
                },
                "application": {
                    "type": "string",
                    "description": "The application name for Coralogix.\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The application identifier for Azure monitor.\n"
                },
                "applicationSecret": {
                    "type": "string",
                    "description": "The application secret for Azure monitor.\n",
                    "secret": true
                },
                "clientEmail": {
                    "type": "string",
                    "description": "The client email registered for the integration service.\n"
                },
                "credentials": {
                    "type": "string",
                    "description": "Google Service Account private key credentials.\n",
                    "secret": true
                },
                "dceUri": {
                    "type": "string",
                    "description": "The data collection endpoint for Azure monitor.\n"
                },
                "dcrId": {
                    "type": "string",
                    "description": "ID of data collection rule that your DCE is linked to for Azure Monitor.\n\nThis is the full list of all arguments. Only a subset of arguments are used based on which type of integration used. See Integration Type reference table below for more information.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The syslog destination to send the logs to for Coralogix.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host for Scalyr integration. (app.scalyr.com, app.eu.scalyr.com)\n"
                },
                "hostPort": {
                    "type": "string",
                    "description": "Destination to send the logs.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "Instance identifier used to make proxy calls\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the third party log integration. See\nIntegration type reference\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private access key.\n",
                    "secret": true
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Private key identifier. (Stackdriver)\n",
                    "secret": true
                },
                "projectId": {
                    "type": "string",
                    "description": "The project identifier.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region hosting the integration service.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "AWS secret access key.\n",
                    "secret": true
                },
                "sourcetype": {
                    "type": "string",
                    "description": "Assign source type to the data exported, eg. generic_single_line. (Splunk)\n"
                },
                "subsystem": {
                    "type": "string",
                    "description": "The subsystem name for Coralogix.\n"
                },
                "table": {
                    "type": "string",
                    "description": "The table name for Azure monitor.\n"
                },
                "tags": {
                    "type": "string",
                    "description": "Tags. e.g. `env=prod,region=europe`.\n\n***Note: If tags are used with Datadog. The value part (prod, europe, ...) must start with a letter, read more about tags format in the [Datadog documentation](https://docs.datadoghq.com/getting_started/tagging/#define-tags)***\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant identifier for Azure monitor.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token used for authentication.\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "Endpoint to log integration.\n"
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLog resources.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "AWS access key identifier.\n",
                        "secret": true
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "The API key.\n",
                        "secret": true
                    },
                    "application": {
                        "type": "string",
                        "description": "The application name for Coralogix.\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The application identifier for Azure monitor.\n"
                    },
                    "applicationSecret": {
                        "type": "string",
                        "description": "The application secret for Azure monitor.\n",
                        "secret": true
                    },
                    "clientEmail": {
                        "type": "string",
                        "description": "The client email registered for the integration service.\n"
                    },
                    "credentials": {
                        "type": "string",
                        "description": "Google Service Account private key credentials.\n",
                        "secret": true
                    },
                    "dceUri": {
                        "type": "string",
                        "description": "The data collection endpoint for Azure monitor.\n"
                    },
                    "dcrId": {
                        "type": "string",
                        "description": "ID of data collection rule that your DCE is linked to for Azure Monitor.\n\nThis is the full list of all arguments. Only a subset of arguments are used based on which type of integration used. See Integration Type reference table below for more information.\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The syslog destination to send the logs to for Coralogix.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "The host for Scalyr integration. (app.scalyr.com, app.eu.scalyr.com)\n"
                    },
                    "hostPort": {
                        "type": "string",
                        "description": "Destination to send the logs.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "Instance identifier used to make proxy calls\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the third party log integration. See\nIntegration type reference\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The private access key.\n",
                        "secret": true
                    },
                    "privateKeyId": {
                        "type": "string",
                        "description": "Private key identifier. (Stackdriver)\n",
                        "secret": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project identifier.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region hosting the integration service.\n"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "AWS secret access key.\n",
                        "secret": true
                    },
                    "sourcetype": {
                        "type": "string",
                        "description": "Assign source type to the data exported, eg. generic_single_line. (Splunk)\n"
                    },
                    "subsystem": {
                        "type": "string",
                        "description": "The subsystem name for Coralogix.\n"
                    },
                    "table": {
                        "type": "string",
                        "description": "The table name for Azure monitor.\n"
                    },
                    "tags": {
                        "type": "string",
                        "description": "Tags. e.g. `env=prod,region=europe`.\n\n***Note: If tags are used with Datadog. The value part (prod, europe, ...) must start with a letter, read more about tags format in the [Datadog documentation](https://docs.datadoghq.com/getting_started/tagging/#define-tags)***\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The tenant identifier for Azure monitor.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Token used for authentication.\n",
                        "secret": true
                    },
                    "url": {
                        "type": "string",
                        "description": "Endpoint to log integration.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/integrationMetric:IntegrationMetric": {
            "description": "This resource allows you to create and manage, forwarding metrics to third party integrations for a CloudAMQP instance. Once configured, the metrics produced will be forward to corresponding integration.\n\nOnly available for dedicated subscription plans.\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCloudwatch v1 and v2 metric integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n***Access key***\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst cloudwatch = new cloudamqp.IntegrationMetric(\"cloudwatch\", {\n    instanceId: instance.id,\n    name: \"cloudwatch\",\n    accessKeyId: awsAccessKeyId,\n    secretAccessKey: varAwsSecretAcccessKey,\n    region: awsRegion,\n});\nconst cloudwatchV2 = new cloudamqp.IntegrationMetric(\"cloudwatch_v2\", {\n    instanceId: instance.id,\n    name: \"cloudwatch_v2\",\n    accessKeyId: awsAccessKeyId,\n    secretAccessKey: varAwsSecretAcccessKey,\n    region: awsRegion,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ncloudwatch = cloudamqp.IntegrationMetric(\"cloudwatch\",\n    instance_id=instance[\"id\"],\n    name=\"cloudwatch\",\n    access_key_id=aws_access_key_id,\n    secret_access_key=var_aws_secret_acccess_key,\n    region=aws_region)\ncloudwatch_v2 = cloudamqp.IntegrationMetric(\"cloudwatch_v2\",\n    instance_id=instance[\"id\"],\n    name=\"cloudwatch_v2\",\n    access_key_id=aws_access_key_id,\n    secret_access_key=var_aws_secret_acccess_key,\n    region=aws_region)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cloudwatch = new CloudAmqp.IntegrationMetric(\"cloudwatch\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"cloudwatch\",\n        AccessKeyId = awsAccessKeyId,\n        SecretAccessKey = varAwsSecretAcccessKey,\n        Region = awsRegion,\n    });\n\n    var cloudwatchV2 = new CloudAmqp.IntegrationMetric(\"cloudwatch_v2\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"cloudwatch_v2\",\n        AccessKeyId = awsAccessKeyId,\n        SecretAccessKey = varAwsSecretAcccessKey,\n        Region = awsRegion,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationMetric(ctx, \"cloudwatch\", \u0026cloudamqp.IntegrationMetricArgs{\n\t\t\tInstanceId:      pulumi.Any(instance.Id),\n\t\t\tName:            pulumi.String(\"cloudwatch\"),\n\t\t\tAccessKeyId:     pulumi.Any(awsAccessKeyId),\n\t\t\tSecretAccessKey: pulumi.Any(varAwsSecretAcccessKey),\n\t\t\tRegion:          pulumi.Any(awsRegion),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewIntegrationMetric(ctx, \"cloudwatch_v2\", \u0026cloudamqp.IntegrationMetricArgs{\n\t\t\tInstanceId:      pulumi.Any(instance.Id),\n\t\t\tName:            pulumi.String(\"cloudwatch_v2\"),\n\t\t\tAccessKeyId:     pulumi.Any(awsAccessKeyId),\n\t\t\tSecretAccessKey: pulumi.Any(varAwsSecretAcccessKey),\n\t\t\tRegion:          pulumi.Any(awsRegion),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationMetric;\nimport com.pulumi.cloudamqp.IntegrationMetricArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cloudwatch = new IntegrationMetric(\"cloudwatch\", IntegrationMetricArgs.builder()\n            .instanceId(instance.id())\n            .name(\"cloudwatch\")\n            .accessKeyId(awsAccessKeyId)\n            .secretAccessKey(varAwsSecretAcccessKey)\n            .region(awsRegion)\n            .build());\n\n        var cloudwatchV2 = new IntegrationMetric(\"cloudwatchV2\", IntegrationMetricArgs.builder()\n            .instanceId(instance.id())\n            .name(\"cloudwatch_v2\")\n            .accessKeyId(awsAccessKeyId)\n            .secretAccessKey(varAwsSecretAcccessKey)\n            .region(awsRegion)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cloudwatch:\n    type: cloudamqp:IntegrationMetric\n    properties:\n      instanceId: ${instance.id}\n      name: cloudwatch\n      accessKeyId: ${awsAccessKeyId}\n      secretAccessKey: ${varAwsSecretAcccessKey}\n      region: ${awsRegion}\n  cloudwatchV2:\n    type: cloudamqp:IntegrationMetric\n    name: cloudwatch_v2\n    properties:\n      instanceId: ${instance.id}\n      name: cloudwatch_v2\n      accessKeyId: ${awsAccessKeyId}\n      secretAccessKey: ${varAwsSecretAcccessKey}\n      region: ${awsRegion}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n***Assume role***\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst cloudwatch = new cloudamqp.IntegrationMetric(\"cloudwatch\", {\n    instanceId: instance.id,\n    name: \"cloudwatch\",\n    iamRole: awsIamRole,\n    iamExternalId: externalId,\n    region: awsRegion,\n});\nconst cloudwatchV2 = new cloudamqp.IntegrationMetric(\"cloudwatch_v2\", {\n    instanceId: instance.id,\n    name: \"cloudwatch_v2\",\n    iamRole: awsIamRole,\n    iamExternalId: externalId,\n    region: awsRegion,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ncloudwatch = cloudamqp.IntegrationMetric(\"cloudwatch\",\n    instance_id=instance[\"id\"],\n    name=\"cloudwatch\",\n    iam_role=aws_iam_role,\n    iam_external_id=external_id,\n    region=aws_region)\ncloudwatch_v2 = cloudamqp.IntegrationMetric(\"cloudwatch_v2\",\n    instance_id=instance[\"id\"],\n    name=\"cloudwatch_v2\",\n    iam_role=aws_iam_role,\n    iam_external_id=external_id,\n    region=aws_region)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cloudwatch = new CloudAmqp.IntegrationMetric(\"cloudwatch\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"cloudwatch\",\n        IamRole = awsIamRole,\n        IamExternalId = externalId,\n        Region = awsRegion,\n    });\n\n    var cloudwatchV2 = new CloudAmqp.IntegrationMetric(\"cloudwatch_v2\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"cloudwatch_v2\",\n        IamRole = awsIamRole,\n        IamExternalId = externalId,\n        Region = awsRegion,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationMetric(ctx, \"cloudwatch\", \u0026cloudamqp.IntegrationMetricArgs{\n\t\t\tInstanceId:    pulumi.Any(instance.Id),\n\t\t\tName:          pulumi.String(\"cloudwatch\"),\n\t\t\tIamRole:       pulumi.Any(awsIamRole),\n\t\t\tIamExternalId: pulumi.Any(externalId),\n\t\t\tRegion:        pulumi.Any(awsRegion),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewIntegrationMetric(ctx, \"cloudwatch_v2\", \u0026cloudamqp.IntegrationMetricArgs{\n\t\t\tInstanceId:    pulumi.Any(instance.Id),\n\t\t\tName:          pulumi.String(\"cloudwatch_v2\"),\n\t\t\tIamRole:       pulumi.Any(awsIamRole),\n\t\t\tIamExternalId: pulumi.Any(externalId),\n\t\t\tRegion:        pulumi.Any(awsRegion),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationMetric;\nimport com.pulumi.cloudamqp.IntegrationMetricArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cloudwatch = new IntegrationMetric(\"cloudwatch\", IntegrationMetricArgs.builder()\n            .instanceId(instance.id())\n            .name(\"cloudwatch\")\n            .iamRole(awsIamRole)\n            .iamExternalId(externalId)\n            .region(awsRegion)\n            .build());\n\n        var cloudwatchV2 = new IntegrationMetric(\"cloudwatchV2\", IntegrationMetricArgs.builder()\n            .instanceId(instance.id())\n            .name(\"cloudwatch_v2\")\n            .iamRole(awsIamRole)\n            .iamExternalId(externalId)\n            .region(awsRegion)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cloudwatch:\n    type: cloudamqp:IntegrationMetric\n    properties:\n      instanceId: ${instance.id}\n      name: cloudwatch\n      iamRole: ${awsIamRole}\n      iamExternalId: ${externalId}\n      region: ${awsRegion}\n  cloudwatchV2:\n    type: cloudamqp:IntegrationMetric\n    name: cloudwatch_v2\n    properties:\n      instanceId: ${instance.id}\n      name: cloudwatch_v2\n      iamRole: ${awsIamRole}\n      iamExternalId: ${externalId}\n      region: ${awsRegion}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n* AWS IAM role: arn:aws:iam::ACCOUNT-ID:role/ROLE-NAME\n* External id: Create own external identifier that match the role created. E.g. \"cloudamqp-abc123\".\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eDatadog v1 and v2 metric integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst datadog = new cloudamqp.IntegrationMetric(\"datadog\", {\n    instanceId: instance.id,\n    name: \"datadog\",\n    apiKey: datadogApiKey,\n    region: datadogRegion,\n    tags: \"env=prod,region=us1,version=v1.0\",\n});\nconst datadogV2 = new cloudamqp.IntegrationMetric(\"datadog_v2\", {\n    instanceId: instance.id,\n    name: \"datadog_v2\",\n    apiKey: datadogApiKey,\n    region: datadogRegion,\n    tags: \"env=prod,region=us1,version=v1.0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ndatadog = cloudamqp.IntegrationMetric(\"datadog\",\n    instance_id=instance[\"id\"],\n    name=\"datadog\",\n    api_key=datadog_api_key,\n    region=datadog_region,\n    tags=\"env=prod,region=us1,version=v1.0\")\ndatadog_v2 = cloudamqp.IntegrationMetric(\"datadog_v2\",\n    instance_id=instance[\"id\"],\n    name=\"datadog_v2\",\n    api_key=datadog_api_key,\n    region=datadog_region,\n    tags=\"env=prod,region=us1,version=v1.0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datadog = new CloudAmqp.IntegrationMetric(\"datadog\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"datadog\",\n        ApiKey = datadogApiKey,\n        Region = datadogRegion,\n        Tags = \"env=prod,region=us1,version=v1.0\",\n    });\n\n    var datadogV2 = new CloudAmqp.IntegrationMetric(\"datadog_v2\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"datadog_v2\",\n        ApiKey = datadogApiKey,\n        Region = datadogRegion,\n        Tags = \"env=prod,region=us1,version=v1.0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationMetric(ctx, \"datadog\", \u0026cloudamqp.IntegrationMetricArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"datadog\"),\n\t\t\tApiKey:     pulumi.Any(datadogApiKey),\n\t\t\tRegion:     pulumi.Any(datadogRegion),\n\t\t\tTags:       pulumi.String(\"env=prod,region=us1,version=v1.0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewIntegrationMetric(ctx, \"datadog_v2\", \u0026cloudamqp.IntegrationMetricArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"datadog_v2\"),\n\t\t\tApiKey:     pulumi.Any(datadogApiKey),\n\t\t\tRegion:     pulumi.Any(datadogRegion),\n\t\t\tTags:       pulumi.String(\"env=prod,region=us1,version=v1.0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationMetric;\nimport com.pulumi.cloudamqp.IntegrationMetricArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var datadog = new IntegrationMetric(\"datadog\", IntegrationMetricArgs.builder()\n            .instanceId(instance.id())\n            .name(\"datadog\")\n            .apiKey(datadogApiKey)\n            .region(datadogRegion)\n            .tags(\"env=prod,region=us1,version=v1.0\")\n            .build());\n\n        var datadogV2 = new IntegrationMetric(\"datadogV2\", IntegrationMetricArgs.builder()\n            .instanceId(instance.id())\n            .name(\"datadog_v2\")\n            .apiKey(datadogApiKey)\n            .region(datadogRegion)\n            .tags(\"env=prod,region=us1,version=v1.0\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  datadog:\n    type: cloudamqp:IntegrationMetric\n    properties:\n      instanceId: ${instance.id}\n      name: datadog\n      apiKey: ${datadogApiKey}\n      region: ${datadogRegion}\n      tags: env=prod,region=us1,version=v1.0\n  datadogV2:\n    type: cloudamqp:IntegrationMetric\n    name: datadog_v2\n    properties:\n      instanceId: ${instance.id}\n      name: datadog_v2\n      apiKey: ${datadogApiKey}\n      region: ${datadogRegion}\n      tags: env=prod,region=us1,version=v1.0\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eLibrato metric integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst librato = new cloudamqp.IntegrationMetric(\"librato\", {\n    instanceId: instance.id,\n    name: \"librato\",\n    email: libratoEmail,\n    apiKey: libratoApiKey,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nlibrato = cloudamqp.IntegrationMetric(\"librato\",\n    instance_id=instance[\"id\"],\n    name=\"librato\",\n    email=librato_email,\n    api_key=librato_api_key)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var librato = new CloudAmqp.IntegrationMetric(\"librato\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"librato\",\n        Email = libratoEmail,\n        ApiKey = libratoApiKey,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationMetric(ctx, \"librato\", \u0026cloudamqp.IntegrationMetricArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"librato\"),\n\t\t\tEmail:      pulumi.Any(libratoEmail),\n\t\t\tApiKey:     pulumi.Any(libratoApiKey),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationMetric;\nimport com.pulumi.cloudamqp.IntegrationMetricArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var librato = new IntegrationMetric(\"librato\", IntegrationMetricArgs.builder()\n            .instanceId(instance.id())\n            .name(\"librato\")\n            .email(libratoEmail)\n            .apiKey(libratoApiKey)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  librato:\n    type: cloudamqp:IntegrationMetric\n    properties:\n      instanceId: ${instance.id}\n      name: librato\n      email: ${libratoEmail}\n      apiKey: ${libratoApiKey}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eNew relic v2 metric integration\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst newrelic = new cloudamqp.IntegrationMetric(\"newrelic\", {\n    instanceId: instance.id,\n    name: \"newrelic_v2\",\n    apiKey: newrelicApiKey,\n    region: newrelicRegion,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nnewrelic = cloudamqp.IntegrationMetric(\"newrelic\",\n    instance_id=instance[\"id\"],\n    name=\"newrelic_v2\",\n    api_key=newrelic_api_key,\n    region=newrelic_region)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var newrelic = new CloudAmqp.IntegrationMetric(\"newrelic\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"newrelic_v2\",\n        ApiKey = newrelicApiKey,\n        Region = newrelicRegion,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationMetric(ctx, \"newrelic\", \u0026cloudamqp.IntegrationMetricArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tName:       pulumi.String(\"newrelic_v2\"),\n\t\t\tApiKey:     pulumi.Any(newrelicApiKey),\n\t\t\tRegion:     pulumi.Any(newrelicRegion),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationMetric;\nimport com.pulumi.cloudamqp.IntegrationMetricArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var newrelic = new IntegrationMetric(\"newrelic\", IntegrationMetricArgs.builder()\n            .instanceId(instance.id())\n            .name(\"newrelic_v2\")\n            .apiKey(newrelicApiKey)\n            .region(newrelicRegion)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  newrelic:\n    type: cloudamqp:IntegrationMetric\n    properties:\n      instanceId: ${instance.id}\n      name: newrelic_v2\n      apiKey: ${newrelicApiKey}\n      region: ${newrelicRegion}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eStackdriver metric integration (v1.20.2 or earlier versions)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\nUse variable file populated with project_id, private_key and client_email\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst stackdriver = new cloudamqp.IntegrationMetric(\"stackdriver\", {\n    instanceId: instance.id,\n    name: \"stackdriver\",\n    projectId: stackdriverProjectId,\n    privateKey: stackdriverPrivateKey,\n    clientEmail: stackriverEmail,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nstackdriver = cloudamqp.IntegrationMetric(\"stackdriver\",\n    instance_id=instance[\"id\"],\n    name=\"stackdriver\",\n    project_id=stackdriver_project_id,\n    private_key=stackdriver_private_key,\n    client_email=stackriver_email)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var stackdriver = new CloudAmqp.IntegrationMetric(\"stackdriver\", new()\n    {\n        InstanceId = instance.Id,\n        Name = \"stackdriver\",\n        ProjectId = stackdriverProjectId,\n        PrivateKey = stackdriverPrivateKey,\n        ClientEmail = stackriverEmail,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewIntegrationMetric(ctx, \"stackdriver\", \u0026cloudamqp.IntegrationMetricArgs{\n\t\t\tInstanceId:  pulumi.Any(instance.Id),\n\t\t\tName:        pulumi.String(\"stackdriver\"),\n\t\t\tProjectId:   pulumi.Any(stackdriverProjectId),\n\t\t\tPrivateKey:  pulumi.Any(stackdriverPrivateKey),\n\t\t\tClientEmail: pulumi.Any(stackriverEmail),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.IntegrationMetric;\nimport com.pulumi.cloudamqp.IntegrationMetricArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var stackdriver = new IntegrationMetric(\"stackdriver\", IntegrationMetricArgs.builder()\n            .instanceId(instance.id())\n            .name(\"stackdriver\")\n            .projectId(stackdriverProjectId)\n            .privateKey(stackdriverPrivateKey)\n            .clientEmail(stackriverEmail)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  stackdriver:\n    type: cloudamqp:IntegrationMetric\n    properties:\n      instanceId: ${instance.id}\n      name: stackdriver\n      projectId: ${stackdriverProjectId}\n      privateKey: ${stackdriverPrivateKey}\n      clientEmail: ${stackriverEmail}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nor by using google_service_account_key resource from Google provider\n\n## Import\n\n`cloudamqp_integration_metric`can be imported using the resource identifier together with CloudAMQP instance identifier. The name and identifier are CSV separated, see example below.\n\n```sh\n$ pulumi import cloudamqp:index/integrationMetric:IntegrationMetric \u003cresource_name\u003e \u003cresource_id\u003e,\u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "AWS access key identifier. (Cloudwatch)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the integration service. (Librato)\n",
                    "secret": true
                },
                "clientEmail": {
                    "type": "string",
                    "description": "The client email. (Stackdriver)\n"
                },
                "credentials": {
                    "type": "string",
                    "description": "Base64Encoded credentials. (Stackdriver)\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "The email address registred for the integration service. (Librato)\n"
                },
                "iamExternalId": {
                    "type": "string",
                    "description": "External identifier that match the role you created. (Cloudwatch)\n"
                },
                "iamRole": {
                    "type": "string",
                    "description": "The ARN of the role to be assumed when publishing metrics. (Cloudwatch)\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "Instance identifier\n"
                },
                "licenseKey": {
                    "type": "string",
                    "description": "The license key registred for the integration service. (New Relic)\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of metrics integration\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key. (Stackdriver)\n",
                    "secret": true
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Private key identifier. (Stackdriver)\n",
                    "secret": true
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID. (Stackdriver)\n"
                },
                "queueAllowlist": {
                    "type": "string",
                    "description": "(optional) allowlist using regular expression\n"
                },
                "queueWhitelist": {
                    "type": "string",
                    "description": "**Deprecated**\n",
                    "deprecationMessage": "use queue_allowlist instead"
                },
                "region": {
                    "type": "string",
                    "description": "AWS region for Cloudwatch and [US/EU] for Data dog/New relic. (Cloudwatch, Data Dog, New Relic)\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "AWS secret key. (Cloudwatch)\n",
                    "secret": true
                },
                "tags": {
                    "type": "string",
                    "description": "(optional) tags. E.g. env=prod,region=europe\n"
                },
                "vhostAllowlist": {
                    "type": "string",
                    "description": "(optional) allowlist using regular expression\n"
                },
                "vhostWhitelist": {
                    "type": "string",
                    "description": "**Deprecated**\n",
                    "deprecationMessage": "use vhost_allowlist instead"
                }
            },
            "required": [
                "clientEmail",
                "instanceId",
                "name",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "inputProperties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "AWS access key identifier. (Cloudwatch)\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "The API key for the integration service. (Librato)\n",
                    "secret": true
                },
                "clientEmail": {
                    "type": "string",
                    "description": "The client email. (Stackdriver)\n"
                },
                "credentials": {
                    "type": "string",
                    "description": "Base64Encoded credentials. (Stackdriver)\n",
                    "secret": true
                },
                "email": {
                    "type": "string",
                    "description": "The email address registred for the integration service. (Librato)\n"
                },
                "iamExternalId": {
                    "type": "string",
                    "description": "External identifier that match the role you created. (Cloudwatch)\n"
                },
                "iamRole": {
                    "type": "string",
                    "description": "The ARN of the role to be assumed when publishing metrics. (Cloudwatch)\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "Instance identifier\n",
                    "willReplaceOnChanges": true
                },
                "licenseKey": {
                    "type": "string",
                    "description": "The license key registred for the integration service. (New Relic)\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of metrics integration\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key. (Stackdriver)\n",
                    "secret": true
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Private key identifier. (Stackdriver)\n",
                    "secret": true
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID. (Stackdriver)\n"
                },
                "queueAllowlist": {
                    "type": "string",
                    "description": "(optional) allowlist using regular expression\n"
                },
                "queueWhitelist": {
                    "type": "string",
                    "description": "**Deprecated**\n",
                    "deprecationMessage": "use queue_allowlist instead"
                },
                "region": {
                    "type": "string",
                    "description": "AWS region for Cloudwatch and [US/EU] for Data dog/New relic. (Cloudwatch, Data Dog, New Relic)\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "AWS secret key. (Cloudwatch)\n",
                    "secret": true
                },
                "tags": {
                    "type": "string",
                    "description": "(optional) tags. E.g. env=prod,region=europe\n"
                },
                "vhostAllowlist": {
                    "type": "string",
                    "description": "(optional) allowlist using regular expression\n"
                },
                "vhostWhitelist": {
                    "type": "string",
                    "description": "**Deprecated**\n",
                    "deprecationMessage": "use vhost_allowlist instead"
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationMetric resources.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "AWS access key identifier. (Cloudwatch)\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "The API key for the integration service. (Librato)\n",
                        "secret": true
                    },
                    "clientEmail": {
                        "type": "string",
                        "description": "The client email. (Stackdriver)\n"
                    },
                    "credentials": {
                        "type": "string",
                        "description": "Base64Encoded credentials. (Stackdriver)\n",
                        "secret": true
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address registred for the integration service. (Librato)\n"
                    },
                    "iamExternalId": {
                        "type": "string",
                        "description": "External identifier that match the role you created. (Cloudwatch)\n"
                    },
                    "iamRole": {
                        "type": "string",
                        "description": "The ARN of the role to be assumed when publishing metrics. (Cloudwatch)\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "Instance identifier\n",
                        "willReplaceOnChanges": true
                    },
                    "licenseKey": {
                        "type": "string",
                        "description": "The license key registred for the integration service. (New Relic)\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of metrics integration\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The private key. (Stackdriver)\n",
                        "secret": true
                    },
                    "privateKeyId": {
                        "type": "string",
                        "description": "Private key identifier. (Stackdriver)\n",
                        "secret": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID. (Stackdriver)\n"
                    },
                    "queueAllowlist": {
                        "type": "string",
                        "description": "(optional) allowlist using regular expression\n"
                    },
                    "queueWhitelist": {
                        "type": "string",
                        "description": "**Deprecated**\n",
                        "deprecationMessage": "use queue_allowlist instead"
                    },
                    "region": {
                        "type": "string",
                        "description": "AWS region for Cloudwatch and [US/EU] for Data dog/New relic. (Cloudwatch, Data Dog, New Relic)\n"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "AWS secret key. (Cloudwatch)\n",
                        "secret": true
                    },
                    "tags": {
                        "type": "string",
                        "description": "(optional) tags. E.g. env=prod,region=europe\n"
                    },
                    "vhostAllowlist": {
                        "type": "string",
                        "description": "(optional) allowlist using regular expression\n"
                    },
                    "vhostWhitelist": {
                        "type": "string",
                        "description": "**Deprecated**\n",
                        "deprecationMessage": "use vhost_allowlist instead"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/nodeActions:NodeActions": {
            "description": "This resource allows you to invoke actions on a specific node.\n\nOnly available for dedicated subscription plans.\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eAlready know the node identifier (e.g. from state file)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// New recipient to receieve notifications\nconst nodeAction = new cloudamqp.NodeActions(\"node_action\", {\n    instanceId: instance.id,\n    nodeName: \"\u003cnode name\u003e\",\n    action: \"restart\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# New recipient to receieve notifications\nnode_action = cloudamqp.NodeActions(\"node_action\",\n    instance_id=instance[\"id\"],\n    node_name=\"\u003cnode name\u003e\",\n    action=\"restart\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // New recipient to receieve notifications\n    var nodeAction = new CloudAmqp.NodeActions(\"node_action\", new()\n    {\n        InstanceId = instance.Id,\n        NodeName = \"\u003cnode name\u003e\",\n        Action = \"restart\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// New recipient to receieve notifications\n\t\t_, err := cloudamqp.NewNodeActions(ctx, \"node_action\", \u0026cloudamqp.NodeActionsArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tNodeName:   pulumi.String(\"\u003cnode name\u003e\"),\n\t\t\tAction:     pulumi.String(\"restart\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.NodeActions;\nimport com.pulumi.cloudamqp.NodeActionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // New recipient to receieve notifications\n        var nodeAction = new NodeActions(\"nodeAction\", NodeActionsArgs.builder()\n            .instanceId(instance.id())\n            .nodeName(\"\u003cnode name\u003e\")\n            .action(\"restart\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # New recipient to receieve notifications\n  nodeAction:\n    type: cloudamqp:NodeActions\n    name: node_action\n    properties:\n      instanceId: ${instance.id}\n      nodeName: \u003cnode name\u003e\n      action: restart\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\nUsing data source `cloudamqp.getNodes` to restart RabbitMQ on all nodes.\u003c/br\u003e\n***Note: RabbitMQ restart on multiple nodes need to be chained, so one node restart at the time.***\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eMulti node RabbitMQ restart\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst listNodes = cloudamqp.getNodes({\n    instanceId: instance.id,\n});\nconst restart01 = new cloudamqp.NodeActions(\"restart_01\", {\n    instanceId: instance.id,\n    action: \"restart\",\n    nodeName: listNodes.then(listNodes =\u003e listNodes.nodes?.[0]?.name),\n});\nconst restart02 = new cloudamqp.NodeActions(\"restart_02\", {\n    instanceId: instance.id,\n    action: \"restart\",\n    nodeName: listNodes.then(listNodes =\u003e listNodes.nodes?.[1]?.name),\n}, {\n    dependsOn: [restart01],\n});\nconst restart03 = new cloudamqp.NodeActions(\"restart_03\", {\n    instanceId: instance.id,\n    action: \"restart\",\n    nodeName: listNodes.then(listNodes =\u003e listNodes.nodes?.[2]?.name),\n}, {\n    dependsOn: [\n        restart01,\n        restart02,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nlist_nodes = cloudamqp.get_nodes(instance_id=instance[\"id\"])\nrestart01 = cloudamqp.NodeActions(\"restart_01\",\n    instance_id=instance[\"id\"],\n    action=\"restart\",\n    node_name=list_nodes.nodes[0].name)\nrestart02 = cloudamqp.NodeActions(\"restart_02\",\n    instance_id=instance[\"id\"],\n    action=\"restart\",\n    node_name=list_nodes.nodes[1].name,\n    opts = pulumi.ResourceOptions(depends_on=[restart01]))\nrestart03 = cloudamqp.NodeActions(\"restart_03\",\n    instance_id=instance[\"id\"],\n    action=\"restart\",\n    node_name=list_nodes.nodes[2].name,\n    opts = pulumi.ResourceOptions(depends_on=[\n            restart01,\n            restart02,\n        ]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var listNodes = CloudAmqp.GetNodes.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n    var restart01 = new CloudAmqp.NodeActions(\"restart_01\", new()\n    {\n        InstanceId = instance.Id,\n        Action = \"restart\",\n        NodeName = listNodes.Apply(getNodesResult =\u003e getNodesResult.Nodes[0]?.Name),\n    });\n\n    var restart02 = new CloudAmqp.NodeActions(\"restart_02\", new()\n    {\n        InstanceId = instance.Id,\n        Action = \"restart\",\n        NodeName = listNodes.Apply(getNodesResult =\u003e getNodesResult.Nodes[1]?.Name),\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            restart01,\n        },\n    });\n\n    var restart03 = new CloudAmqp.NodeActions(\"restart_03\", new()\n    {\n        InstanceId = instance.Id,\n        Action = \"restart\",\n        NodeName = listNodes.Apply(getNodesResult =\u003e getNodesResult.Nodes[2]?.Name),\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            restart01,\n            restart02,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlistNodes, err := cloudamqp.GetNodes(ctx, \u0026cloudamqp.GetNodesArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\trestart01, err := cloudamqp.NewNodeActions(ctx, \"restart_01\", \u0026cloudamqp.NodeActionsArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tAction:     pulumi.String(\"restart\"),\n\t\t\tNodeName:   pulumi.String(listNodes.Nodes[0].Name),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\trestart02, err := cloudamqp.NewNodeActions(ctx, \"restart_02\", \u0026cloudamqp.NodeActionsArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tAction:     pulumi.String(\"restart\"),\n\t\t\tNodeName:   pulumi.String(listNodes.Nodes[1].Name),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\trestart01,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewNodeActions(ctx, \"restart_03\", \u0026cloudamqp.NodeActionsArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tAction:     pulumi.String(\"restart\"),\n\t\t\tNodeName:   pulumi.String(listNodes.Nodes[2].Name),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\trestart01,\n\t\t\trestart02,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetNodesArgs;\nimport com.pulumi.cloudamqp.NodeActions;\nimport com.pulumi.cloudamqp.NodeActionsArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var listNodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n        var restart01 = new NodeActions(\"restart01\", NodeActionsArgs.builder()\n            .instanceId(instance.id())\n            .action(\"restart\")\n            .nodeName(listNodes.applyValue(getNodesResult -\u003e getNodesResult.nodes()[0].name()))\n            .build());\n\n        var restart02 = new NodeActions(\"restart02\", NodeActionsArgs.builder()\n            .instanceId(instance.id())\n            .action(\"restart\")\n            .nodeName(listNodes.applyValue(getNodesResult -\u003e getNodesResult.nodes()[1].name()))\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(restart01)\n                .build());\n\n        var restart03 = new NodeActions(\"restart03\", NodeActionsArgs.builder()\n            .instanceId(instance.id())\n            .action(\"restart\")\n            .nodeName(listNodes.applyValue(getNodesResult -\u003e getNodesResult.nodes()[2].name()))\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(                \n                    restart01,\n                    restart02)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  restart01:\n    type: cloudamqp:NodeActions\n    name: restart_01\n    properties:\n      instanceId: ${instance.id}\n      action: restart\n      nodeName: ${listNodes.nodes[0].name}\n  restart02:\n    type: cloudamqp:NodeActions\n    name: restart_02\n    properties:\n      instanceId: ${instance.id}\n      action: restart\n      nodeName: ${listNodes.nodes[1].name}\n    options:\n      dependsOn:\n        - ${restart01}\n  restart03:\n    type: cloudamqp:NodeActions\n    name: restart_03\n    properties:\n      instanceId: ${instance.id}\n      action: restart\n      nodeName: ${listNodes.nodes[2].name}\n    options:\n      dependsOn:\n        - ${restart01}\n        - ${restart02}\nvariables:\n  listNodes:\n    fn::invoke:\n      function: cloudamqp:getNodes\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCombine log level configuration change with multi node RabbitMQ restart\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst listNodes = cloudamqp.getNodes({\n    instanceId: instance.id,\n});\nconst rabbitmqConfig = new cloudamqp.RabbitConfiguration(\"rabbitmq_config\", {\n    instanceId: instance.id,\n    logExchangeLevel: \"info\",\n});\nconst restart01 = new cloudamqp.NodeActions(\"restart_01\", {\n    instanceId: instance.id,\n    action: \"restart\",\n    nodeName: listNodes.then(listNodes =\u003e listNodes.nodes?.[0]?.name),\n}, {\n    dependsOn: [rabbitmqConfig],\n});\nconst restart02 = new cloudamqp.NodeActions(\"restart_02\", {\n    instanceId: instance.id,\n    action: \"restart\",\n    nodeName: listNodes.then(listNodes =\u003e listNodes.nodes?.[1]?.name),\n}, {\n    dependsOn: [\n        rabbitmqConfig,\n        restart01,\n    ],\n});\nconst restart03 = new cloudamqp.NodeActions(\"restart_03\", {\n    instanceId: instance.id,\n    action: \"restart\",\n    nodeName: listNodes.then(listNodes =\u003e listNodes.nodes?.[2]?.name),\n}, {\n    dependsOn: [\n        rabbitmqConfig,\n        restart01,\n        restart02,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nlist_nodes = cloudamqp.get_nodes(instance_id=instance[\"id\"])\nrabbitmq_config = cloudamqp.RabbitConfiguration(\"rabbitmq_config\",\n    instance_id=instance[\"id\"],\n    log_exchange_level=\"info\")\nrestart01 = cloudamqp.NodeActions(\"restart_01\",\n    instance_id=instance[\"id\"],\n    action=\"restart\",\n    node_name=list_nodes.nodes[0].name,\n    opts = pulumi.ResourceOptions(depends_on=[rabbitmq_config]))\nrestart02 = cloudamqp.NodeActions(\"restart_02\",\n    instance_id=instance[\"id\"],\n    action=\"restart\",\n    node_name=list_nodes.nodes[1].name,\n    opts = pulumi.ResourceOptions(depends_on=[\n            rabbitmq_config,\n            restart01,\n        ]))\nrestart03 = cloudamqp.NodeActions(\"restart_03\",\n    instance_id=instance[\"id\"],\n    action=\"restart\",\n    node_name=list_nodes.nodes[2].name,\n    opts = pulumi.ResourceOptions(depends_on=[\n            rabbitmq_config,\n            restart01,\n            restart02,\n        ]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var listNodes = CloudAmqp.GetNodes.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n    var rabbitmqConfig = new CloudAmqp.RabbitConfiguration(\"rabbitmq_config\", new()\n    {\n        InstanceId = instance.Id,\n        LogExchangeLevel = \"info\",\n    });\n\n    var restart01 = new CloudAmqp.NodeActions(\"restart_01\", new()\n    {\n        InstanceId = instance.Id,\n        Action = \"restart\",\n        NodeName = listNodes.Apply(getNodesResult =\u003e getNodesResult.Nodes[0]?.Name),\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            rabbitmqConfig,\n        },\n    });\n\n    var restart02 = new CloudAmqp.NodeActions(\"restart_02\", new()\n    {\n        InstanceId = instance.Id,\n        Action = \"restart\",\n        NodeName = listNodes.Apply(getNodesResult =\u003e getNodesResult.Nodes[1]?.Name),\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            rabbitmqConfig,\n            restart01,\n        },\n    });\n\n    var restart03 = new CloudAmqp.NodeActions(\"restart_03\", new()\n    {\n        InstanceId = instance.Id,\n        Action = \"restart\",\n        NodeName = listNodes.Apply(getNodesResult =\u003e getNodesResult.Nodes[2]?.Name),\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            rabbitmqConfig,\n            restart01,\n            restart02,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlistNodes, err := cloudamqp.GetNodes(ctx, \u0026cloudamqp.GetNodesArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\trabbitmqConfig, err := cloudamqp.NewRabbitConfiguration(ctx, \"rabbitmq_config\", \u0026cloudamqp.RabbitConfigurationArgs{\n\t\t\tInstanceId:       pulumi.Any(instance.Id),\n\t\t\tLogExchangeLevel: pulumi.String(\"info\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\trestart01, err := cloudamqp.NewNodeActions(ctx, \"restart_01\", \u0026cloudamqp.NodeActionsArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tAction:     pulumi.String(\"restart\"),\n\t\t\tNodeName:   pulumi.String(listNodes.Nodes[0].Name),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\trabbitmqConfig,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\trestart02, err := cloudamqp.NewNodeActions(ctx, \"restart_02\", \u0026cloudamqp.NodeActionsArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tAction:     pulumi.String(\"restart\"),\n\t\t\tNodeName:   pulumi.String(listNodes.Nodes[1].Name),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\trabbitmqConfig,\n\t\t\trestart01,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewNodeActions(ctx, \"restart_03\", \u0026cloudamqp.NodeActionsArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tAction:     pulumi.String(\"restart\"),\n\t\t\tNodeName:   pulumi.String(listNodes.Nodes[2].Name),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\trabbitmqConfig,\n\t\t\trestart01,\n\t\t\trestart02,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetNodesArgs;\nimport com.pulumi.cloudamqp.RabbitConfiguration;\nimport com.pulumi.cloudamqp.RabbitConfigurationArgs;\nimport com.pulumi.cloudamqp.NodeActions;\nimport com.pulumi.cloudamqp.NodeActionsArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var listNodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n        var rabbitmqConfig = new RabbitConfiguration(\"rabbitmqConfig\", RabbitConfigurationArgs.builder()\n            .instanceId(instance.id())\n            .logExchangeLevel(\"info\")\n            .build());\n\n        var restart01 = new NodeActions(\"restart01\", NodeActionsArgs.builder()\n            .instanceId(instance.id())\n            .action(\"restart\")\n            .nodeName(listNodes.applyValue(getNodesResult -\u003e getNodesResult.nodes()[0].name()))\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(rabbitmqConfig)\n                .build());\n\n        var restart02 = new NodeActions(\"restart02\", NodeActionsArgs.builder()\n            .instanceId(instance.id())\n            .action(\"restart\")\n            .nodeName(listNodes.applyValue(getNodesResult -\u003e getNodesResult.nodes()[1].name()))\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(                \n                    rabbitmqConfig,\n                    restart01)\n                .build());\n\n        var restart03 = new NodeActions(\"restart03\", NodeActionsArgs.builder()\n            .instanceId(instance.id())\n            .action(\"restart\")\n            .nodeName(listNodes.applyValue(getNodesResult -\u003e getNodesResult.nodes()[2].name()))\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(                \n                    rabbitmqConfig,\n                    restart01,\n                    restart02)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  rabbitmqConfig:\n    type: cloudamqp:RabbitConfiguration\n    name: rabbitmq_config\n    properties:\n      instanceId: ${instance.id}\n      logExchangeLevel: info\n  restart01:\n    type: cloudamqp:NodeActions\n    name: restart_01\n    properties:\n      instanceId: ${instance.id}\n      action: restart\n      nodeName: ${listNodes.nodes[0].name}\n    options:\n      dependsOn:\n        - ${rabbitmqConfig}\n  restart02:\n    type: cloudamqp:NodeActions\n    name: restart_02\n    properties:\n      instanceId: ${instance.id}\n      action: restart\n      nodeName: ${listNodes.nodes[1].name}\n    options:\n      dependsOn:\n        - ${rabbitmqConfig}\n        - ${restart01}\n  restart03:\n    type: cloudamqp:NodeActions\n    name: restart_03\n    properties:\n      instanceId: ${instance.id}\n      action: restart\n      nodeName: ${listNodes.nodes[2].name}\n    options:\n      dependsOn:\n        - ${rabbitmqConfig}\n        - ${restart01}\n        - ${restart02}\nvariables:\n  listNodes:\n    fn::invoke:\n      function: cloudamqp:getNodes\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Action reference\n\nValid options for action.\n\n| Action       | Info                               |\n|--------------|------------------------------------|\n| start        | Start RabbitMQ                     |\n| stop         | Stop RabbitMQ                      |\n| restart      | Restart RabbitMQ                   |\n| reboot       | Reboot the node                    |\n| mgmt.restart | Restart the RabbitMQ mgmt interace |\n\n## Dependency\n\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id` and node name.\n\n## Import\n\nThis resource cannot be imported.\n\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to invoke on the node.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "nodeName": {
                    "type": "string",
                    "description": "The node name, e.g `green-guinea-pig-01`.\n"
                },
                "running": {
                    "type": "boolean",
                    "description": "If the node is running.\n"
                }
            },
            "required": [
                "action",
                "instanceId",
                "nodeName",
                "running"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action to invoke on the node.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "nodeName": {
                    "type": "string",
                    "description": "The node name, e.g `green-guinea-pig-01`.\n"
                }
            },
            "requiredInputs": [
                "action",
                "instanceId",
                "nodeName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NodeActions resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to invoke on the node.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n"
                    },
                    "nodeName": {
                        "type": "string",
                        "description": "The node name, e.g `green-guinea-pig-01`.\n"
                    },
                    "running": {
                        "type": "boolean",
                        "description": "If the node is running.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/notification:Notification": {
            "description": "This resource allows you to create and manage recipients to receive alarm notifications. There will\nalways be a default recipient created upon instance creation. This recipient will use team email and\nreceive notifications from default alarms.\n\nAvailable for all subscription plans.\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003eEmail recipient\u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst emailRecipient = new cloudamqp.Notification(\"email_recipient\", {\n    instanceId: instance.id,\n    type: \"email\",\n    value: \"alarm@example.com\",\n    name: \"alarm\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nemail_recipient = cloudamqp.Notification(\"email_recipient\",\n    instance_id=instance[\"id\"],\n    type=\"email\",\n    value=\"alarm@example.com\",\n    name=\"alarm\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var emailRecipient = new CloudAmqp.Notification(\"email_recipient\", new()\n    {\n        InstanceId = instance.Id,\n        Type = \"email\",\n        Value = \"alarm@example.com\",\n        Name = \"alarm\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewNotification(ctx, \"email_recipient\", \u0026cloudamqp.NotificationArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tType:       pulumi.String(\"email\"),\n\t\t\tValue:      pulumi.String(\"alarm@example.com\"),\n\t\t\tName:       pulumi.String(\"alarm\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Notification;\nimport com.pulumi.cloudamqp.NotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var emailRecipient = new Notification(\"emailRecipient\", NotificationArgs.builder()\n            .instanceId(instance.id())\n            .type(\"email\")\n            .value(\"alarm@example.com\")\n            .name(\"alarm\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  emailRecipient:\n    type: cloudamqp:Notification\n    name: email_recipient\n    properties:\n      instanceId: ${instance.id}\n      type: email\n      value: alarm@example.com\n      name: alarm\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003eOpsGenie recipient with optional responders\u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst opsgenieRecipient = new cloudamqp.Notification(\"opsgenie_recipient\", {\n    instanceId: instance.id,\n    type: \"opsgenie\",\n    value: \"\u003capi-key\u003e\",\n    name: \"OpsGenie\",\n    responders: [\n        {\n            type: \"team\",\n            id: \"\u003cteam-uuid\u003e\",\n        },\n        {\n            type: \"user\",\n            username: \"\u003cusername\u003e\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nopsgenie_recipient = cloudamqp.Notification(\"opsgenie_recipient\",\n    instance_id=instance[\"id\"],\n    type=\"opsgenie\",\n    value=\"\u003capi-key\u003e\",\n    name=\"OpsGenie\",\n    responders=[\n        {\n            \"type\": \"team\",\n            \"id\": \"\u003cteam-uuid\u003e\",\n        },\n        {\n            \"type\": \"user\",\n            \"username\": \"\u003cusername\u003e\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var opsgenieRecipient = new CloudAmqp.Notification(\"opsgenie_recipient\", new()\n    {\n        InstanceId = instance.Id,\n        Type = \"opsgenie\",\n        Value = \"\u003capi-key\u003e\",\n        Name = \"OpsGenie\",\n        Responders = new[]\n        {\n            new CloudAmqp.Inputs.NotificationResponderArgs\n            {\n                Type = \"team\",\n                Id = \"\u003cteam-uuid\u003e\",\n            },\n            new CloudAmqp.Inputs.NotificationResponderArgs\n            {\n                Type = \"user\",\n                Username = \"\u003cusername\u003e\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewNotification(ctx, \"opsgenie_recipient\", \u0026cloudamqp.NotificationArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tType:       pulumi.String(\"opsgenie\"),\n\t\t\tValue:      pulumi.String(\"\u003capi-key\u003e\"),\n\t\t\tName:       pulumi.String(\"OpsGenie\"),\n\t\t\tResponders: cloudamqp.NotificationResponderArray{\n\t\t\t\t\u0026cloudamqp.NotificationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"team\"),\n\t\t\t\t\tId:   pulumi.String(\"\u003cteam-uuid\u003e\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudamqp.NotificationResponderArgs{\n\t\t\t\t\tType:     pulumi.String(\"user\"),\n\t\t\t\t\tUsername: pulumi.String(\"\u003cusername\u003e\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Notification;\nimport com.pulumi.cloudamqp.NotificationArgs;\nimport com.pulumi.cloudamqp.inputs.NotificationResponderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var opsgenieRecipient = new Notification(\"opsgenieRecipient\", NotificationArgs.builder()\n            .instanceId(instance.id())\n            .type(\"opsgenie\")\n            .value(\"\u003capi-key\u003e\")\n            .name(\"OpsGenie\")\n            .responders(            \n                NotificationResponderArgs.builder()\n                    .type(\"team\")\n                    .id(\"\u003cteam-uuid\u003e\")\n                    .build(),\n                NotificationResponderArgs.builder()\n                    .type(\"user\")\n                    .username(\"\u003cusername\u003e\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  opsgenieRecipient:\n    type: cloudamqp:Notification\n    name: opsgenie_recipient\n    properties:\n      instanceId: ${instance.id}\n      type: opsgenie\n      value: \u003capi-key\u003e\n      name: OpsGenie\n      responders:\n        - type: team\n          id: \u003cteam-uuid\u003e\n        - type: user\n          username: \u003cusername\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003ePagerduty recipient with optional dedup key\u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst pagerdutyRecipient = new cloudamqp.Notification(\"pagerduty_recipient\", {\n    instanceId: instance.id,\n    type: \"pagerduty\",\n    value: \"\u003cintegration-key\u003e\",\n    name: \"PagerDuty\",\n    options: {\n        dedupkey: \"DEDUPKEY\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\npagerduty_recipient = cloudamqp.Notification(\"pagerduty_recipient\",\n    instance_id=instance[\"id\"],\n    type=\"pagerduty\",\n    value=\"\u003cintegration-key\u003e\",\n    name=\"PagerDuty\",\n    options={\n        \"dedupkey\": \"DEDUPKEY\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pagerdutyRecipient = new CloudAmqp.Notification(\"pagerduty_recipient\", new()\n    {\n        InstanceId = instance.Id,\n        Type = \"pagerduty\",\n        Value = \"\u003cintegration-key\u003e\",\n        Name = \"PagerDuty\",\n        Options = \n        {\n            { \"dedupkey\", \"DEDUPKEY\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewNotification(ctx, \"pagerduty_recipient\", \u0026cloudamqp.NotificationArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tType:       pulumi.String(\"pagerduty\"),\n\t\t\tValue:      pulumi.String(\"\u003cintegration-key\u003e\"),\n\t\t\tName:       pulumi.String(\"PagerDuty\"),\n\t\t\tOptions: pulumi.StringMap{\n\t\t\t\t\"dedupkey\": pulumi.String(\"DEDUPKEY\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Notification;\nimport com.pulumi.cloudamqp.NotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var pagerdutyRecipient = new Notification(\"pagerdutyRecipient\", NotificationArgs.builder()\n            .instanceId(instance.id())\n            .type(\"pagerduty\")\n            .value(\"\u003cintegration-key\u003e\")\n            .name(\"PagerDuty\")\n            .options(Map.of(\"dedupkey\", \"DEDUPKEY\"))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  pagerdutyRecipient:\n    type: cloudamqp:Notification\n    name: pagerduty_recipient\n    properties:\n      instanceId: ${instance.id}\n      type: pagerduty\n      value: \u003cintegration-key\u003e\n      name: PagerDuty\n      options:\n        dedupkey: DEDUPKEY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003eSignl4 recipient\u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst signl4Recipient = new cloudamqp.Notification(\"signl4_recipient\", {\n    instanceId: instance.id,\n    type: \"signl4\",\n    value: \"\u003cteam-secret\u003e\",\n    name: \"Signl4\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nsignl4_recipient = cloudamqp.Notification(\"signl4_recipient\",\n    instance_id=instance[\"id\"],\n    type=\"signl4\",\n    value=\"\u003cteam-secret\u003e\",\n    name=\"Signl4\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var signl4Recipient = new CloudAmqp.Notification(\"signl4_recipient\", new()\n    {\n        InstanceId = instance.Id,\n        Type = \"signl4\",\n        Value = \"\u003cteam-secret\u003e\",\n        Name = \"Signl4\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewNotification(ctx, \"signl4_recipient\", \u0026cloudamqp.NotificationArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tType:       pulumi.String(\"signl4\"),\n\t\t\tValue:      pulumi.String(\"\u003cteam-secret\u003e\"),\n\t\t\tName:       pulumi.String(\"Signl4\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Notification;\nimport com.pulumi.cloudamqp.NotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var signl4Recipient = new Notification(\"signl4Recipient\", NotificationArgs.builder()\n            .instanceId(instance.id())\n            .type(\"signl4\")\n            .value(\"\u003cteam-secret\u003e\")\n            .name(\"Signl4\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  signl4Recipient:\n    type: cloudamqp:Notification\n    name: signl4_recipient\n    properties:\n      instanceId: ${instance.id}\n      type: signl4\n      value: \u003cteam-secret\u003e\n      name: Signl4\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003eTeams recipient\u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst teamsRecipient = new cloudamqp.Notification(\"teams_recipient\", {\n    instanceId: instance.id,\n    type: \"teams\",\n    value: \"\u003cteams-webhook-url\u003e\",\n    name: \"Teams\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nteams_recipient = cloudamqp.Notification(\"teams_recipient\",\n    instance_id=instance[\"id\"],\n    type=\"teams\",\n    value=\"\u003cteams-webhook-url\u003e\",\n    name=\"Teams\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var teamsRecipient = new CloudAmqp.Notification(\"teams_recipient\", new()\n    {\n        InstanceId = instance.Id,\n        Type = \"teams\",\n        Value = \"\u003cteams-webhook-url\u003e\",\n        Name = \"Teams\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewNotification(ctx, \"teams_recipient\", \u0026cloudamqp.NotificationArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tType:       pulumi.String(\"teams\"),\n\t\t\tValue:      pulumi.String(\"\u003cteams-webhook-url\u003e\"),\n\t\t\tName:       pulumi.String(\"Teams\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Notification;\nimport com.pulumi.cloudamqp.NotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var teamsRecipient = new Notification(\"teamsRecipient\", NotificationArgs.builder()\n            .instanceId(instance.id())\n            .type(\"teams\")\n            .value(\"\u003cteams-webhook-url\u003e\")\n            .name(\"Teams\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  teamsRecipient:\n    type: cloudamqp:Notification\n    name: teams_recipient\n    properties:\n      instanceId: ${instance.id}\n      type: teams\n      value: \u003cteams-webhook-url\u003e\n      name: Teams\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003eVictorops recipient with optional routing key (rk)\u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst victoropsRecipient = new cloudamqp.Notification(\"victorops_recipient\", {\n    instanceId: instance.id,\n    type: \"victorops\",\n    value: \"\u003cintegration-key\u003e\",\n    name: \"Victorops\",\n    options: {\n        rk: \"ROUTINGKEY\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvictorops_recipient = cloudamqp.Notification(\"victorops_recipient\",\n    instance_id=instance[\"id\"],\n    type=\"victorops\",\n    value=\"\u003cintegration-key\u003e\",\n    name=\"Victorops\",\n    options={\n        \"rk\": \"ROUTINGKEY\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var victoropsRecipient = new CloudAmqp.Notification(\"victorops_recipient\", new()\n    {\n        InstanceId = instance.Id,\n        Type = \"victorops\",\n        Value = \"\u003cintegration-key\u003e\",\n        Name = \"Victorops\",\n        Options = \n        {\n            { \"rk\", \"ROUTINGKEY\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewNotification(ctx, \"victorops_recipient\", \u0026cloudamqp.NotificationArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tType:       pulumi.String(\"victorops\"),\n\t\t\tValue:      pulumi.String(\"\u003cintegration-key\u003e\"),\n\t\t\tName:       pulumi.String(\"Victorops\"),\n\t\t\tOptions: pulumi.StringMap{\n\t\t\t\t\"rk\": pulumi.String(\"ROUTINGKEY\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Notification;\nimport com.pulumi.cloudamqp.NotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var victoropsRecipient = new Notification(\"victoropsRecipient\", NotificationArgs.builder()\n            .instanceId(instance.id())\n            .type(\"victorops\")\n            .value(\"\u003cintegration-key\u003e\")\n            .name(\"Victorops\")\n            .options(Map.of(\"rk\", \"ROUTINGKEY\"))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  victoropsRecipient:\n    type: cloudamqp:Notification\n    name: victorops_recipient\n    properties:\n      instanceId: ${instance.id}\n      type: victorops\n      value: \u003cintegration-key\u003e\n      name: Victorops\n      options:\n        rk: ROUTINGKEY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003eSlack recipient\u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst slackRecipient = new cloudamqp.Notification(\"slack_recipient\", {\n    instanceId: instance.id,\n    type: \"slack\",\n    value: \"\u003cslack-webhook-url\u003e\",\n    name: \"Slack webhook recipient\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nslack_recipient = cloudamqp.Notification(\"slack_recipient\",\n    instance_id=instance[\"id\"],\n    type=\"slack\",\n    value=\"\u003cslack-webhook-url\u003e\",\n    name=\"Slack webhook recipient\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var slackRecipient = new CloudAmqp.Notification(\"slack_recipient\", new()\n    {\n        InstanceId = instance.Id,\n        Type = \"slack\",\n        Value = \"\u003cslack-webhook-url\u003e\",\n        Name = \"Slack webhook recipient\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewNotification(ctx, \"slack_recipient\", \u0026cloudamqp.NotificationArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tType:       pulumi.String(\"slack\"),\n\t\t\tValue:      pulumi.String(\"\u003cslack-webhook-url\u003e\"),\n\t\t\tName:       pulumi.String(\"Slack webhook recipient\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Notification;\nimport com.pulumi.cloudamqp.NotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var slackRecipient = new Notification(\"slackRecipient\", NotificationArgs.builder()\n            .instanceId(instance.id())\n            .type(\"slack\")\n            .value(\"\u003cslack-webhook-url\u003e\")\n            .name(\"Slack webhook recipient\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  slackRecipient:\n    type: cloudamqp:Notification\n    name: slack_recipient\n    properties:\n      instanceId: ${instance.id}\n      type: slack\n      value: \u003cslack-webhook-url\u003e\n      name: Slack webhook recipient\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003eWebhook recipient\u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst webhookRecipient = new cloudamqp.Notification(\"webhook_recipient\", {\n    instanceId: instance.id,\n    type: \"webhook\",\n    value: \"\u003cwebhook-url\u003e\",\n    name: \"Webhook\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nwebhook_recipient = cloudamqp.Notification(\"webhook_recipient\",\n    instance_id=instance[\"id\"],\n    type=\"webhook\",\n    value=\"\u003cwebhook-url\u003e\",\n    name=\"Webhook\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var webhookRecipient = new CloudAmqp.Notification(\"webhook_recipient\", new()\n    {\n        InstanceId = instance.Id,\n        Type = \"webhook\",\n        Value = \"\u003cwebhook-url\u003e\",\n        Name = \"Webhook\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewNotification(ctx, \"webhook_recipient\", \u0026cloudamqp.NotificationArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tType:       pulumi.String(\"webhook\"),\n\t\t\tValue:      pulumi.String(\"\u003cwebhook-url\u003e\"),\n\t\t\tName:       pulumi.String(\"Webhook\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Notification;\nimport com.pulumi.cloudamqp.NotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var webhookRecipient = new Notification(\"webhookRecipient\", NotificationArgs.builder()\n            .instanceId(instance.id())\n            .type(\"webhook\")\n            .value(\"\u003cwebhook-url\u003e\")\n            .name(\"Webhook\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  webhookRecipient:\n    type: cloudamqp:Notification\n    name: webhook_recipient\n    properties:\n      instanceId: ${instance.id}\n      type: webhook\n      value: \u003cwebhook-url\u003e\n      name: Webhook\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Notification Type reference\n\nValid options for notification type.\n\n* email\n* opsgenie\n* opsgenie-eu\n* pagerduty\n* signl4\n* slack\n* teams\n* victorops\n* webhook\n\n## Options parameter\n\n| Type      | Options  | Description | Note |\n|---|---|---|---|\n| Victorops | rk       | Routing key to route alarm notification | - |\n| PagerDuty | dedupkey | Default the dedup key for PagerDuty is generated depending on what alarm has triggered, but here you can set what `dedup` key to use so even if the same alarm is triggered for different resources you only get one notification. Leave blank to use the generated dedup key. | If multiple alarms are triggered using this recipient, since they all share `dedup` key only the first alarm will be shown in PagerDuty |\n\n## Dependency\n\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n## Import\n\n`cloudamqp_notification` can be imported using CloudAMQP internal identifier of a recipient together\n\n(CSV separated) with the instance identifier. To retrieve the identifier of a recipient, use\n\n[CloudAMQP API](https://docs.cloudamqp.com/cloudamqp_api.html#list-recipients).\n\n```sh\n$ pulumi import cloudamqp:index/notification:Notification recipient \u003cid\u003e,\u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the responder\n"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Options argument (e.g. `rk` used for VictorOps routing key).\n"
                },
                "responders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudamqp:index/NotificationResponder:NotificationResponder"
                    },
                    "description": "An array of reponders (only for OpsGenie). Each `responders` block\nconsists of the field documented below.\n\n___\n\nThe `responders` block consists of:\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of responder. [`team`, `user`, `escalation`, `schedule`]\n"
                },
                "value": {
                    "type": "string",
                    "description": "Integration/API key or endpoint to send the notification.\n"
                }
            },
            "required": [
                "instanceId",
                "name",
                "type",
                "value"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the responder\n"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Options argument (e.g. `rk` used for VictorOps routing key).\n"
                },
                "responders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudamqp:index/NotificationResponder:NotificationResponder"
                    },
                    "description": "An array of reponders (only for OpsGenie). Each `responders` block\nconsists of the field documented below.\n\n___\n\nThe `responders` block consists of:\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of responder. [`team`, `user`, `escalation`, `schedule`]\n"
                },
                "value": {
                    "type": "string",
                    "description": "Integration/API key or endpoint to send the notification.\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "type",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Notification resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the responder\n"
                    },
                    "options": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Options argument (e.g. `rk` used for VictorOps routing key).\n"
                    },
                    "responders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudamqp:index/NotificationResponder:NotificationResponder"
                        },
                        "description": "An array of reponders (only for OpsGenie). Each `responders` block\nconsists of the field documented below.\n\n___\n\nThe `responders` block consists of:\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of responder. [`team`, `user`, `escalation`, `schedule`]\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Integration/API key or endpoint to send the notification.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/plugin:Plugin": {
            "description": "\n\n## Import\n\n`cloudamqp_plugin` can be imported using the name argument of the resource together with CloudAMQP instance identifier. The name and identifier are CSV separated, see example below.\n\n```sh\n$ pulumi import cloudamqp:index/plugin:Plugin rabbitmq_management rabbitmq_management,\u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the plugin.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the plugins.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Rabbit MQ plugin.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) for retries when requesting information\nabout plugins. Default set to 10 seconds. *Available from v1.29.0*\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) for retries when requesting\ninformation about plugins. Default set to 1800 seconds. *Available from v1.29.0*\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the plugin.\n"
                }
            },
            "required": [
                "description",
                "enabled",
                "instanceId",
                "name",
                "version"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the plugins.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Rabbit MQ plugin.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) for retries when requesting information\nabout plugins. Default set to 10 seconds. *Available from v1.29.0*\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) for retries when requesting\ninformation about plugins. Default set to 1800 seconds. *Available from v1.29.0*\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Plugin resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the plugin.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable or disable the plugins.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Rabbit MQ plugin.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time (seconds) for retries when requesting information\nabout plugins. Default set to 10 seconds. *Available from v1.29.0*\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time (seconds) for retries when requesting\ninformation about plugins. Default set to 1800 seconds. *Available from v1.29.0*\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the plugin.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/pluginCommunity:PluginCommunity": {
            "description": "\n\n## Import\n\n`cloudamqp_plugin` can be imported using the name argument of the resource together with CloudAMQP\n\ninstance identifier. The name and identifier are CSV separated, see example below.\n\n```sh\n$ pulumi import cloudamqp:index/pluginCommunity:PluginCommunity \u003cresource_name\u003e \u003cplugin_name\u003e,\u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the plugin.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the plugins.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Rabbit MQ community plugin.\n"
                },
                "require": {
                    "type": "string",
                    "description": "Required version of RabbitMQ.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) for retries when requesting information\nabout community plugins. Default set to 10 seconds. *Available from v1.29.0*\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) for retries when requesting\ninformation about community plugins. Default set to 1800 seconds. *Available from v1.29.0*\n"
                }
            },
            "required": [
                "description",
                "enabled",
                "instanceId",
                "name",
                "require"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the plugins.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Rabbit MQ community plugin.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) for retries when requesting information\nabout community plugins. Default set to 10 seconds. *Available from v1.29.0*\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) for retries when requesting\ninformation about community plugins. Default set to 1800 seconds. *Available from v1.29.0*\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PluginCommunity resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the plugin.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable or disable the plugins.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Rabbit MQ community plugin.\n"
                    },
                    "require": {
                        "type": "string",
                        "description": "Required version of RabbitMQ.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time (seconds) for retries when requesting information\nabout community plugins. Default set to 10 seconds. *Available from v1.29.0*\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time (seconds) for retries when requesting\ninformation about community plugins. Default set to 1800 seconds. *Available from v1.29.0*\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/privatelinkAws:PrivatelinkAws": {
            "description": "Enable PrivateLink for a CloudAMQP instance hosted in AWS. If no existing VPC available when enable\nPrivateLink, a new VPC will be created with subnet `10.52.72.0/24`.\n\n\u003e **Note:** Enabling PrivateLink will automatically add firewall rules for the peered subnet.\n\u003cdetails\u003e\n \u003csummary\u003e\n    \u003ci\u003eDefault PrivateLink firewall rule\u003c/i\u003e\n  \u003c/summary\u003e\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCloudAMQP instance without existing VPC\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [],\n});\nconst privatelink = new cloudamqp.PrivatelinkAws(\"privatelink\", {\n    instanceId: instance.id,\n    allowedPrincipals: [\"arn:aws:iam::aws-account-id:user/user-name\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[])\nprivatelink = cloudamqp.PrivatelinkAws(\"privatelink\",\n    instance_id=instance.id,\n    allowed_principals=[\"arn:aws:iam::aws-account-id:user/user-name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[] {},\n    });\n\n    var privatelink = new CloudAmqp.PrivatelinkAws(\"privatelink\", new()\n    {\n        InstanceId = instance.Id,\n        AllowedPrincipals = new[]\n        {\n            \"arn:aws:iam::aws-account-id:user/user-name\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"Instance 01\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewPrivatelinkAws(ctx, \"privatelink\", \u0026cloudamqp.PrivatelinkAwsArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tAllowedPrincipals: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"arn:aws:iam::aws-account-id:user/user-name\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.PrivatelinkAws;\nimport com.pulumi.cloudamqp.PrivatelinkAwsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags()\n            .build());\n\n        var privatelink = new PrivatelinkAws(\"privatelink\", PrivatelinkAwsArgs.builder()\n            .instanceId(instance.id())\n            .allowedPrincipals(\"arn:aws:iam::aws-account-id:user/user-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags: []\n  privatelink:\n    type: cloudamqp:PrivatelinkAws\n    properties:\n      instanceId: ${instance.id}\n      allowedPrincipals:\n        - arn:aws:iam::aws-account-id:user/user-name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCloudAMQP instance in an existing VPC\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"Standalone VPC\",\n    region: \"amazon-web-services::us-west-1\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\nconst privatelink = new cloudamqp.PrivatelinkAws(\"privatelink\", {\n    instanceId: instance.id,\n    allowedPrincipals: [\"arn:aws:iam::aws-account-id:user/user-name\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"Standalone VPC\",\n    region=\"amazon-web-services::us-west-1\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\nprivatelink = cloudamqp.PrivatelinkAws(\"privatelink\",\n    instance_id=instance.id,\n    allowed_principals=[\"arn:aws:iam::aws-account-id:user/user-name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"Standalone VPC\",\n        Region = \"amazon-web-services::us-west-1\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[] {},\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    var privatelink = new CloudAmqp.PrivatelinkAws(\"privatelink\", new()\n    {\n        InstanceId = instance.Id,\n        AllowedPrincipals = new[]\n        {\n            \"arn:aws:iam::aws-account-id:user/user-name\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"Standalone VPC\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:              pulumi.String(\"Instance 01\"),\n\t\t\tPlan:              pulumi.String(\"bunny-1\"),\n\t\t\tRegion:            pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags:              pulumi.StringArray{},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewPrivatelinkAws(ctx, \"privatelink\", \u0026cloudamqp.PrivatelinkAwsArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tAllowedPrincipals: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"arn:aws:iam::aws-account-id:user/user-name\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.PrivatelinkAws;\nimport com.pulumi.cloudamqp.PrivatelinkAwsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"Standalone VPC\")\n            .region(\"amazon-web-services::us-west-1\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags()\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        var privatelink = new PrivatelinkAws(\"privatelink\", PrivatelinkAwsArgs.builder()\n            .instanceId(instance.id())\n            .allowedPrincipals(\"arn:aws:iam::aws-account-id:user/user-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: Standalone VPC\n      region: amazon-web-services::us-west-1\n      subnet: 10.56.72.0/24\n      tags: []\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags: []\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n  privatelink:\n    type: cloudamqp:PrivatelinkAws\n    properties:\n      instanceId: ${instance.id}\n      allowedPrincipals:\n        - arn:aws:iam::aws-account-id:user/user-name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\n### With Additional Firewall Rules\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCloudAMQP instance in an existing VPC with managed firewall rules\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"Standalone VPC\",\n    region: \"amazon-web-services::us-west-1\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\nconst privatelink = new cloudamqp.PrivatelinkAws(\"privatelink\", {\n    instanceId: instance.id,\n    allowedPrincipals: [\"arn:aws:iam::aws-account-id:user/user-name\"],\n});\nconst firewallSettings = new cloudamqp.SecurityFirewall(\"firewall_settings\", {\n    instanceId: instance.id,\n    rules: [\n        {\n            description: \"Custom PrivateLink setup\",\n            ip: vpc.subnet,\n            ports: [],\n            services: [\n                \"AMQP\",\n                \"AMQPS\",\n                \"HTTPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n        },\n        {\n            description: \"MGMT interface\",\n            ip: \"0.0.0.0/0\",\n            ports: [],\n            services: [\"HTTPS\"],\n        },\n    ],\n}, {\n    dependsOn: [privatelink],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"Standalone VPC\",\n    region=\"amazon-web-services::us-west-1\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\nprivatelink = cloudamqp.PrivatelinkAws(\"privatelink\",\n    instance_id=instance.id,\n    allowed_principals=[\"arn:aws:iam::aws-account-id:user/user-name\"])\nfirewall_settings = cloudamqp.SecurityFirewall(\"firewall_settings\",\n    instance_id=instance.id,\n    rules=[\n        {\n            \"description\": \"Custom PrivateLink setup\",\n            \"ip\": vpc.subnet,\n            \"ports\": [],\n            \"services\": [\n                \"AMQP\",\n                \"AMQPS\",\n                \"HTTPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n        },\n        {\n            \"description\": \"MGMT interface\",\n            \"ip\": \"0.0.0.0/0\",\n            \"ports\": [],\n            \"services\": [\"HTTPS\"],\n        },\n    ],\n    opts = pulumi.ResourceOptions(depends_on=[privatelink]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"Standalone VPC\",\n        Region = \"amazon-web-services::us-west-1\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[] {},\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    var privatelink = new CloudAmqp.PrivatelinkAws(\"privatelink\", new()\n    {\n        InstanceId = instance.Id,\n        AllowedPrincipals = new[]\n        {\n            \"arn:aws:iam::aws-account-id:user/user-name\",\n        },\n    });\n\n    var firewallSettings = new CloudAmqp.SecurityFirewall(\"firewall_settings\", new()\n    {\n        InstanceId = instance.Id,\n        Rules = new[]\n        {\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Description = \"Custom PrivateLink setup\",\n                Ip = vpc.Subnet,\n                Ports = new() { },\n                Services = new[]\n                {\n                    \"AMQP\",\n                    \"AMQPS\",\n                    \"HTTPS\",\n                    \"STREAM\",\n                    \"STREAM_SSL\",\n                },\n            },\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Description = \"MGMT interface\",\n                Ip = \"0.0.0.0/0\",\n                Ports = new() { },\n                Services = new[]\n                {\n                    \"HTTPS\",\n                },\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            privatelink,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"Standalone VPC\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:              pulumi.String(\"Instance 01\"),\n\t\t\tPlan:              pulumi.String(\"bunny-1\"),\n\t\t\tRegion:            pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags:              pulumi.StringArray{},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tprivatelink, err := cloudamqp.NewPrivatelinkAws(ctx, \"privatelink\", \u0026cloudamqp.PrivatelinkAwsArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tAllowedPrincipals: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"arn:aws:iam::aws-account-id:user/user-name\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewSecurityFirewall(ctx, \"firewall_settings\", \u0026cloudamqp.SecurityFirewallArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tRules: cloudamqp.SecurityFirewallRuleArray{\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tDescription: pulumi.String(\"Custom PrivateLink setup\"),\n\t\t\t\t\tIp:          vpc.Subnet,\n\t\t\t\t\tPorts:       pulumi.IntArray{},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"AMQP\"),\n\t\t\t\t\t\tpulumi.String(\"AMQPS\"),\n\t\t\t\t\t\tpulumi.String(\"HTTPS\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM_SSL\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tDescription: pulumi.String(\"MGMT interface\"),\n\t\t\t\t\tIp:          pulumi.String(\"0.0.0.0/0\"),\n\t\t\t\t\tPorts:       pulumi.IntArray{},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"HTTPS\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tprivatelink,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.PrivatelinkAws;\nimport com.pulumi.cloudamqp.PrivatelinkAwsArgs;\nimport com.pulumi.cloudamqp.SecurityFirewall;\nimport com.pulumi.cloudamqp.SecurityFirewallArgs;\nimport com.pulumi.cloudamqp.inputs.SecurityFirewallRuleArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"Standalone VPC\")\n            .region(\"amazon-web-services::us-west-1\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags()\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        var privatelink = new PrivatelinkAws(\"privatelink\", PrivatelinkAwsArgs.builder()\n            .instanceId(instance.id())\n            .allowedPrincipals(\"arn:aws:iam::aws-account-id:user/user-name\")\n            .build());\n\n        var firewallSettings = new SecurityFirewall(\"firewallSettings\", SecurityFirewallArgs.builder()\n            .instanceId(instance.id())\n            .rules(            \n                SecurityFirewallRuleArgs.builder()\n                    .description(\"Custom PrivateLink setup\")\n                    .ip(vpc.subnet())\n                    .ports()\n                    .services(                    \n                        \"AMQP\",\n                        \"AMQPS\",\n                        \"HTTPS\",\n                        \"STREAM\",\n                        \"STREAM_SSL\")\n                    .build(),\n                SecurityFirewallRuleArgs.builder()\n                    .description(\"MGMT interface\")\n                    .ip(\"0.0.0.0/0\")\n                    .ports()\n                    .services(\"HTTPS\")\n                    .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(privatelink)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: Standalone VPC\n      region: amazon-web-services::us-west-1\n      subnet: 10.56.72.0/24\n      tags: []\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags: []\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n  privatelink:\n    type: cloudamqp:PrivatelinkAws\n    properties:\n      instanceId: ${instance.id}\n      allowedPrincipals:\n        - arn:aws:iam::aws-account-id:user/user-name\n  firewallSettings:\n    type: cloudamqp:SecurityFirewall\n    name: firewall_settings\n    properties:\n      instanceId: ${instance.id}\n      rules:\n        - description: Custom PrivateLink setup\n          ip: ${vpc.subnet}\n          ports: []\n          services:\n            - AMQP\n            - AMQPS\n            - HTTPS\n            - STREAM\n            - STREAM_SSL\n        - description: MGMT interface\n          ip: 0.0.0.0/0\n          ports: []\n          services:\n            - HTTPS\n    options:\n      dependsOn:\n        - ${privatelink}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Depedency\n\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n## Create PrivateLink with additional firewall rules\n\nTo create a PrivateLink configuration with additional firewall rules, it's required to chain the cloudamqp.SecurityFirewall\nresource to avoid parallel conflicting resource calls. You can do this by making the firewall\nresource depend on the PrivateLink resource, `cloudamqp_privatelink_aws.privatelink`.\n\nFurthermore, since all firewall rules are overwritten, the otherwise automatically added rules for\nthe PrivateLink also needs to be added.\n\n## Import\n\n`cloudamqp_privatelink_aws` can be imported using CloudAMQP internal identifier.\n\n```sh\n$ pulumi import cloudamqp:index/privatelinkAws:PrivatelinkAws privatelink \u003cid\u003e`\n```\n\nThe resource uses the same identifier as the CloudAMQP instance. To retrieve the identifier for an instance, either use [CloudAMQP customer API](https://docs.cloudamqp.com/#list-instances) or use the data source [`cloudamqp_account`](./data-sources/account.md).\n\n",
            "properties": {
                "activeZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Covering availability zones used when creating an Endpoint from other VPC.\n"
                },
                "allowedPrincipals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed principals to access the endpoint service.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the PrivateLink used when creating the endpoint from other VPC.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) when enable PrivateLink.\nDefault set to 10 seconds. *Available from v1.29.0*\n"
                },
                "status": {
                    "type": "string",
                    "description": "PrivateLink status [enable, pending, disable]\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) when enable PrivateLink.\nDefault set to 1800 seconds. *Available from v1.29.0*\n\nAllowed principals format: \u003cbr\u003e\n`arn:aws:iam::aws-account-id:root` \u003cbr\u003e\n`arn:aws:iam::aws-account-id:user/user-name` \u003cbr\u003e\n`arn:aws:iam::aws-account-id:role/role-name`\n"
                }
            },
            "required": [
                "activeZones",
                "allowedPrincipals",
                "instanceId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "allowedPrincipals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed principals to access the endpoint service.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier.\n",
                    "willReplaceOnChanges": true
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) when enable PrivateLink.\nDefault set to 10 seconds. *Available from v1.29.0*\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) when enable PrivateLink.\nDefault set to 1800 seconds. *Available from v1.29.0*\n\nAllowed principals format: \u003cbr\u003e\n`arn:aws:iam::aws-account-id:root` \u003cbr\u003e\n`arn:aws:iam::aws-account-id:user/user-name` \u003cbr\u003e\n`arn:aws:iam::aws-account-id:role/role-name`\n"
                }
            },
            "requiredInputs": [
                "allowedPrincipals",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivatelinkAws resources.\n",
                "properties": {
                    "activeZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Covering availability zones used when creating an Endpoint from other VPC.\n"
                    },
                    "allowedPrincipals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Allowed principals to access the endpoint service.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the PrivateLink used when creating the endpoint from other VPC.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time (seconds) when enable PrivateLink.\nDefault set to 10 seconds. *Available from v1.29.0*\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "PrivateLink status [enable, pending, disable]\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time (seconds) when enable PrivateLink.\nDefault set to 1800 seconds. *Available from v1.29.0*\n\nAllowed principals format: \u003cbr\u003e\n`arn:aws:iam::aws-account-id:root` \u003cbr\u003e\n`arn:aws:iam::aws-account-id:user/user-name` \u003cbr\u003e\n`arn:aws:iam::aws-account-id:role/role-name`\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/privatelinkAzure:PrivatelinkAzure": {
            "description": "Enable PrivateLink for a CloudAMQP instance hosted in Azure. If no existing VPC available when\nenable PrivateLink, a new VPC will be created with subnet `10.52.72.0/24`.\n\n\u003e **Note:** Enabling PrivateLink will automatically add firewall rules for the peered subnet.\n\n\u003cdetails\u003e\n \u003csummary\u003e\n    \u003ci\u003eDefault PrivateLink firewall rule\u003c/i\u003e\n  \u003c/summary\u003e\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCloudAMQP instance without existing VPC\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"azure-arm::westus\",\n    tags: [],\n});\nconst privatelink = new cloudamqp.PrivatelinkAzure(\"privatelink\", {\n    instanceId: instance.id,\n    approvedSubscriptions: [\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"azure-arm::westus\",\n    tags=[])\nprivatelink = cloudamqp.PrivatelinkAzure(\"privatelink\",\n    instance_id=instance.id,\n    approved_subscriptions=[\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"azure-arm::westus\",\n        Tags = new[] {},\n    });\n\n    var privatelink = new CloudAmqp.PrivatelinkAzure(\"privatelink\", new()\n    {\n        InstanceId = instance.Id,\n        ApprovedSubscriptions = new[]\n        {\n            \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"Instance 01\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"azure-arm::westus\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewPrivatelinkAzure(ctx, \"privatelink\", \u0026cloudamqp.PrivatelinkAzureArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tApprovedSubscriptions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.PrivatelinkAzure;\nimport com.pulumi.cloudamqp.PrivatelinkAzureArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"azure-arm::westus\")\n            .tags()\n            .build());\n\n        var privatelink = new PrivatelinkAzure(\"privatelink\", PrivatelinkAzureArgs.builder()\n            .instanceId(instance.id())\n            .approvedSubscriptions(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: azure-arm::westus\n      tags: []\n  privatelink:\n    type: cloudamqp:PrivatelinkAzure\n    properties:\n      instanceId: ${instance.id}\n      approvedSubscriptions:\n        - XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCloudAMQP instance in an existing VPC\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"Standalone VPC\",\n    region: \"azure-arm::westus\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"azure-arm::westus\",\n    tags: [],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\nconst privatelink = new cloudamqp.PrivatelinkAzure(\"privatelink\", {\n    instanceId: instance.id,\n    approvedSubscriptions: [\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"Standalone VPC\",\n    region=\"azure-arm::westus\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"azure-arm::westus\",\n    tags=[],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\nprivatelink = cloudamqp.PrivatelinkAzure(\"privatelink\",\n    instance_id=instance.id,\n    approved_subscriptions=[\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"Standalone VPC\",\n        Region = \"azure-arm::westus\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"azure-arm::westus\",\n        Tags = new[] {},\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    var privatelink = new CloudAmqp.PrivatelinkAzure(\"privatelink\", new()\n    {\n        InstanceId = instance.Id,\n        ApprovedSubscriptions = new[]\n        {\n            \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"Standalone VPC\"),\n\t\t\tRegion: pulumi.String(\"azure-arm::westus\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:              pulumi.String(\"Instance 01\"),\n\t\t\tPlan:              pulumi.String(\"bunny-1\"),\n\t\t\tRegion:            pulumi.String(\"azure-arm::westus\"),\n\t\t\tTags:              pulumi.StringArray{},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewPrivatelinkAzure(ctx, \"privatelink\", \u0026cloudamqp.PrivatelinkAzureArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tApprovedSubscriptions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.PrivatelinkAzure;\nimport com.pulumi.cloudamqp.PrivatelinkAzureArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"Standalone VPC\")\n            .region(\"azure-arm::westus\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"azure-arm::westus\")\n            .tags()\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        var privatelink = new PrivatelinkAzure(\"privatelink\", PrivatelinkAzureArgs.builder()\n            .instanceId(instance.id())\n            .approvedSubscriptions(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: Standalone VPC\n      region: azure-arm::westus\n      subnet: 10.56.72.0/24\n      tags: []\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: azure-arm::westus\n      tags: []\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n  privatelink:\n    type: cloudamqp:PrivatelinkAzure\n    properties:\n      instanceId: ${instance.id}\n      approvedSubscriptions:\n        - XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\n### With Additional Firewall Rules\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCloudAMQP instance in an existing VPC with managed firewall rules\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"Standalone VPC\",\n    region: \"azure-arm::westus\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"azure-arm::westus\",\n    tags: [],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\nconst privatelink = new cloudamqp.PrivatelinkAzure(\"privatelink\", {\n    instanceId: instance.id,\n    approvedSubscriptions: [\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"],\n});\nconst firewallSettings = new cloudamqp.SecurityFirewall(\"firewall_settings\", {\n    instanceId: instance.id,\n    rules: [\n        {\n            description: \"Custom PrivateLink setup\",\n            ip: vpc.subnet,\n            ports: [],\n            services: [\n                \"AMQP\",\n                \"AMQPS\",\n                \"HTTPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n        },\n        {\n            description: \"MGMT interface\",\n            ip: \"0.0.0.0/0\",\n            ports: [],\n            services: [\"HTTPS\"],\n        },\n    ],\n}, {\n    dependsOn: [privatelink],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"Standalone VPC\",\n    region=\"azure-arm::westus\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"azure-arm::westus\",\n    tags=[],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\nprivatelink = cloudamqp.PrivatelinkAzure(\"privatelink\",\n    instance_id=instance.id,\n    approved_subscriptions=[\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"])\nfirewall_settings = cloudamqp.SecurityFirewall(\"firewall_settings\",\n    instance_id=instance.id,\n    rules=[\n        {\n            \"description\": \"Custom PrivateLink setup\",\n            \"ip\": vpc.subnet,\n            \"ports\": [],\n            \"services\": [\n                \"AMQP\",\n                \"AMQPS\",\n                \"HTTPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n        },\n        {\n            \"description\": \"MGMT interface\",\n            \"ip\": \"0.0.0.0/0\",\n            \"ports\": [],\n            \"services\": [\"HTTPS\"],\n        },\n    ],\n    opts = pulumi.ResourceOptions(depends_on=[privatelink]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"Standalone VPC\",\n        Region = \"azure-arm::westus\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"azure-arm::westus\",\n        Tags = new[] {},\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    var privatelink = new CloudAmqp.PrivatelinkAzure(\"privatelink\", new()\n    {\n        InstanceId = instance.Id,\n        ApprovedSubscriptions = new[]\n        {\n            \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n    });\n\n    var firewallSettings = new CloudAmqp.SecurityFirewall(\"firewall_settings\", new()\n    {\n        InstanceId = instance.Id,\n        Rules = new[]\n        {\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Description = \"Custom PrivateLink setup\",\n                Ip = vpc.Subnet,\n                Ports = new() { },\n                Services = new[]\n                {\n                    \"AMQP\",\n                    \"AMQPS\",\n                    \"HTTPS\",\n                    \"STREAM\",\n                    \"STREAM_SSL\",\n                },\n            },\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Description = \"MGMT interface\",\n                Ip = \"0.0.0.0/0\",\n                Ports = new() { },\n                Services = new[]\n                {\n                    \"HTTPS\",\n                },\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            privatelink,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"Standalone VPC\"),\n\t\t\tRegion: pulumi.String(\"azure-arm::westus\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:              pulumi.String(\"Instance 01\"),\n\t\t\tPlan:              pulumi.String(\"bunny-1\"),\n\t\t\tRegion:            pulumi.String(\"azure-arm::westus\"),\n\t\t\tTags:              pulumi.StringArray{},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tprivatelink, err := cloudamqp.NewPrivatelinkAzure(ctx, \"privatelink\", \u0026cloudamqp.PrivatelinkAzureArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tApprovedSubscriptions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewSecurityFirewall(ctx, \"firewall_settings\", \u0026cloudamqp.SecurityFirewallArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tRules: cloudamqp.SecurityFirewallRuleArray{\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tDescription: pulumi.String(\"Custom PrivateLink setup\"),\n\t\t\t\t\tIp:          vpc.Subnet,\n\t\t\t\t\tPorts:       pulumi.IntArray{},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"AMQP\"),\n\t\t\t\t\t\tpulumi.String(\"AMQPS\"),\n\t\t\t\t\t\tpulumi.String(\"HTTPS\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM_SSL\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tDescription: pulumi.String(\"MGMT interface\"),\n\t\t\t\t\tIp:          pulumi.String(\"0.0.0.0/0\"),\n\t\t\t\t\tPorts:       pulumi.IntArray{},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"HTTPS\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tprivatelink,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.PrivatelinkAzure;\nimport com.pulumi.cloudamqp.PrivatelinkAzureArgs;\nimport com.pulumi.cloudamqp.SecurityFirewall;\nimport com.pulumi.cloudamqp.SecurityFirewallArgs;\nimport com.pulumi.cloudamqp.inputs.SecurityFirewallRuleArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"Standalone VPC\")\n            .region(\"azure-arm::westus\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"azure-arm::westus\")\n            .tags()\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        var privatelink = new PrivatelinkAzure(\"privatelink\", PrivatelinkAzureArgs.builder()\n            .instanceId(instance.id())\n            .approvedSubscriptions(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n            .build());\n\n        var firewallSettings = new SecurityFirewall(\"firewallSettings\", SecurityFirewallArgs.builder()\n            .instanceId(instance.id())\n            .rules(            \n                SecurityFirewallRuleArgs.builder()\n                    .description(\"Custom PrivateLink setup\")\n                    .ip(vpc.subnet())\n                    .ports()\n                    .services(                    \n                        \"AMQP\",\n                        \"AMQPS\",\n                        \"HTTPS\",\n                        \"STREAM\",\n                        \"STREAM_SSL\")\n                    .build(),\n                SecurityFirewallRuleArgs.builder()\n                    .description(\"MGMT interface\")\n                    .ip(\"0.0.0.0/0\")\n                    .ports()\n                    .services(\"HTTPS\")\n                    .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(privatelink)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: Standalone VPC\n      region: azure-arm::westus\n      subnet: 10.56.72.0/24\n      tags: []\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: azure-arm::westus\n      tags: []\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n  privatelink:\n    type: cloudamqp:PrivatelinkAzure\n    properties:\n      instanceId: ${instance.id}\n      approvedSubscriptions:\n        - XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n  firewallSettings:\n    type: cloudamqp:SecurityFirewall\n    name: firewall_settings\n    properties:\n      instanceId: ${instance.id}\n      rules:\n        - description: Custom PrivateLink setup\n          ip: ${vpc.subnet}\n          ports: []\n          services:\n            - AMQP\n            - AMQPS\n            - HTTPS\n            - STREAM\n            - STREAM_SSL\n        - description: MGMT interface\n          ip: 0.0.0.0/0\n          ports: []\n          services:\n            - HTTPS\n    options:\n      dependsOn:\n        - ${privatelink}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Depedency\n\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n## Create PrivateLink with additional firewall rules\n\nTo create a PrivateLink configuration with additional firewall rules, it's required to chain the cloudamqp.SecurityFirewall\nresource to avoid parallel conflicting resource calls. You can do this by making the firewall\nresource depend on the PrivateLink resource, `cloudamqp_privatelink_azure.privatelink`.\n\nFurthermore, since all firewall rules are overwritten, the otherwise automatically added rules for\nthe PrivateLink also needs to be added.\n\n## Import\n\n`cloudamqp_privatelink_aws` can be imported using CloudAMQP internal identifier.\n\n```sh\n$ pulumi import cloudamqp:index/privatelinkAzure:PrivatelinkAzure privatelink \u003cid\u003e`\n```\n\nThe resource uses the same identifier as the CloudAMQP instance. To retrieve the identifier for an instance, either use [CloudAMQP customer API](https://docs.cloudamqp.com/#list-instances) or use the data source [`cloudamqp_account`](./data-sources/account.md).\n\n",
            "properties": {
                "approvedSubscriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Approved subscriptions to access the endpoint service.\nSee format below.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier.\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "Name of the server having the PrivateLink enabled.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name (alias) of the PrivateLink, needed when creating the endpoint.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) when enable PrivateLink.\nDefault set to 10 seconds. *Available from v1.29.0*\n"
                },
                "status": {
                    "type": "string",
                    "description": "PrivateLink status [enable, pending, disable]\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) when enable PrivateLink.\nDefault set to 1800 seconds. *Available from v1.29.0*\n\nApproved subscriptions format (GUID): \u003cbr\u003e\n`XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX`\n"
                }
            },
            "required": [
                "approvedSubscriptions",
                "instanceId",
                "serverName",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "approvedSubscriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Approved subscriptions to access the endpoint service.\nSee format below.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier.\n",
                    "willReplaceOnChanges": true
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) when enable PrivateLink.\nDefault set to 10 seconds. *Available from v1.29.0*\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) when enable PrivateLink.\nDefault set to 1800 seconds. *Available from v1.29.0*\n\nApproved subscriptions format (GUID): \u003cbr\u003e\n`XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX`\n"
                }
            },
            "requiredInputs": [
                "approvedSubscriptions",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivatelinkAzure resources.\n",
                "properties": {
                    "approvedSubscriptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Approved subscriptions to access the endpoint service.\nSee format below.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n",
                        "willReplaceOnChanges": true
                    },
                    "serverName": {
                        "type": "string",
                        "description": "Name of the server having the PrivateLink enabled.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name (alias) of the PrivateLink, needed when creating the endpoint.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time (seconds) when enable PrivateLink.\nDefault set to 10 seconds. *Available from v1.29.0*\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "PrivateLink status [enable, pending, disable]\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time (seconds) when enable PrivateLink.\nDefault set to 1800 seconds. *Available from v1.29.0*\n\nApproved subscriptions format (GUID): \u003cbr\u003e\n`XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX`\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/rabbitConfiguration:RabbitConfiguration": {
            "description": "\n\n## Import\n\n`cloudamqp_rabbitmq_configuration` can be imported using the CloudAMQP instance identifier.\n\n```sh\n$ pulumi import cloudamqp:index/rabbitConfiguration:RabbitConfiguration config \u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "channelMax": {
                    "type": "integer",
                    "description": "Set the maximum permissible number of channels per connection.\n"
                },
                "clusterPartitionHandling": {
                    "type": "string",
                    "description": "Set how the cluster should handle network partition.\n"
                },
                "connectionMax": {
                    "type": "integer",
                    "description": "Set the maximum permissible number of connection.\n"
                },
                "consumerTimeout": {
                    "type": "integer",
                    "description": "A consumer that has recevied a message and does not acknowledge that message within the timeout in milliseconds\n"
                },
                "heartbeat": {
                    "type": "integer",
                    "description": "Set the server AMQP 0-9-1 heartbeat timeout in seconds.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "logExchangeLevel": {
                    "type": "string",
                    "description": "Log level for the logger used for log integrations and the CloudAMQP Console log view.\n\n*Note: Requires a restart of RabbitMQ to be applied.*\n"
                },
                "maxMessageSize": {
                    "type": "integer",
                    "description": "The largest allowed message payload size in bytes.\n"
                },
                "queueIndexEmbedMsgsBelow": {
                    "type": "integer",
                    "description": "Size in bytes below which to embed messages in the queue index. 0 will turn off payload embedding in the queue index.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time in seconds between retries for RabbitMQ configuration. Default set to 60 seconds.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time in seconds for RabbitMQ configuration. Default set to 3600 seconds.\n"
                },
                "vmMemoryHighWatermark": {
                    "type": "number",
                    "description": "When the server will enter memory based flow-control as relative to the maximum available memory.\n"
                }
            },
            "required": [
                "channelMax",
                "clusterPartitionHandling",
                "connectionMax",
                "consumerTimeout",
                "heartbeat",
                "instanceId",
                "logExchangeLevel",
                "maxMessageSize",
                "queueIndexEmbedMsgsBelow",
                "vmMemoryHighWatermark"
            ],
            "inputProperties": {
                "channelMax": {
                    "type": "integer",
                    "description": "Set the maximum permissible number of channels per connection.\n"
                },
                "clusterPartitionHandling": {
                    "type": "string",
                    "description": "Set how the cluster should handle network partition.\n"
                },
                "connectionMax": {
                    "type": "integer",
                    "description": "Set the maximum permissible number of connection.\n"
                },
                "consumerTimeout": {
                    "type": "integer",
                    "description": "A consumer that has recevied a message and does not acknowledge that message within the timeout in milliseconds\n"
                },
                "heartbeat": {
                    "type": "integer",
                    "description": "Set the server AMQP 0-9-1 heartbeat timeout in seconds.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "logExchangeLevel": {
                    "type": "string",
                    "description": "Log level for the logger used for log integrations and the CloudAMQP Console log view.\n\n*Note: Requires a restart of RabbitMQ to be applied.*\n"
                },
                "maxMessageSize": {
                    "type": "integer",
                    "description": "The largest allowed message payload size in bytes.\n"
                },
                "queueIndexEmbedMsgsBelow": {
                    "type": "integer",
                    "description": "Size in bytes below which to embed messages in the queue index. 0 will turn off payload embedding in the queue index.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time in seconds between retries for RabbitMQ configuration. Default set to 60 seconds.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time in seconds for RabbitMQ configuration. Default set to 3600 seconds.\n"
                },
                "vmMemoryHighWatermark": {
                    "type": "number",
                    "description": "When the server will enter memory based flow-control as relative to the maximum available memory.\n"
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RabbitConfiguration resources.\n",
                "properties": {
                    "channelMax": {
                        "type": "integer",
                        "description": "Set the maximum permissible number of channels per connection.\n"
                    },
                    "clusterPartitionHandling": {
                        "type": "string",
                        "description": "Set how the cluster should handle network partition.\n"
                    },
                    "connectionMax": {
                        "type": "integer",
                        "description": "Set the maximum permissible number of connection.\n"
                    },
                    "consumerTimeout": {
                        "type": "integer",
                        "description": "A consumer that has recevied a message and does not acknowledge that message within the timeout in milliseconds\n"
                    },
                    "heartbeat": {
                        "type": "integer",
                        "description": "Set the server AMQP 0-9-1 heartbeat timeout in seconds.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "logExchangeLevel": {
                        "type": "string",
                        "description": "Log level for the logger used for log integrations and the CloudAMQP Console log view.\n\n*Note: Requires a restart of RabbitMQ to be applied.*\n"
                    },
                    "maxMessageSize": {
                        "type": "integer",
                        "description": "The largest allowed message payload size in bytes.\n"
                    },
                    "queueIndexEmbedMsgsBelow": {
                        "type": "integer",
                        "description": "Size in bytes below which to embed messages in the queue index. 0 will turn off payload embedding in the queue index.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time in seconds between retries for RabbitMQ configuration. Default set to 60 seconds.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time in seconds for RabbitMQ configuration. Default set to 3600 seconds.\n"
                    },
                    "vmMemoryHighWatermark": {
                        "type": "number",
                        "description": "When the server will enter memory based flow-control as relative to the maximum available memory.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/securityFirewall:SecurityFirewall": {
            "description": "\n\n## Import\n\n`cloudamqp_security_firewall` can be imported using CloudAMQP instance identifier.\n\n```sh\n$ pulumi import cloudamqp:index/securityFirewall:SecurityFirewall firewall \u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudamqp:index/SecurityFirewallRule:SecurityFirewallRule"
                    },
                    "description": "An array of rules, minimum of 1 needs to be configured. Each `rules` block consists of the field documented below.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time in seconds between retries for firewall configuration. Default set to 30 seconds.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time in seconds for firewall configuration. Default set to 1800 seconds.\n\n___\n\nThe `rules` block consists of:\n"
                }
            },
            "required": [
                "instanceId",
                "rules"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudamqp:index/SecurityFirewallRule:SecurityFirewallRule"
                    },
                    "description": "An array of rules, minimum of 1 needs to be configured. Each `rules` block consists of the field documented below.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time in seconds between retries for firewall configuration. Default set to 30 seconds.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time in seconds for firewall configuration. Default set to 1800 seconds.\n\n___\n\nThe `rules` block consists of:\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "rules"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityFirewall resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudamqp:index/SecurityFirewallRule:SecurityFirewallRule"
                        },
                        "description": "An array of rules, minimum of 1 needs to be configured. Each `rules` block consists of the field documented below.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time in seconds between retries for firewall configuration. Default set to 30 seconds.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time in seconds for firewall configuration. Default set to 1800 seconds.\n\n___\n\nThe `rules` block consists of:\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/upgradeLavinmq:UpgradeLavinmq": {
            "description": "This resource allows you to upgrade LavinMQ version. \n\nSee below example usage.\n\nOnly available for dedicated subscription plans running ***LavinMQ***.\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eUpgrade LavinMQ, specify which version to upgrade to, from v1.32.0\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\nSpecify the version to upgrade to. List available upgradable versions, use [CloudAMQP API](https://docs.cloudamqp.com/cloudamqp_api.html#get-available-versions).\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"lavinmq-version-upgrade-test\",\n    plan: \"lynx-1\",\n    region: \"amazon-web-services::us-west-1\",\n});\nconst upgrade = new cloudamqp.UpgradeLavinmq(\"upgrade\", {\n    instanceId: instance.id,\n    newVersion: \"1.3.1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"lavinmq-version-upgrade-test\",\n    plan=\"lynx-1\",\n    region=\"amazon-web-services::us-west-1\")\nupgrade = cloudamqp.UpgradeLavinmq(\"upgrade\",\n    instance_id=instance.id,\n    new_version=\"1.3.1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"lavinmq-version-upgrade-test\",\n        Plan = \"lynx-1\",\n        Region = \"amazon-web-services::us-west-1\",\n    });\n\n    var upgrade = new CloudAmqp.UpgradeLavinmq(\"upgrade\", new()\n    {\n        InstanceId = instance.Id,\n        NewVersion = \"1.3.1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"lavinmq-version-upgrade-test\"),\n\t\t\tPlan:   pulumi.String(\"lynx-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewUpgradeLavinmq(ctx, \"upgrade\", \u0026cloudamqp.UpgradeLavinmqArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tNewVersion: pulumi.String(\"1.3.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.UpgradeLavinmq;\nimport com.pulumi.cloudamqp.UpgradeLavinmqArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"lavinmq-version-upgrade-test\")\n            .plan(\"lynx-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .build());\n\n        var upgrade = new UpgradeLavinmq(\"upgrade\", UpgradeLavinmqArgs.builder()\n            .instanceId(instance.id())\n            .newVersion(\"1.3.1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: lavinmq-version-upgrade-test\n      plan: lynx-1\n      region: amazon-web-services::us-west-1\n  upgrade:\n    type: cloudamqp:UpgradeLavinmq\n    properties:\n      instanceId: ${instance.id}\n      newVersion: 1.3.1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\n## Important Upgrade Information\n\n\u003e - All single node upgrades will require some downtime since LavinMQ needs a restart.\n\u003e - Auto delete queues (queues that are marked AD) will be deleted during the update.\n\n## Import\n\nNot possible to import this resource.\n\n",
            "properties": {
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier\n"
                },
                "newVersion": {
                    "type": "string",
                    "description": "The new version to upgrade to\n"
                }
            },
            "required": [
                "instanceId"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier\n"
                },
                "newVersion": {
                    "type": "string",
                    "description": "The new version to upgrade to\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UpgradeLavinmq resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier\n"
                    },
                    "newVersion": {
                        "type": "string",
                        "description": "The new version to upgrade to\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/upgradeRabbitmq:UpgradeRabbitmq": {
            "description": "This resource allows you to upgrade RabbitMQ version. Depending on initial versions of RabbitMQ and Erlang of the CloudAMQP instance, multiple runs may be needed to get to the latest or wanted version. Reason for this is certain supported RabbitMQ version will also automatically upgrade Erlang version.\n\nThere is three different ways to trigger the version upgrade\n\n\u003e - Specify RabbitMQ version to upgrade to\n\u003e - Upgrade to latest RabbitMQ version\n\u003e - Old behaviour to upgrade to latest RabbitMQ version\n\nSee, below example usage for the difference.\n\nOnly available for dedicated subscription plans running ***RabbitMQ***.\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eSpecify version upgrade, from v1.31.0\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\nSpecify the version to upgrade to. List available upgradable versions, use [CloudAMQP API](https://docs.cloudamqp.com/cloudamqp_api.html#get-available-versions).\nAfter the upgrade finished, there can still be newer versions available.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"rabbitmq-version-upgrade-test\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n});\nconst upgrade = new cloudamqp.UpgradeRabbitmq(\"upgrade\", {\n    instanceId: instance.id,\n    newVersion: \"3.13.2\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"rabbitmq-version-upgrade-test\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\")\nupgrade = cloudamqp.UpgradeRabbitmq(\"upgrade\",\n    instance_id=instance.id,\n    new_version=\"3.13.2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"rabbitmq-version-upgrade-test\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n    });\n\n    var upgrade = new CloudAmqp.UpgradeRabbitmq(\"upgrade\", new()\n    {\n        InstanceId = instance.Id,\n        NewVersion = \"3.13.2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"rabbitmq-version-upgrade-test\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewUpgradeRabbitmq(ctx, \"upgrade\", \u0026cloudamqp.UpgradeRabbitmqArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tNewVersion: pulumi.String(\"3.13.2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.UpgradeRabbitmq;\nimport com.pulumi.cloudamqp.UpgradeRabbitmqArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"rabbitmq-version-upgrade-test\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .build());\n\n        var upgrade = new UpgradeRabbitmq(\"upgrade\", UpgradeRabbitmqArgs.builder()\n            .instanceId(instance.id())\n            .newVersion(\"3.13.2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: rabbitmq-version-upgrade-test\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n  upgrade:\n    type: cloudamqp:UpgradeRabbitmq\n    properties:\n      instanceId: ${instance.id}\n      newVersion: 3.13.2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eUpgrade to latest possible version, from v1.31.0\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\nThis will upgrade RabbitMQ to the latest possible version detected by the data source `cloudamqp.getUpgradableVersions`.\nMultiple runs can be needed to upgrade the version even further.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"rabbitmq-version-upgrade-test\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n});\nconst upgradableVersions = instance.id.apply(id =\u003e cloudamqp.getUpgradableVersionsOutput({\n    instanceId: id,\n}));\nconst upgrade = new cloudamqp.UpgradeRabbitmq(\"upgrade\", {\n    instanceId: instance.id,\n    currentVersion: instance.rmqVersion,\n    newVersion: upgradableVersions.apply(upgradableVersions =\u003e upgradableVersions.newRabbitmqVersion),\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"rabbitmq-version-upgrade-test\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\")\nupgradable_versions = instance.id.apply(lambda id: cloudamqp.get_upgradable_versions_output(instance_id=id))\nupgrade = cloudamqp.UpgradeRabbitmq(\"upgrade\",\n    instance_id=instance.id,\n    current_version=instance.rmq_version,\n    new_version=upgradable_versions.new_rabbitmq_version)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"rabbitmq-version-upgrade-test\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n    });\n\n    var upgradableVersions = CloudAmqp.GetUpgradableVersions.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n    var upgrade = new CloudAmqp.UpgradeRabbitmq(\"upgrade\", new()\n    {\n        InstanceId = instance.Id,\n        CurrentVersion = instance.RmqVersion,\n        NewVersion = upgradableVersions.Apply(getUpgradableVersionsResult =\u003e getUpgradableVersionsResult.NewRabbitmqVersion),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"rabbitmq-version-upgrade-test\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tupgradableVersions := instance.ID().ApplyT(func(id string) (cloudamqp.GetUpgradableVersionsResult, error) {\n\t\t\treturn cloudamqp.GetUpgradableVersionsResult(interface{}(cloudamqp.GetUpgradableVersionsOutput(ctx, cloudamqp.GetUpgradableVersionsOutputArgs{\n\t\t\t\tInstanceId: id,\n\t\t\t}, nil))), nil\n\t\t}).(cloudamqp.GetUpgradableVersionsResultOutput)\n\t\t_, err = cloudamqp.NewUpgradeRabbitmq(ctx, \"upgrade\", \u0026cloudamqp.UpgradeRabbitmqArgs{\n\t\t\tInstanceId:     instance.ID(),\n\t\t\tCurrentVersion: instance.RmqVersion,\n\t\t\tNewVersion: pulumi.String(upgradableVersions.ApplyT(func(upgradableVersions cloudamqp.GetUpgradableVersionsResult) (*string, error) {\n\t\t\t\treturn \u0026upgradableVersions.NewRabbitmqVersion, nil\n\t\t\t}).(pulumi.StringPtrOutput)),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;\nimport com.pulumi.cloudamqp.UpgradeRabbitmq;\nimport com.pulumi.cloudamqp.UpgradeRabbitmqArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"rabbitmq-version-upgrade-test\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .build());\n\n        final var upgradableVersions = CloudamqpFunctions.getUpgradableVersions(GetUpgradableVersionsArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n        var upgrade = new UpgradeRabbitmq(\"upgrade\", UpgradeRabbitmqArgs.builder()\n            .instanceId(instance.id())\n            .currentVersion(instance.rmqVersion())\n            .newVersion(upgradableVersions.applyValue(getUpgradableVersionsResult -\u003e getUpgradableVersionsResult).applyValue(upgradableVersions -\u003e upgradableVersions.applyValue(getUpgradableVersionsResult -\u003e getUpgradableVersionsResult.newRabbitmqVersion())))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: rabbitmq-version-upgrade-test\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n  upgrade:\n    type: cloudamqp:UpgradeRabbitmq\n    properties:\n      instanceId: ${instance.id}\n      currentVersion: ${instance.rmqVersion}\n      newVersion: ${upgradableVersions.newRabbitmqVersion}\nvariables:\n  upgradableVersions:\n    fn::invoke:\n      function: cloudamqp:getUpgradableVersions\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eUpgrade to latest possible version, before v1.31.0\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\nOld behaviour of the upgrading the RabbitMQ version. No longer recommended.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Retrieve latest possible upgradable versions for RabbitMQ and Erlang\nconst versions = cloudamqp.getUpgradableVersions({\n    instanceId: instance.id,\n});\n// Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\nconst upgrade = new cloudamqp.UpgradeRabbitmq(\"upgrade\", {instanceId: instance.id});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Retrieve latest possible upgradable versions for RabbitMQ and Erlang\nversions = cloudamqp.get_upgradable_versions(instance_id=instance[\"id\"])\n# Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\nupgrade = cloudamqp.UpgradeRabbitmq(\"upgrade\", instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n    var versions = CloudAmqp.GetUpgradableVersions.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n    // Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\n    var upgrade = new CloudAmqp.UpgradeRabbitmq(\"upgrade\", new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n\t\t_, err := cloudamqp.GetUpgradableVersions(ctx, \u0026cloudamqp.GetUpgradableVersionsArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\n\t\t_, err = cloudamqp.NewUpgradeRabbitmq(ctx, \"upgrade\", \u0026cloudamqp.UpgradeRabbitmqArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;\nimport com.pulumi.cloudamqp.UpgradeRabbitmq;\nimport com.pulumi.cloudamqp.UpgradeRabbitmqArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n        final var versions = CloudamqpFunctions.getUpgradableVersions(GetUpgradableVersionsArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n        // Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\n        var upgrade = new UpgradeRabbitmq(\"upgrade\", UpgradeRabbitmqArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\n  upgrade:\n    type: cloudamqp:UpgradeRabbitmq\n    properties:\n      instanceId: ${instance.id}\nvariables:\n  # Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n  versions:\n    fn::invoke:\n      function: cloudamqp:getUpgradableVersions\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Retrieve latest possible upgradable versions for RabbitMQ and Erlang\nconst versions = cloudamqp.getUpgradableVersions({\n    instanceId: instance.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Retrieve latest possible upgradable versions for RabbitMQ and Erlang\nversions = cloudamqp.get_upgradable_versions(instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n    var versions = CloudAmqp.GetUpgradableVersions.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n\t\t_, err := cloudamqp.GetUpgradableVersions(ctx, \u0026cloudamqp.GetUpgradableVersionsArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n        final var versions = CloudamqpFunctions.getUpgradableVersions(GetUpgradableVersionsArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n  versions:\n    fn::invoke:\n      function: cloudamqp:getUpgradableVersions\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nIf newer version is still available to be upgradable in the data source, re-run again.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Retrieve latest possible upgradable versions for RabbitMQ and Erlang\nconst versions = cloudamqp.getUpgradableVersions({\n    instanceId: instance.id,\n});\n// Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\nconst upgrade = new cloudamqp.UpgradeRabbitmq(\"upgrade\", {instanceId: instance.id});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Retrieve latest possible upgradable versions for RabbitMQ and Erlang\nversions = cloudamqp.get_upgradable_versions(instance_id=instance[\"id\"])\n# Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\nupgrade = cloudamqp.UpgradeRabbitmq(\"upgrade\", instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n    var versions = CloudAmqp.GetUpgradableVersions.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n    // Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\n    var upgrade = new CloudAmqp.UpgradeRabbitmq(\"upgrade\", new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n\t\t_, err := cloudamqp.GetUpgradableVersions(ctx, \u0026cloudamqp.GetUpgradableVersionsArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\n\t\t_, err = cloudamqp.NewUpgradeRabbitmq(ctx, \"upgrade\", \u0026cloudamqp.UpgradeRabbitmqArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;\nimport com.pulumi.cloudamqp.UpgradeRabbitmq;\nimport com.pulumi.cloudamqp.UpgradeRabbitmqArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n        final var versions = CloudamqpFunctions.getUpgradableVersions(GetUpgradableVersionsArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n        // Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\n        var upgrade = new UpgradeRabbitmq(\"upgrade\", UpgradeRabbitmqArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Invoke automatically upgrade to latest possible upgradable versions for RabbitMQ and Erlang\n  upgrade:\n    type: cloudamqp:UpgradeRabbitmq\n    properties:\n      instanceId: ${instance.id}\nvariables:\n  # Retrieve latest possible upgradable versions for RabbitMQ and Erlang\n  versions:\n    fn::invoke:\n      function: cloudamqp:getUpgradableVersions\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Important Upgrade Information\n\n\u003e - All single node upgrades will require some downtime since RabbitMQ needs a restart.\n\u003e - From RabbitMQ version 3.9, rolling upgrades between minor versions (e.g. 3.9 to 3.10), in a multi-node cluster are possible without downtime. This means that one node is upgraded at a time while the other nodes are still running. For versions older than 3.9, patch version upgrades (e.g. 3.8.x to 3.8.y) are possible without downtime in a multi-node cluster, but minor version upgrades will require downtime. \n\u003e - Auto delete queues (queues that are marked AD) will be deleted during the update.\n\u003e - Any custom plugins support has installed on your behalf will be disabled and you need to contact support@cloudamqp.com and ask to have them re-installed.\n\u003e - TLS 1.0 and 1.1 will not be supported after the update.\n\n## Multiple runs\n\nDepending on initial versions of RabbitMQ and Erlang of the CloudAMQP instance, multiple runs may be needed to get to the latest or wanted version.\n\nExample steps needed when starting at RabbitMQ version 3.12.2\n\n|  Version         | Supported upgrading versions              | Min version to upgrade Erlang |\n|------------------|-------------------------------------------|-------------------------------|\n| 3.12.2           | 3.12.4, 3.12.6, 3.12.10, 3.12.12, 3.12.13 | 3.12.13                       |\n| 3.12.13          | 3.13.2                                    | 3.13.2                        |\n| 3.13.2           | -                                         | -                             |\n\n## Import\n\nNot possible to import this resource.\n\n",
            "properties": {
                "currentVersion": {
                    "type": "string",
                    "description": "Helper argument to change upgrade behaviour to latest possible version\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier\n"
                },
                "newVersion": {
                    "type": "string",
                    "description": "The new version to upgrade to\n"
                }
            },
            "required": [
                "instanceId"
            ],
            "inputProperties": {
                "currentVersion": {
                    "type": "string",
                    "description": "Helper argument to change upgrade behaviour to latest possible version\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier\n"
                },
                "newVersion": {
                    "type": "string",
                    "description": "The new version to upgrade to\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UpgradeRabbitmq resources.\n",
                "properties": {
                    "currentVersion": {
                        "type": "string",
                        "description": "Helper argument to change upgrade behaviour to latest possible version\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier\n"
                    },
                    "newVersion": {
                        "type": "string",
                        "description": "The new version to upgrade to\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/vpc:Vpc": {
            "description": "This resource allows you to manage standalone VPC.\n\nNew Cloudamqp instances can be added to the managed VPC. Set the instance *vpc_id* attribute to the managed vpc identifier , see example below, when creating the instance.\n\nOnly available for dedicated subscription plans.\n\nPricing is available at [cloudamqp.com](https://www.cloudamqp.com/plans.html).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Managed VPC resource\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"\u003cVPC name\u003e\",\n    region: \"amazon-web-services::us-east-1\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\n//  New instance, need to be created with a vpc\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"\u003cInstance name\u003e\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-east-1\",\n    nodes: 1,\n    tags: [],\n    rmqVersion: \"3.9.13\",\n    vpcId: vpcCloudamqVpc.id,\n    keepAssociatedVpc: true,\n});\n// Additional VPC information\nconst vpcInfo = cloudamqp.getVpcInfoOutput({\n    vpcId: vpc.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Managed VPC resource\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"\u003cVPC name\u003e\",\n    region=\"amazon-web-services::us-east-1\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\n#  New instance, need to be created with a vpc\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"\u003cInstance name\u003e\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-east-1\",\n    nodes=1,\n    tags=[],\n    rmq_version=\"3.9.13\",\n    vpc_id=vpc_cloudamq_vpc[\"id\"],\n    keep_associated_vpc=True)\n# Additional VPC information\nvpc_info = cloudamqp.get_vpc_info_output(vpc_id=vpc.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Managed VPC resource\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"\u003cVPC name\u003e\",\n        Region = \"amazon-web-services::us-east-1\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    //  New instance, need to be created with a vpc\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"\u003cInstance name\u003e\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-east-1\",\n        Nodes = 1,\n        Tags = new[] {},\n        RmqVersion = \"3.9.13\",\n        VpcId = vpcCloudamqVpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    // Additional VPC information\n    var vpcInfo = CloudAmqp.GetVpcInfo.Invoke(new()\n    {\n        VpcId = vpc.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Managed VPC resource\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"\u003cVPC name\u003e\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-east-1\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// New instance, need to be created with a vpc\n\t\t_, err = cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:              pulumi.String(\"\u003cInstance name\u003e\"),\n\t\t\tPlan:              pulumi.String(\"bunny-1\"),\n\t\t\tRegion:            pulumi.String(\"amazon-web-services::us-east-1\"),\n\t\t\tNodes:             pulumi.Int(1),\n\t\t\tTags:              pulumi.StringArray{},\n\t\t\tRmqVersion:        pulumi.String(\"3.9.13\"),\n\t\t\tVpcId:             pulumi.Any(vpcCloudamqVpc.Id),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Additional VPC information\n\t\t_ = cloudamqp.GetVpcInfoOutput(ctx, cloudamqp.GetVpcInfoOutputArgs{\n\t\t\tVpcId: vpc.ID(),\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Managed VPC resource\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"\u003cVPC name\u003e\")\n            .region(\"amazon-web-services::us-east-1\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        //  New instance, need to be created with a vpc\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"\u003cInstance name\u003e\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-east-1\")\n            .nodes(1)\n            .tags()\n            .rmqVersion(\"3.9.13\")\n            .vpcId(vpcCloudamqVpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        // Additional VPC information\n        final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()\n            .vpcId(vpc.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Managed VPC resource\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: \u003cVPC name\u003e\n      region: amazon-web-services::us-east-1\n      subnet: 10.56.72.0/24\n      tags: []\n  #  New instance, need to be created with a vpc\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: \u003cInstance name\u003e\n      plan: bunny-1\n      region: amazon-web-services::us-east-1\n      nodes: 1\n      tags: []\n      rmqVersion: 3.9.13\n      vpcId: ${vpcCloudamqVpc.id}\n      keepAssociatedVpc: true\nvariables:\n  # Additional VPC information\n  vpcInfo:\n    fn::invoke:\n      function: cloudamqp:getVpcInfo\n      arguments:\n        vpcId: ${vpc.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n`cloudamqp_vpc` can be imported using the CloudAMQP VPC identifier.\n\n```sh\n$ pulumi import cloudamqp:index/vpc:Vpc \u003cresource_name\u003e \u003cvpc_id\u003e`\n```\n\nTo retrieve the identifier for a VPC, either use [CloudAMQP customer API](https://docs.cloudamqp.com/#list-vpcs).\n\nOr use the data source `cloudamqp_account_vpcs` to list all available standalone VPCs for an account.\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the VPC.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The hosted region for the managed standalone VPC\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "The VPC subnet\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tag the VPC with optional tags\n"
                },
                "vpcName": {
                    "type": "string",
                    "description": "VPC name given when hosted at the cloud provider\n"
                }
            },
            "required": [
                "name",
                "region",
                "subnet",
                "vpcName"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the VPC.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The hosted region for the managed standalone VPC\n",
                    "willReplaceOnChanges": true
                },
                "subnet": {
                    "type": "string",
                    "description": "The VPC subnet\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tag the VPC with optional tags\n"
                }
            },
            "requiredInputs": [
                "region",
                "subnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vpc resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the VPC.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The hosted region for the managed standalone VPC\n",
                        "willReplaceOnChanges": true
                    },
                    "subnet": {
                        "type": "string",
                        "description": "The VPC subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tag the VPC with optional tags\n"
                    },
                    "vpcName": {
                        "type": "string",
                        "description": "VPC name given when hosted at the cloud provider\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/vpcConnect:VpcConnect": {
            "description": "This resource is a generic way to handle PrivateLink (AWS and Azure) and Private Service Connect (GCP).\nCommunication between resources can be done just as they were living inside a VPC. CloudAMQP creates an Endpoint\nService to connect the VPC and creating a new network interface to handle the communicate.\n\nIf no existing VPC available when enable VPC connect, a new VPC will be created with subnet `10.52.72.0/24`.\n\nMore information can be found at: [CloudAMQP VPC Connect](https://www.cloudamqp.com/docs/cloudamqp-vpc-connect.html)\n\n\u003e **Note:** Enabling VPC Connect will automatically add a firewall rule.\n\n\u003cdetails\u003e\n \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eDefault PrivateLink firewall rule [AWS, Azure]\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eEnable VPC Connect (PrivateLink) in AWS\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"Standalone VPC\",\n    region: \"amazon-web-services::us-west-1\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\nconst vpcConnect = new cloudamqp.VpcConnect(\"vpc_connect\", {\n    instanceId: instance.id,\n    region: instance.region,\n    allowedPrincipals: [\"arn:aws:iam::aws-account-id:user/user-name\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"Standalone VPC\",\n    region=\"amazon-web-services::us-west-1\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\nvpc_connect = cloudamqp.VpcConnect(\"vpc_connect\",\n    instance_id=instance.id,\n    region=instance.region,\n    allowed_principals=[\"arn:aws:iam::aws-account-id:user/user-name\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"Standalone VPC\",\n        Region = \"amazon-web-services::us-west-1\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[] {},\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    var vpcConnect = new CloudAmqp.VpcConnect(\"vpc_connect\", new()\n    {\n        InstanceId = instance.Id,\n        Region = instance.Region,\n        AllowedPrincipals = new[]\n        {\n            \"arn:aws:iam::aws-account-id:user/user-name\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"Standalone VPC\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:              pulumi.String(\"Instance 01\"),\n\t\t\tPlan:              pulumi.String(\"bunny-1\"),\n\t\t\tRegion:            pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags:              pulumi.StringArray{},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewVpcConnect(ctx, \"vpc_connect\", \u0026cloudamqp.VpcConnectArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tRegion:     instance.Region,\n\t\t\tAllowedPrincipals: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"arn:aws:iam::aws-account-id:user/user-name\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.VpcConnect;\nimport com.pulumi.cloudamqp.VpcConnectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"Standalone VPC\")\n            .region(\"amazon-web-services::us-west-1\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags()\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        var vpcConnect = new VpcConnect(\"vpcConnect\", VpcConnectArgs.builder()\n            .instanceId(instance.id())\n            .region(instance.region())\n            .allowedPrincipals(\"arn:aws:iam::aws-account-id:user/user-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: Standalone VPC\n      region: amazon-web-services::us-west-1\n      subnet: 10.56.72.0/24\n      tags: []\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags: []\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n  vpcConnect:\n    type: cloudamqp:VpcConnect\n    name: vpc_connect\n    properties:\n      instanceId: ${instance.id}\n      region: ${instance.region}\n      allowedPrincipals:\n        - arn:aws:iam::aws-account-id:user/user-name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eEnable VPC Connect (PrivateLink) in Azure\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"Standalone VPC\",\n    region: \"azure-arm::westus\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"azure-arm::westus\",\n    tags: [],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\nconst vpcConnect = new cloudamqp.VpcConnect(\"vpc_connect\", {\n    instanceId: instance.id,\n    region: instance.region,\n    approvedSubscriptions: [\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"Standalone VPC\",\n    region=\"azure-arm::westus\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"azure-arm::westus\",\n    tags=[],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\nvpc_connect = cloudamqp.VpcConnect(\"vpc_connect\",\n    instance_id=instance.id,\n    region=instance.region,\n    approved_subscriptions=[\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"Standalone VPC\",\n        Region = \"azure-arm::westus\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"azure-arm::westus\",\n        Tags = new[] {},\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    var vpcConnect = new CloudAmqp.VpcConnect(\"vpc_connect\", new()\n    {\n        InstanceId = instance.Id,\n        Region = instance.Region,\n        ApprovedSubscriptions = new[]\n        {\n            \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"Standalone VPC\"),\n\t\t\tRegion: pulumi.String(\"azure-arm::westus\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:              pulumi.String(\"Instance 01\"),\n\t\t\tPlan:              pulumi.String(\"bunny-1\"),\n\t\t\tRegion:            pulumi.String(\"azure-arm::westus\"),\n\t\t\tTags:              pulumi.StringArray{},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewVpcConnect(ctx, \"vpc_connect\", \u0026cloudamqp.VpcConnectArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tRegion:     instance.Region,\n\t\t\tApprovedSubscriptions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.VpcConnect;\nimport com.pulumi.cloudamqp.VpcConnectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"Standalone VPC\")\n            .region(\"azure-arm::westus\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"azure-arm::westus\")\n            .tags()\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        var vpcConnect = new VpcConnect(\"vpcConnect\", VpcConnectArgs.builder()\n            .instanceId(instance.id())\n            .region(instance.region())\n            .approvedSubscriptions(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: Standalone VPC\n      region: azure-arm::westus\n      subnet: 10.56.72.0/24\n      tags: []\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: azure-arm::westus\n      tags: []\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n  vpcConnect:\n    type: cloudamqp:VpcConnect\n    name: vpc_connect\n    properties:\n      instanceId: ${instance.id}\n      region: ${instance.region}\n      approvedSubscriptions:\n        - XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eEnable VPC Connect (Private Service Connect) in GCP\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"Standalone VPC\",\n    region: \"google-compute-engine::us-west1\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"google-compute-engine::us-west1\",\n    tags: [],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\nconst vpcConnect = new cloudamqp.VpcConnect(\"vpc_connect\", {\n    instanceId: instance.id,\n    region: instance.region,\n    allowedProjects: [\"some-project-123456\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"Standalone VPC\",\n    region=\"google-compute-engine::us-west1\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"google-compute-engine::us-west1\",\n    tags=[],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\nvpc_connect = cloudamqp.VpcConnect(\"vpc_connect\",\n    instance_id=instance.id,\n    region=instance.region,\n    allowed_projects=[\"some-project-123456\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"Standalone VPC\",\n        Region = \"google-compute-engine::us-west1\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"google-compute-engine::us-west1\",\n        Tags = new[] {},\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    var vpcConnect = new CloudAmqp.VpcConnect(\"vpc_connect\", new()\n    {\n        InstanceId = instance.Id,\n        Region = instance.Region,\n        AllowedProjects = new[]\n        {\n            \"some-project-123456\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"Standalone VPC\"),\n\t\t\tRegion: pulumi.String(\"google-compute-engine::us-west1\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:              pulumi.String(\"Instance 01\"),\n\t\t\tPlan:              pulumi.String(\"bunny-1\"),\n\t\t\tRegion:            pulumi.String(\"google-compute-engine::us-west1\"),\n\t\t\tTags:              pulumi.StringArray{},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewVpcConnect(ctx, \"vpc_connect\", \u0026cloudamqp.VpcConnectArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tRegion:     instance.Region,\n\t\t\tAllowedProjects: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"some-project-123456\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.VpcConnect;\nimport com.pulumi.cloudamqp.VpcConnectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"Standalone VPC\")\n            .region(\"google-compute-engine::us-west1\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"google-compute-engine::us-west1\")\n            .tags()\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        var vpcConnect = new VpcConnect(\"vpcConnect\", VpcConnectArgs.builder()\n            .instanceId(instance.id())\n            .region(instance.region())\n            .allowedProjects(\"some-project-123456\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: Standalone VPC\n      region: google-compute-engine::us-west1\n      subnet: 10.56.72.0/24\n      tags: []\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: google-compute-engine::us-west1\n      tags: []\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n  vpcConnect:\n    type: cloudamqp:VpcConnect\n    name: vpc_connect\n    properties:\n      instanceId: ${instance.id}\n      region: ${instance.region}\n      allowedProjects:\n        - some-project-123456\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\n### With Additional Firewall Rules\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eCloudAMQP instance in an existing VPC with managed firewall rules\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"Standalone VPC\",\n    region: \"amazon-web-services::us-west-1\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"Instance 01\",\n    plan: \"bunny-1\",\n    region: \"amazon-web-services::us-west-1\",\n    tags: [],\n    vpcId: vpc.id,\n    keepAssociatedVpc: true,\n});\nconst vpcConnect = new cloudamqp.VpcConnect(\"vpc_connect\", {\n    instanceId: instance.id,\n    allowedPrincipals: [\"arn:aws:iam::aws-account-id:user/user-name\"],\n});\nconst firewallSettings = new cloudamqp.SecurityFirewall(\"firewall_settings\", {\n    instanceId: instance.id,\n    rules: [\n        {\n            description: \"Custom PrivateLink setup\",\n            ip: vpc.subnet,\n            ports: [],\n            services: [\n                \"AMQP\",\n                \"AMQPS\",\n                \"HTTPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n        },\n        {\n            description: \"MGMT interface\",\n            ip: \"0.0.0.0/0\",\n            ports: [],\n            services: [\"HTTPS\"],\n        },\n    ],\n}, {\n    dependsOn: [vpcConnect],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"Standalone VPC\",\n    region=\"amazon-web-services::us-west-1\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"Instance 01\",\n    plan=\"bunny-1\",\n    region=\"amazon-web-services::us-west-1\",\n    tags=[],\n    vpc_id=vpc.id,\n    keep_associated_vpc=True)\nvpc_connect = cloudamqp.VpcConnect(\"vpc_connect\",\n    instance_id=instance.id,\n    allowed_principals=[\"arn:aws:iam::aws-account-id:user/user-name\"])\nfirewall_settings = cloudamqp.SecurityFirewall(\"firewall_settings\",\n    instance_id=instance.id,\n    rules=[\n        {\n            \"description\": \"Custom PrivateLink setup\",\n            \"ip\": vpc.subnet,\n            \"ports\": [],\n            \"services\": [\n                \"AMQP\",\n                \"AMQPS\",\n                \"HTTPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n        },\n        {\n            \"description\": \"MGMT interface\",\n            \"ip\": \"0.0.0.0/0\",\n            \"ports\": [],\n            \"services\": [\"HTTPS\"],\n        },\n    ],\n    opts = pulumi.ResourceOptions(depends_on=[vpc_connect]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"Standalone VPC\",\n        Region = \"amazon-web-services::us-west-1\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"Instance 01\",\n        Plan = \"bunny-1\",\n        Region = \"amazon-web-services::us-west-1\",\n        Tags = new[] {},\n        VpcId = vpc.Id,\n        KeepAssociatedVpc = true,\n    });\n\n    var vpcConnect = new CloudAmqp.VpcConnect(\"vpc_connect\", new()\n    {\n        InstanceId = instance.Id,\n        AllowedPrincipals = new[]\n        {\n            \"arn:aws:iam::aws-account-id:user/user-name\",\n        },\n    });\n\n    var firewallSettings = new CloudAmqp.SecurityFirewall(\"firewall_settings\", new()\n    {\n        InstanceId = instance.Id,\n        Rules = new[]\n        {\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Description = \"Custom PrivateLink setup\",\n                Ip = vpc.Subnet,\n                Ports = new() { },\n                Services = new[]\n                {\n                    \"AMQP\",\n                    \"AMQPS\",\n                    \"HTTPS\",\n                    \"STREAM\",\n                    \"STREAM_SSL\",\n                },\n            },\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Description = \"MGMT interface\",\n                Ip = \"0.0.0.0/0\",\n                Ports = new() { },\n                Services = new[]\n                {\n                    \"HTTPS\",\n                },\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            vpcConnect,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"Standalone VPC\"),\n\t\t\tRegion: pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:              pulumi.String(\"Instance 01\"),\n\t\t\tPlan:              pulumi.String(\"bunny-1\"),\n\t\t\tRegion:            pulumi.String(\"amazon-web-services::us-west-1\"),\n\t\t\tTags:              pulumi.StringArray{},\n\t\t\tVpcId:             vpc.ID(),\n\t\t\tKeepAssociatedVpc: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvpcConnect, err := cloudamqp.NewVpcConnect(ctx, \"vpc_connect\", \u0026cloudamqp.VpcConnectArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tAllowedPrincipals: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"arn:aws:iam::aws-account-id:user/user-name\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudamqp.NewSecurityFirewall(ctx, \"firewall_settings\", \u0026cloudamqp.SecurityFirewallArgs{\n\t\t\tInstanceId: instance.ID(),\n\t\t\tRules: cloudamqp.SecurityFirewallRuleArray{\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tDescription: pulumi.String(\"Custom PrivateLink setup\"),\n\t\t\t\t\tIp:          vpc.Subnet,\n\t\t\t\t\tPorts:       pulumi.IntArray{},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"AMQP\"),\n\t\t\t\t\t\tpulumi.String(\"AMQPS\"),\n\t\t\t\t\t\tpulumi.String(\"HTTPS\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM_SSL\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tDescription: pulumi.String(\"MGMT interface\"),\n\t\t\t\t\tIp:          pulumi.String(\"0.0.0.0/0\"),\n\t\t\t\t\tPorts:       pulumi.IntArray{},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"HTTPS\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tvpcConnect,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.VpcConnect;\nimport com.pulumi.cloudamqp.VpcConnectArgs;\nimport com.pulumi.cloudamqp.SecurityFirewall;\nimport com.pulumi.cloudamqp.SecurityFirewallArgs;\nimport com.pulumi.cloudamqp.inputs.SecurityFirewallRuleArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"Standalone VPC\")\n            .region(\"amazon-web-services::us-west-1\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"Instance 01\")\n            .plan(\"bunny-1\")\n            .region(\"amazon-web-services::us-west-1\")\n            .tags()\n            .vpcId(vpc.id())\n            .keepAssociatedVpc(true)\n            .build());\n\n        var vpcConnect = new VpcConnect(\"vpcConnect\", VpcConnectArgs.builder()\n            .instanceId(instance.id())\n            .allowedPrincipals(\"arn:aws:iam::aws-account-id:user/user-name\")\n            .build());\n\n        var firewallSettings = new SecurityFirewall(\"firewallSettings\", SecurityFirewallArgs.builder()\n            .instanceId(instance.id())\n            .rules(            \n                SecurityFirewallRuleArgs.builder()\n                    .description(\"Custom PrivateLink setup\")\n                    .ip(vpc.subnet())\n                    .ports()\n                    .services(                    \n                        \"AMQP\",\n                        \"AMQPS\",\n                        \"HTTPS\",\n                        \"STREAM\",\n                        \"STREAM_SSL\")\n                    .build(),\n                SecurityFirewallRuleArgs.builder()\n                    .description(\"MGMT interface\")\n                    .ip(\"0.0.0.0/0\")\n                    .ports()\n                    .services(\"HTTPS\")\n                    .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(vpcConnect)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: Standalone VPC\n      region: amazon-web-services::us-west-1\n      subnet: 10.56.72.0/24\n      tags: []\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: Instance 01\n      plan: bunny-1\n      region: amazon-web-services::us-west-1\n      tags: []\n      vpcId: ${vpc.id}\n      keepAssociatedVpc: true\n  vpcConnect:\n    type: cloudamqp:VpcConnect\n    name: vpc_connect\n    properties:\n      instanceId: ${instance.id}\n      allowedPrincipals:\n        - arn:aws:iam::aws-account-id:user/user-name\n  firewallSettings:\n    type: cloudamqp:SecurityFirewall\n    name: firewall_settings\n    properties:\n      instanceId: ${instance.id}\n      rules:\n        - description: Custom PrivateLink setup\n          ip: ${vpc.subnet}\n          ports: []\n          services:\n            - AMQP\n            - AMQPS\n            - HTTPS\n            - STREAM\n            - STREAM_SSL\n        - description: MGMT interface\n          ip: 0.0.0.0/0\n          ports: []\n          services:\n            - HTTPS\n    options:\n      dependsOn:\n        - ${vpcConnect}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Depedency\n\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\nSince `region` also is required, suggest to reuse the argument from CloudAMQP instance,\n`cloudamqp_instance.instance.region`.\n\n## Create VPC Connect with additional firewall rules\n\nTo create a PrivateLink/Private Service Connect configuration with additional firewall rules, it's required to chain the cloudamqp.SecurityFirewall\nresource to avoid parallel conflicting resource calls. You can do this by making the firewall\nresource depend on the VPC Connect resource, `cloudamqp_vpc_connect.vpc_connect`.\n\nFurthermore, since all firewall rules are overwritten, the otherwise automatically added rules for\nthe VPC Connect also needs to be added.\n\n## Import\n\n`cloudamqp_vpc_connect` can be imported using CloudAMQP internal identifier.\n\n```sh\n$ pulumi import cloudamqp:index/vpcConnect:VpcConnect vpc_connect \u003cid\u003e`\n```\n\nThe resource uses the same identifier as the CloudAMQP instance. To retrieve the identifier for an instance, either use [CloudAMQP customer API](https://docs.cloudamqp.com/#list-instances) or use the data source [`cloudamqp_account`](./data-sources/account.md).\n\n",
            "properties": {
                "activeZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Covering availability zones used when creating an endpoint from other VPC. (AWS)\n"
                },
                "allowedPrincipals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed prinicpals used by AWS, see below table.\n"
                },
                "allowedProjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed projects used by GCP, see below table.\n"
                },
                "approvedSubscriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of approved subscriptions used by Azure, see below table.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the CloudAMQP instance is hosted.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name (alias for Azure) of the PrivateLink.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) when enable Private Service Connect.\nDefault set to 10 seconds.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Private Service Connect status [enable, pending, disable]\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) when enable Private Service Connect.\nDefault set to 1800 seconds.\n\n___\n\nThe `allowed_principals`, `approved_subscriptions` or `allowed_projects` data depends on the provider platform:\n\n| Platform | Description         | Format                                                                                                                             |\n|----------|---------------------|------------------------------------------------------------------------------------------------------------------------------------|\n| AWS      | IAM ARN principals  | arn:aws:iam::aws-account-id:root\u003cbr /\u003e arn:aws:iam::aws-account-id:user/user-name\u003cbr /\u003e arn:aws:iam::aws-account-id:role/role-name |\n| Azure    | Subscription (GUID) | XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX                                                                                               |\n| GCP      | Project IDs*        | 6 to 30 lowercase letters, digits, or hyphens                                                                                      |\n\n*https://cloud.google.com/resource-manager/reference/rest/v1/projects\n"
                }
            },
            "required": [
                "activeZones",
                "instanceId",
                "region",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "allowedPrincipals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed prinicpals used by AWS, see below table.\n"
                },
                "allowedProjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed projects used by GCP, see below table.\n"
                },
                "approvedSubscriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of approved subscriptions used by Azure, see below table.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the CloudAMQP instance is hosted.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) when enable Private Service Connect.\nDefault set to 10 seconds.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) when enable Private Service Connect.\nDefault set to 1800 seconds.\n\n___\n\nThe `allowed_principals`, `approved_subscriptions` or `allowed_projects` data depends on the provider platform:\n\n| Platform | Description         | Format                                                                                                                             |\n|----------|---------------------|------------------------------------------------------------------------------------------------------------------------------------|\n| AWS      | IAM ARN principals  | arn:aws:iam::aws-account-id:root\u003cbr /\u003e arn:aws:iam::aws-account-id:user/user-name\u003cbr /\u003e arn:aws:iam::aws-account-id:role/role-name |\n| Azure    | Subscription (GUID) | XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX                                                                                               |\n| GCP      | Project IDs*        | 6 to 30 lowercase letters, digits, or hyphens                                                                                      |\n\n*https://cloud.google.com/resource-manager/reference/rest/v1/projects\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcConnect resources.\n",
                "properties": {
                    "activeZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Covering availability zones used when creating an endpoint from other VPC. (AWS)\n"
                    },
                    "allowedPrincipals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of allowed prinicpals used by AWS, see below table.\n"
                    },
                    "allowedProjects": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of allowed projects used by GCP, see below table.\n"
                    },
                    "approvedSubscriptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of approved subscriptions used by Azure, see below table.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the CloudAMQP instance is hosted.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name (alias for Azure) of the PrivateLink.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time (seconds) when enable Private Service Connect.\nDefault set to 10 seconds.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Private Service Connect status [enable, pending, disable]\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time (seconds) when enable Private Service Connect.\nDefault set to 1800 seconds.\n\n___\n\nThe `allowed_principals`, `approved_subscriptions` or `allowed_projects` data depends on the provider platform:\n\n| Platform | Description         | Format                                                                                                                             |\n|----------|---------------------|------------------------------------------------------------------------------------------------------------------------------------|\n| AWS      | IAM ARN principals  | arn:aws:iam::aws-account-id:root\u003cbr /\u003e arn:aws:iam::aws-account-id:user/user-name\u003cbr /\u003e arn:aws:iam::aws-account-id:role/role-name |\n| Azure    | Subscription (GUID) | XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX                                                                                               |\n| GCP      | Project IDs*        | 6 to 30 lowercase letters, digits, or hyphens                                                                                      |\n\n*https://cloud.google.com/resource-manager/reference/rest/v1/projects\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/vpcGcpPeering:VpcGcpPeering": {
            "description": "This resouce creates a VPC peering configuration for the CloudAMQP instance. The configuration will\nconnect to another VPC network hosted on Google Cloud Platform (GCP). See the\n[GCP documentation](https://cloud.google.com/vpc/docs/using-vpc-peering) for more information on how\nto create the VPC peering configuration.\n\n\u003e **Note:** Creating a VPC peering will automatically add firewall rules for the peered subnet.\n\n\u003cdetails\u003e\n \u003csummary\u003e\n    \u003ci\u003eDefault VPC peering firewall rule\u003c/i\u003e\n  \u003c/summary\u003e\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eVPC peering before v1.16.0\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// CloudAMQP instance\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"terraform-vpc-peering\",\n    plan: \"bunny-1\",\n    region: \"google-compute-engine::europe-north1\",\n    tags: [\"terraform\"],\n    vpcSubnet: \"10.40.72.0/24\",\n});\n// VPC information\nconst vpcInfo = instance.id.apply(id =\u003e cloudamqp.getVpcGcpInfoOutput({\n    instanceId: id,\n}));\n// VPC peering configuration\nconst vpcPeeringRequest = new cloudamqp.VpcGcpPeering(\"vpc_peering_request\", {\n    instanceId: instance.id,\n    peerNetworkUri: \"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# CloudAMQP instance\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"terraform-vpc-peering\",\n    plan=\"bunny-1\",\n    region=\"google-compute-engine::europe-north1\",\n    tags=[\"terraform\"],\n    vpc_subnet=\"10.40.72.0/24\")\n# VPC information\nvpc_info = instance.id.apply(lambda id: cloudamqp.get_vpc_gcp_info_output(instance_id=id))\n# VPC peering configuration\nvpc_peering_request = cloudamqp.VpcGcpPeering(\"vpc_peering_request\",\n    instance_id=instance.id,\n    peer_network_uri=\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // CloudAMQP instance\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"terraform-vpc-peering\",\n        Plan = \"bunny-1\",\n        Region = \"google-compute-engine::europe-north1\",\n        Tags = new[]\n        {\n            \"terraform\",\n        },\n        VpcSubnet = \"10.40.72.0/24\",\n    });\n\n    // VPC information\n    var vpcInfo = CloudAmqp.GetVpcGcpInfo.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n    // VPC peering configuration\n    var vpcPeeringRequest = new CloudAmqp.VpcGcpPeering(\"vpc_peering_request\", new()\n    {\n        InstanceId = instance.Id,\n        PeerNetworkUri = \"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// CloudAMQP instance\n\t\tinstance, err := cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"terraform-vpc-peering\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"google-compute-engine::europe-north1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t},\n\t\t\tVpcSubnet: pulumi.String(\"10.40.72.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// VPC information\n\t\t_ = instance.ID().ApplyT(func(id string) (cloudamqp.GetVpcGcpInfoResult, error) {\n\t\t\treturn cloudamqp.GetVpcGcpInfoResult(interface{}(cloudamqp.GetVpcGcpInfoOutput(ctx, cloudamqp.GetVpcGcpInfoOutputArgs{\n\t\t\t\tInstanceId: id,\n\t\t\t}, nil))), nil\n\t\t}).(cloudamqp.GetVpcGcpInfoResultOutput)\n\t\t// VPC peering configuration\n\t\t_, err = cloudamqp.NewVpcGcpPeering(ctx, \"vpc_peering_request\", \u0026cloudamqp.VpcGcpPeeringArgs{\n\t\t\tInstanceId:     instance.ID(),\n\t\t\tPeerNetworkUri: pulumi.String(\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;\nimport com.pulumi.cloudamqp.VpcGcpPeering;\nimport com.pulumi.cloudamqp.VpcGcpPeeringArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // CloudAMQP instance\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"terraform-vpc-peering\")\n            .plan(\"bunny-1\")\n            .region(\"google-compute-engine::europe-north1\")\n            .tags(\"terraform\")\n            .vpcSubnet(\"10.40.72.0/24\")\n            .build());\n\n        // VPC information\n        final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n        // VPC peering configuration\n        var vpcPeeringRequest = new VpcGcpPeering(\"vpcPeeringRequest\", VpcGcpPeeringArgs.builder()\n            .instanceId(instance.id())\n            .peerNetworkUri(\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # CloudAMQP instance\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: terraform-vpc-peering\n      plan: bunny-1\n      region: google-compute-engine::europe-north1\n      tags:\n        - terraform\n      vpcSubnet: 10.40.72.0/24\n  # VPC peering configuration\n  vpcPeeringRequest:\n    type: cloudamqp:VpcGcpPeering\n    name: vpc_peering_request\n    properties:\n      instanceId: ${instance.id}\n      peerNetworkUri: https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\nvariables:\n  # VPC information\n  vpcInfo:\n    fn::invoke:\n      function: cloudamqp:getVpcGcpInfo\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eVPC peering from v1.16.0 (Managed VPC)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// Managed VPC resource\nconst vpc = new cloudamqp.Vpc(\"vpc\", {\n    name: \"\u003cVPC name\u003e\",\n    region: \"google-compute-engine::europe-north1\",\n    subnet: \"10.56.72.0/24\",\n    tags: [],\n});\n// CloudAMQP instance\nconst instance = new cloudamqp.Instance(\"instance\", {\n    name: \"terraform-vpc-peering\",\n    plan: \"bunny-1\",\n    region: \"google-compute-engine::europe-north1\",\n    tags: [\"terraform\"],\n    vpcId: vpc.id,\n});\n// VPC information\nconst vpcInfo = cloudamqp.getVpcGcpInfo({\n    vpcId: vpc.info,\n});\n// VPC peering configuration\nconst vpcPeeringRequest = new cloudamqp.VpcGcpPeering(\"vpc_peering_request\", {\n    vpcId: vpc.id,\n    peerNetworkUri: \"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# Managed VPC resource\nvpc = cloudamqp.Vpc(\"vpc\",\n    name=\"\u003cVPC name\u003e\",\n    region=\"google-compute-engine::europe-north1\",\n    subnet=\"10.56.72.0/24\",\n    tags=[])\n# CloudAMQP instance\ninstance = cloudamqp.Instance(\"instance\",\n    name=\"terraform-vpc-peering\",\n    plan=\"bunny-1\",\n    region=\"google-compute-engine::europe-north1\",\n    tags=[\"terraform\"],\n    vpc_id=vpc.id)\n# VPC information\nvpc_info = cloudamqp.get_vpc_gcp_info(vpc_id=vpc.info)\n# VPC peering configuration\nvpc_peering_request = cloudamqp.VpcGcpPeering(\"vpc_peering_request\",\n    vpc_id=vpc.id,\n    peer_network_uri=\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Managed VPC resource\n    var vpc = new CloudAmqp.Vpc(\"vpc\", new()\n    {\n        Name = \"\u003cVPC name\u003e\",\n        Region = \"google-compute-engine::europe-north1\",\n        Subnet = \"10.56.72.0/24\",\n        Tags = new[] {},\n    });\n\n    // CloudAMQP instance\n    var instance = new CloudAmqp.Instance(\"instance\", new()\n    {\n        Name = \"terraform-vpc-peering\",\n        Plan = \"bunny-1\",\n        Region = \"google-compute-engine::europe-north1\",\n        Tags = new[]\n        {\n            \"terraform\",\n        },\n        VpcId = vpc.Id,\n    });\n\n    // VPC information\n    var vpcInfo = CloudAmqp.GetVpcGcpInfo.Invoke(new()\n    {\n        VpcId = vpc.Info,\n    });\n\n    // VPC peering configuration\n    var vpcPeeringRequest = new CloudAmqp.VpcGcpPeering(\"vpc_peering_request\", new()\n    {\n        VpcId = vpc.Id,\n        PeerNetworkUri = \"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Managed VPC resource\n\t\tvpc, err := cloudamqp.NewVpc(ctx, \"vpc\", \u0026cloudamqp.VpcArgs{\n\t\t\tName:   pulumi.String(\"\u003cVPC name\u003e\"),\n\t\t\tRegion: pulumi.String(\"google-compute-engine::europe-north1\"),\n\t\t\tSubnet: pulumi.String(\"10.56.72.0/24\"),\n\t\t\tTags:   pulumi.StringArray{},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// CloudAMQP instance\n\t\t_, err = cloudamqp.NewInstance(ctx, \"instance\", \u0026cloudamqp.InstanceArgs{\n\t\t\tName:   pulumi.String(\"terraform-vpc-peering\"),\n\t\t\tPlan:   pulumi.String(\"bunny-1\"),\n\t\t\tRegion: pulumi.String(\"google-compute-engine::europe-north1\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t},\n\t\t\tVpcId: vpc.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// VPC information\n\t\t_, err = cloudamqp.GetVpcGcpInfo(ctx, \u0026cloudamqp.GetVpcGcpInfoArgs{\n\t\t\tVpcId: pulumi.StringRef(vpc.Info),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// VPC peering configuration\n\t\t_, err = cloudamqp.NewVpcGcpPeering(ctx, \"vpc_peering_request\", \u0026cloudamqp.VpcGcpPeeringArgs{\n\t\t\tVpcId:          vpc.ID(),\n\t\t\tPeerNetworkUri: pulumi.String(\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.Vpc;\nimport com.pulumi.cloudamqp.VpcArgs;\nimport com.pulumi.cloudamqp.Instance;\nimport com.pulumi.cloudamqp.InstanceArgs;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;\nimport com.pulumi.cloudamqp.VpcGcpPeering;\nimport com.pulumi.cloudamqp.VpcGcpPeeringArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Managed VPC resource\n        var vpc = new Vpc(\"vpc\", VpcArgs.builder()\n            .name(\"\u003cVPC name\u003e\")\n            .region(\"google-compute-engine::europe-north1\")\n            .subnet(\"10.56.72.0/24\")\n            .tags()\n            .build());\n\n        // CloudAMQP instance\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .name(\"terraform-vpc-peering\")\n            .plan(\"bunny-1\")\n            .region(\"google-compute-engine::europe-north1\")\n            .tags(\"terraform\")\n            .vpcId(vpc.id())\n            .build());\n\n        // VPC information\n        final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()\n            .vpcId(vpc.info())\n            .build());\n\n        // VPC peering configuration\n        var vpcPeeringRequest = new VpcGcpPeering(\"vpcPeeringRequest\", VpcGcpPeeringArgs.builder()\n            .vpcId(vpc.id())\n            .peerNetworkUri(\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Managed VPC resource\n  vpc:\n    type: cloudamqp:Vpc\n    properties:\n      name: \u003cVPC name\u003e\n      region: google-compute-engine::europe-north1\n      subnet: 10.56.72.0/24\n      tags: []\n  # CloudAMQP instance\n  instance:\n    type: cloudamqp:Instance\n    properties:\n      name: terraform-vpc-peering\n      plan: bunny-1\n      region: google-compute-engine::europe-north1\n      tags:\n        - terraform\n      vpcId: ${vpc.id}\n  # VPC peering configuration\n  vpcPeeringRequest:\n    type: cloudamqp:VpcGcpPeering\n    name: vpc_peering_request\n    properties:\n      vpcId: ${vpc.id}\n      peerNetworkUri: https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\nvariables:\n  # VPC information\n  vpcInfo:\n    fn::invoke:\n      function: cloudamqp:getVpcGcpInfo\n      arguments:\n        vpcId: ${vpc.info}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eVPC peering from v1.28.0, wait_on_peering_status \u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\nDefault peering request, no need to set `wait_on_peering_status`. It's default set to false and will\nnot wait on peering status. Create resource will be considered completed, regardless of the status of the state.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpcPeeringRequest = new cloudamqp.VpcGcpPeering(\"vpc_peering_request\", {\n    vpcId: vpc.id,\n    peerNetworkUri: \"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc_peering_request = cloudamqp.VpcGcpPeering(\"vpc_peering_request\",\n    vpc_id=vpc[\"id\"],\n    peer_network_uri=\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpcPeeringRequest = new CloudAmqp.VpcGcpPeering(\"vpc_peering_request\", new()\n    {\n        VpcId = vpc.Id,\n        PeerNetworkUri = \"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewVpcGcpPeering(ctx, \"vpc_peering_request\", \u0026cloudamqp.VpcGcpPeeringArgs{\n\t\t\tVpcId:          pulumi.Any(vpc.Id),\n\t\t\tPeerNetworkUri: pulumi.String(\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.VpcGcpPeering;\nimport com.pulumi.cloudamqp.VpcGcpPeeringArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpcPeeringRequest = new VpcGcpPeering(\"vpcPeeringRequest\", VpcGcpPeeringArgs.builder()\n            .vpcId(vpc.id())\n            .peerNetworkUri(\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpcPeeringRequest:\n    type: cloudamqp:VpcGcpPeering\n    name: vpc_peering_request\n    properties:\n      vpcId: ${vpc.id}\n      peerNetworkUri: https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nPeering request and waiting for peering status of the state to change to ACTIVE before the create resource is consider complete.\nThis is done once both side have done the peering.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpcPeeringRequest = new cloudamqp.VpcGcpPeering(\"vpc_peering_request\", {\n    vpcId: vpc.id,\n    waitOnPeeringStatus: true,\n    peerNetworkUri: \"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc_peering_request = cloudamqp.VpcGcpPeering(\"vpc_peering_request\",\n    vpc_id=vpc[\"id\"],\n    wait_on_peering_status=True,\n    peer_network_uri=\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpcPeeringRequest = new CloudAmqp.VpcGcpPeering(\"vpc_peering_request\", new()\n    {\n        VpcId = vpc.Id,\n        WaitOnPeeringStatus = true,\n        PeerNetworkUri = \"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.NewVpcGcpPeering(ctx, \"vpc_peering_request\", \u0026cloudamqp.VpcGcpPeeringArgs{\n\t\t\tVpcId:               pulumi.Any(vpc.Id),\n\t\t\tWaitOnPeeringStatus: pulumi.Bool(true),\n\t\t\tPeerNetworkUri:      pulumi.String(\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.VpcGcpPeering;\nimport com.pulumi.cloudamqp.VpcGcpPeeringArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vpcPeeringRequest = new VpcGcpPeering(\"vpcPeeringRequest\", VpcGcpPeeringArgs.builder()\n            .vpcId(vpc.id())\n            .waitOnPeeringStatus(true)\n            .peerNetworkUri(\"https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vpcPeeringRequest:\n    type: cloudamqp:VpcGcpPeering\n    name: vpc_peering_request\n    properties:\n      vpcId: ${vpc.id}\n      waitOnPeeringStatus: true\n      peerNetworkUri: https://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\n### With Additional Firewall Rules\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eVPC peering before v1.16.0\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// VPC peering configuration\nconst vpcPeeringRequest = new cloudamqp.VpcGcpPeering(\"vpc_peering_request\", {\n    instanceId: instance.id,\n    peerNetworkUri: peerNetworkUri,\n});\n// Firewall rules\nconst firewallSettings = new cloudamqp.SecurityFirewall(\"firewall_settings\", {\n    instanceId: instance.id,\n    rules: [\n        {\n            ip: peerSubnet,\n            ports: [15672],\n            services: [\n                \"AMQP\",\n                \"AMQPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n            description: \"VPC peering for \u003cNETWORK\u003e\",\n        },\n        {\n            ip: \"192.168.0.0/24\",\n            ports: [\n                4567,\n                4568,\n            ],\n            services: [\n                \"AMQP\",\n                \"AMQPS\",\n                \"HTTPS\",\n            ],\n        },\n    ],\n}, {\n    dependsOn: [vpcPeeringRequest],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# VPC peering configuration\nvpc_peering_request = cloudamqp.VpcGcpPeering(\"vpc_peering_request\",\n    instance_id=instance[\"id\"],\n    peer_network_uri=peer_network_uri)\n# Firewall rules\nfirewall_settings = cloudamqp.SecurityFirewall(\"firewall_settings\",\n    instance_id=instance[\"id\"],\n    rules=[\n        {\n            \"ip\": peer_subnet,\n            \"ports\": [15672],\n            \"services\": [\n                \"AMQP\",\n                \"AMQPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n            \"description\": \"VPC peering for \u003cNETWORK\u003e\",\n        },\n        {\n            \"ip\": \"192.168.0.0/24\",\n            \"ports\": [\n                4567,\n                4568,\n            ],\n            \"services\": [\n                \"AMQP\",\n                \"AMQPS\",\n                \"HTTPS\",\n            ],\n        },\n    ],\n    opts = pulumi.ResourceOptions(depends_on=[vpc_peering_request]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // VPC peering configuration\n    var vpcPeeringRequest = new CloudAmqp.VpcGcpPeering(\"vpc_peering_request\", new()\n    {\n        InstanceId = instance.Id,\n        PeerNetworkUri = peerNetworkUri,\n    });\n\n    // Firewall rules\n    var firewallSettings = new CloudAmqp.SecurityFirewall(\"firewall_settings\", new()\n    {\n        InstanceId = instance.Id,\n        Rules = new[]\n        {\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Ip = peerSubnet,\n                Ports = new[]\n                {\n                    15672,\n                },\n                Services = new[]\n                {\n                    \"AMQP\",\n                    \"AMQPS\",\n                    \"STREAM\",\n                    \"STREAM_SSL\",\n                },\n                Description = \"VPC peering for \u003cNETWORK\u003e\",\n            },\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Ip = \"192.168.0.0/24\",\n                Ports = new[]\n                {\n                    4567,\n                    4568,\n                },\n                Services = new[]\n                {\n                    \"AMQP\",\n                    \"AMQPS\",\n                    \"HTTPS\",\n                },\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            vpcPeeringRequest,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// VPC peering configuration\n\t\tvpcPeeringRequest, err := cloudamqp.NewVpcGcpPeering(ctx, \"vpc_peering_request\", \u0026cloudamqp.VpcGcpPeeringArgs{\n\t\t\tInstanceId:     pulumi.Any(instance.Id),\n\t\t\tPeerNetworkUri: pulumi.Any(peerNetworkUri),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Firewall rules\n\t\t_, err = cloudamqp.NewSecurityFirewall(ctx, \"firewall_settings\", \u0026cloudamqp.SecurityFirewallArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tRules: cloudamqp.SecurityFirewallRuleArray{\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tIp: pulumi.Any(peerSubnet),\n\t\t\t\t\tPorts: pulumi.IntArray{\n\t\t\t\t\t\tpulumi.Int(15672),\n\t\t\t\t\t},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"AMQP\"),\n\t\t\t\t\t\tpulumi.String(\"AMQPS\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM_SSL\"),\n\t\t\t\t\t},\n\t\t\t\t\tDescription: pulumi.String(\"VPC peering for \u003cNETWORK\u003e\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tIp: pulumi.String(\"192.168.0.0/24\"),\n\t\t\t\t\tPorts: pulumi.IntArray{\n\t\t\t\t\t\tpulumi.Int(4567),\n\t\t\t\t\t\tpulumi.Int(4568),\n\t\t\t\t\t},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"AMQP\"),\n\t\t\t\t\t\tpulumi.String(\"AMQPS\"),\n\t\t\t\t\t\tpulumi.String(\"HTTPS\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tvpcPeeringRequest,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.VpcGcpPeering;\nimport com.pulumi.cloudamqp.VpcGcpPeeringArgs;\nimport com.pulumi.cloudamqp.SecurityFirewall;\nimport com.pulumi.cloudamqp.SecurityFirewallArgs;\nimport com.pulumi.cloudamqp.inputs.SecurityFirewallRuleArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // VPC peering configuration\n        var vpcPeeringRequest = new VpcGcpPeering(\"vpcPeeringRequest\", VpcGcpPeeringArgs.builder()\n            .instanceId(instance.id())\n            .peerNetworkUri(peerNetworkUri)\n            .build());\n\n        // Firewall rules\n        var firewallSettings = new SecurityFirewall(\"firewallSettings\", SecurityFirewallArgs.builder()\n            .instanceId(instance.id())\n            .rules(            \n                SecurityFirewallRuleArgs.builder()\n                    .ip(peerSubnet)\n                    .ports(15672)\n                    .services(                    \n                        \"AMQP\",\n                        \"AMQPS\",\n                        \"STREAM\",\n                        \"STREAM_SSL\")\n                    .description(\"VPC peering for \u003cNETWORK\u003e\")\n                    .build(),\n                SecurityFirewallRuleArgs.builder()\n                    .ip(\"192.168.0.0/24\")\n                    .ports(                    \n                        4567,\n                        4568)\n                    .services(                    \n                        \"AMQP\",\n                        \"AMQPS\",\n                        \"HTTPS\")\n                    .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(vpcPeeringRequest)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # VPC peering configuration\n  vpcPeeringRequest:\n    type: cloudamqp:VpcGcpPeering\n    name: vpc_peering_request\n    properties:\n      instanceId: ${instance.id}\n      peerNetworkUri: ${peerNetworkUri}\n  # Firewall rules\n  firewallSettings:\n    type: cloudamqp:SecurityFirewall\n    name: firewall_settings\n    properties:\n      instanceId: ${instance.id}\n      rules:\n        - ip: ${peerSubnet}\n          ports:\n            - 15672\n          services:\n            - AMQP\n            - AMQPS\n            - STREAM\n            - STREAM_SSL\n          description: VPC peering for \u003cNETWORK\u003e\n        - ip: 192.168.0.0/24\n          ports:\n            - 4567\n            - 4568\n          services:\n            - AMQP\n            - AMQPS\n            - HTTPS\n    options:\n      dependsOn:\n        - ${vpcPeeringRequest}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eVPC peering from v1.16.0 (Managed VPC)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\n// VPC peering configuration\nconst vpcPeeringRequest = new cloudamqp.VpcGcpPeering(\"vpc_peering_request\", {\n    vpcId: vpc.id,\n    peerNetworkUri: peerNetworkUri,\n});\n// Firewall rules\nconst firewallSettings = new cloudamqp.SecurityFirewall(\"firewall_settings\", {\n    instanceId: instance.id,\n    rules: [\n        {\n            ip: peerSubnet,\n            ports: [15672],\n            services: [\n                \"AMQP\",\n                \"AMQPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n            description: \"VPC peering for \u003cNETWORK\u003e\",\n        },\n        {\n            ip: \"0.0.0.0/0\",\n            ports: [],\n            services: [\"HTTPS\"],\n            description: \"MGMT interface\",\n        },\n    ],\n}, {\n    dependsOn: [vpcPeeringRequest],\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\n# VPC peering configuration\nvpc_peering_request = cloudamqp.VpcGcpPeering(\"vpc_peering_request\",\n    vpc_id=vpc[\"id\"],\n    peer_network_uri=peer_network_uri)\n# Firewall rules\nfirewall_settings = cloudamqp.SecurityFirewall(\"firewall_settings\",\n    instance_id=instance[\"id\"],\n    rules=[\n        {\n            \"ip\": peer_subnet,\n            \"ports\": [15672],\n            \"services\": [\n                \"AMQP\",\n                \"AMQPS\",\n                \"STREAM\",\n                \"STREAM_SSL\",\n            ],\n            \"description\": \"VPC peering for \u003cNETWORK\u003e\",\n        },\n        {\n            \"ip\": \"0.0.0.0/0\",\n            \"ports\": [],\n            \"services\": [\"HTTPS\"],\n            \"description\": \"MGMT interface\",\n        },\n    ],\n    opts = pulumi.ResourceOptions(depends_on=[vpc_peering_request]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // VPC peering configuration\n    var vpcPeeringRequest = new CloudAmqp.VpcGcpPeering(\"vpc_peering_request\", new()\n    {\n        VpcId = vpc.Id,\n        PeerNetworkUri = peerNetworkUri,\n    });\n\n    // Firewall rules\n    var firewallSettings = new CloudAmqp.SecurityFirewall(\"firewall_settings\", new()\n    {\n        InstanceId = instance.Id,\n        Rules = new[]\n        {\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Ip = peerSubnet,\n                Ports = new[]\n                {\n                    15672,\n                },\n                Services = new[]\n                {\n                    \"AMQP\",\n                    \"AMQPS\",\n                    \"STREAM\",\n                    \"STREAM_SSL\",\n                },\n                Description = \"VPC peering for \u003cNETWORK\u003e\",\n            },\n            new CloudAmqp.Inputs.SecurityFirewallRuleArgs\n            {\n                Ip = \"0.0.0.0/0\",\n                Ports = new() { },\n                Services = new[]\n                {\n                    \"HTTPS\",\n                },\n                Description = \"MGMT interface\",\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            vpcPeeringRequest,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// VPC peering configuration\n\t\tvpcPeeringRequest, err := cloudamqp.NewVpcGcpPeering(ctx, \"vpc_peering_request\", \u0026cloudamqp.VpcGcpPeeringArgs{\n\t\t\tVpcId:          pulumi.Any(vpc.Id),\n\t\t\tPeerNetworkUri: pulumi.Any(peerNetworkUri),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Firewall rules\n\t\t_, err = cloudamqp.NewSecurityFirewall(ctx, \"firewall_settings\", \u0026cloudamqp.SecurityFirewallArgs{\n\t\t\tInstanceId: pulumi.Any(instance.Id),\n\t\t\tRules: cloudamqp.SecurityFirewallRuleArray{\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tIp: pulumi.Any(peerSubnet),\n\t\t\t\t\tPorts: pulumi.IntArray{\n\t\t\t\t\t\tpulumi.Int(15672),\n\t\t\t\t\t},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"AMQP\"),\n\t\t\t\t\t\tpulumi.String(\"AMQPS\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM\"),\n\t\t\t\t\t\tpulumi.String(\"STREAM_SSL\"),\n\t\t\t\t\t},\n\t\t\t\t\tDescription: pulumi.String(\"VPC peering for \u003cNETWORK\u003e\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudamqp.SecurityFirewallRuleArgs{\n\t\t\t\t\tIp:    pulumi.String(\"0.0.0.0/0\"),\n\t\t\t\t\tPorts: pulumi.IntArray{},\n\t\t\t\t\tServices: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"HTTPS\"),\n\t\t\t\t\t},\n\t\t\t\t\tDescription: pulumi.String(\"MGMT interface\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tvpcPeeringRequest,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.VpcGcpPeering;\nimport com.pulumi.cloudamqp.VpcGcpPeeringArgs;\nimport com.pulumi.cloudamqp.SecurityFirewall;\nimport com.pulumi.cloudamqp.SecurityFirewallArgs;\nimport com.pulumi.cloudamqp.inputs.SecurityFirewallRuleArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // VPC peering configuration\n        var vpcPeeringRequest = new VpcGcpPeering(\"vpcPeeringRequest\", VpcGcpPeeringArgs.builder()\n            .vpcId(vpc.id())\n            .peerNetworkUri(peerNetworkUri)\n            .build());\n\n        // Firewall rules\n        var firewallSettings = new SecurityFirewall(\"firewallSettings\", SecurityFirewallArgs.builder()\n            .instanceId(instance.id())\n            .rules(            \n                SecurityFirewallRuleArgs.builder()\n                    .ip(peerSubnet)\n                    .ports(15672)\n                    .services(                    \n                        \"AMQP\",\n                        \"AMQPS\",\n                        \"STREAM\",\n                        \"STREAM_SSL\")\n                    .description(\"VPC peering for \u003cNETWORK\u003e\")\n                    .build(),\n                SecurityFirewallRuleArgs.builder()\n                    .ip(\"0.0.0.0/0\")\n                    .ports()\n                    .services(\"HTTPS\")\n                    .description(\"MGMT interface\")\n                    .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(vpcPeeringRequest)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # VPC peering configuration\n  vpcPeeringRequest:\n    type: cloudamqp:VpcGcpPeering\n    name: vpc_peering_request\n    properties:\n      vpcId: ${vpc.id}\n      peerNetworkUri: ${peerNetworkUri}\n  # Firewall rules\n  firewallSettings:\n    type: cloudamqp:SecurityFirewall\n    name: firewall_settings\n    properties:\n      instanceId: ${instance.id}\n      rules:\n        - ip: ${peerSubnet}\n          ports:\n            - 15672\n          services:\n            - AMQP\n            - AMQPS\n            - STREAM\n            - STREAM_SSL\n          description: VPC peering for \u003cNETWORK\u003e\n        - ip: 0.0.0.0/0\n          ports: []\n          services:\n            - HTTPS\n          description: MGMT interface\n    options:\n      dependsOn:\n        - ${vpcPeeringRequest}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Depedency\n\n*Before v1.16.0*\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n*From v1.16.0*\nThis resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance\nidentifier, `cloudamqp_instance.instance.id`.\n\n## Create VPC Peering with additional firewall rules\n\nTo create a VPC peering configuration with additional firewall rules, it's required to chain the\ncloudamqp.SecurityFirewall\nresource to avoid parallel conflicting resource calls. This is done by adding dependency from the\nfirewall resource to the VPC peering resource.\n\nFurthermore, since all firewall rules are overwritten, the otherwise automatically added rules for\nthe VPC peering also needs to be added.\n\nSee example below.\n\n## Import\n\n### Peering network URI\n\nThis is required to be able to import the correct peering. Following the same format as the argument reference.\n\nhcl\n\nhttps://www.googleapis.com/compute/v1/projects/\u003cPROJECT-NAME\u003e/global/networks/\u003cVPC-NETWORK-NAME\u003e\n\n",
            "properties": {
                "autoCreateRoutes": {
                    "type": "boolean",
                    "description": "VPC peering auto created routes\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier. *Deprecated from v1.16.0*\n"
                },
                "peerNetworkUri": {
                    "type": "string",
                    "description": "Network URI of the VPC network to which you will peer with. See examples above for the format.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) between retries when requesting or reading\npeering. Default set to 10 seconds. *Available from v1.29.0*\n"
                },
                "state": {
                    "type": "string",
                    "description": "VPC peering state\n"
                },
                "stateDetails": {
                    "type": "string",
                    "description": "VPC peering state details\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) before retries times out. Default set\nto 1800 seconds. *Available from v1.29.0*\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The managed VPC identifier. *Available from v1.16.0*\n"
                },
                "waitOnPeeringStatus": {
                    "type": "boolean",
                    "description": "Makes the resource wait until the peering is connected.\nDefault set to false. *Available from v1.28.0*\n"
                }
            },
            "required": [
                "autoCreateRoutes",
                "peerNetworkUri",
                "state",
                "stateDetails"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier. *Deprecated from v1.16.0*\n"
                },
                "peerNetworkUri": {
                    "type": "string",
                    "description": "Network URI of the VPC network to which you will peer with. See examples above for the format.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) between retries when requesting or reading\npeering. Default set to 10 seconds. *Available from v1.29.0*\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) before retries times out. Default set\nto 1800 seconds. *Available from v1.29.0*\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The managed VPC identifier. *Available from v1.16.0*\n"
                },
                "waitOnPeeringStatus": {
                    "type": "boolean",
                    "description": "Makes the resource wait until the peering is connected.\nDefault set to false. *Available from v1.28.0*\n"
                }
            },
            "requiredInputs": [
                "peerNetworkUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcGcpPeering resources.\n",
                "properties": {
                    "autoCreateRoutes": {
                        "type": "boolean",
                        "description": "VPC peering auto created routes\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier. *Deprecated from v1.16.0*\n"
                    },
                    "peerNetworkUri": {
                        "type": "string",
                        "description": "Network URI of the VPC network to which you will peer with. See examples above for the format.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time (seconds) between retries when requesting or reading\npeering. Default set to 10 seconds. *Available from v1.29.0*\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "VPC peering state\n"
                    },
                    "stateDetails": {
                        "type": "string",
                        "description": "VPC peering state details\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time (seconds) before retries times out. Default set\nto 1800 seconds. *Available from v1.29.0*\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The managed VPC identifier. *Available from v1.16.0*\n"
                    },
                    "waitOnPeeringStatus": {
                        "type": "boolean",
                        "description": "Makes the resource wait until the peering is connected.\nDefault set to false. *Available from v1.28.0*\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/vpcPeering:VpcPeering": {
            "description": "\n\n## Import\n\n### Peering Identifier\n\nThis can be found as *peering connection id* in your AWS VPC dashboard/Peering connections, for the correct VPC peering.\n\nAlso available as the identifier for *aws_vpc_peering_connection* resource or\n\ndata source.\n\n",
            "properties": {
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier.\n\n***Deprecated: Changed from required to optional in v1.16.0, will be removed in next major version (v2.0)***\n"
                },
                "peeringId": {
                    "type": "string",
                    "description": "Peering identifier created by AW peering request.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) between retries for accepting or removing peering. Default set to 60 seconds.\n"
                },
                "status": {
                    "type": "string",
                    "description": "VPC peering status\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) for accepting or removing peering. Default set to 3600 seconds.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The managed VPC identifier.\n\n***Note: Introduced as optional in version v1.16.0, will be required in next major version (v2.0)***\n"
                }
            },
            "required": [
                "peeringId",
                "status"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance identifier.\n\n***Deprecated: Changed from required to optional in v1.16.0, will be removed in next major version (v2.0)***\n"
                },
                "peeringId": {
                    "type": "string",
                    "description": "Peering identifier created by AW peering request.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time (seconds) between retries for accepting or removing peering. Default set to 60 seconds.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time (seconds) for accepting or removing peering. Default set to 3600 seconds.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The managed VPC identifier.\n\n***Note: Introduced as optional in version v1.16.0, will be required in next major version (v2.0)***\n"
                }
            },
            "requiredInputs": [
                "peeringId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPeering resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n\n***Deprecated: Changed from required to optional in v1.16.0, will be removed in next major version (v2.0)***\n"
                    },
                    "peeringId": {
                        "type": "string",
                        "description": "Peering identifier created by AW peering request.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time (seconds) between retries for accepting or removing peering. Default set to 60 seconds.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "VPC peering status\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time (seconds) for accepting or removing peering. Default set to 3600 seconds.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The managed VPC identifier.\n\n***Note: Introduced as optional in version v1.16.0, will be required in next major version (v2.0)***\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudamqp:index/webhook:Webhook": {
            "description": "\n\n## Import\n\n`cloudamqp_webhook` can be imported using the resource identifier together with CloudAMQP instance identifier. The identifiers are CSV separated, see example below.\n\n```sh\n$ pulumi import cloudamqp:index/webhook:Webhook webhook_queue \u003cid\u003e,\u003cinstance_id\u003e`\n```\n\n",
            "properties": {
                "concurrency": {
                    "type": "integer",
                    "description": "Max simultaneous requests to the endpoint.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n"
                },
                "queue": {
                    "type": "string",
                    "description": "A (durable) queue on your RabbitMQ instance.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time in seconds between retries for webhook\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time in seconds for webhook\n"
                },
                "vhost": {
                    "type": "string",
                    "description": "The vhost the queue resides in.\n"
                },
                "webhookUri": {
                    "type": "string",
                    "description": "A POST request will be made for each message in the queue to this endpoint.\n"
                }
            },
            "required": [
                "concurrency",
                "instanceId",
                "queue",
                "vhost",
                "webhookUri"
            ],
            "inputProperties": {
                "concurrency": {
                    "type": "integer",
                    "description": "Max simultaneous requests to the endpoint.\n"
                },
                "instanceId": {
                    "type": "integer",
                    "description": "The CloudAMQP instance ID.\n",
                    "willReplaceOnChanges": true
                },
                "queue": {
                    "type": "string",
                    "description": "A (durable) queue on your RabbitMQ instance.\n"
                },
                "sleep": {
                    "type": "integer",
                    "description": "Configurable sleep time in seconds between retries for webhook\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Configurable timeout time in seconds for webhook\n"
                },
                "vhost": {
                    "type": "string",
                    "description": "The vhost the queue resides in.\n"
                },
                "webhookUri": {
                    "type": "string",
                    "description": "A POST request will be made for each message in the queue to this endpoint.\n"
                }
            },
            "requiredInputs": [
                "concurrency",
                "instanceId",
                "queue",
                "vhost",
                "webhookUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Webhook resources.\n",
                "properties": {
                    "concurrency": {
                        "type": "integer",
                        "description": "Max simultaneous requests to the endpoint.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "queue": {
                        "type": "string",
                        "description": "A (durable) queue on your RabbitMQ instance.\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time in seconds between retries for webhook\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time in seconds for webhook\n"
                    },
                    "vhost": {
                        "type": "string",
                        "description": "The vhost the queue resides in.\n"
                    },
                    "webhookUri": {
                        "type": "string",
                        "description": "A POST request will be made for each message in the queue to this endpoint.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "cloudamqp:index/getAccount:getAccount": {
            "description": "Use this data source to retrieve basic information about all instances available for an account. Uses the included apikey in provider configuration, to determine which account to read from.\n\n",
            "outputs": {
                "description": "A collection of values returned by getAccount.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/cloudamqp:index/getAccountInstance:getAccountInstance"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instances",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getAccountVpcs:getAccountVpcs": {
            "description": "Use this data source to retrieve basic information about all standalone VPCs available for an account. Uses the included apikey in provider configuration to determine which account to read from.\n\n## Example Usage\n\nCan be used in other resources/data sources when the VPC identifier is unknown, while other attributes are known. E.g. find correct VPC using the `name` you gave your VPC. Then iterate over VPCs to find the matching one and extract the VPC identifier.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst myVpcName = \"\u003cyour VPC name\u003e\";\nconst vpcList = cloudamqp.getAccountVpcs({});\nexport const vpcId = vpcList.then(vpcList =\u003e .filter(vpc =\u003e vpc.name == myVpcName).map(vpc =\u003e (vpc))[0].id);\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nmy_vpc_name = \"\u003cyour VPC name\u003e\"\nvpc_list = cloudamqp.get_account_vpcs()\npulumi.export(\"vpcId\", [vpc for vpc in vpc_list.vpcs if vpc.name == my_vpc_name][0].id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myVpcName = \"\u003cyour VPC name\u003e\";\n\n    var vpcList = CloudAmqp.GetAccountVpcs.Invoke();\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"vpcId\"] = .Where(vpc =\u003e vpc.Name == myVpcName).Select(vpc =\u003e \n        {\n            return vpc;\n        }).ToList()[0].Id,\n    };\n});\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `id`      - The identifier for this data source. Set to `na` since there is no unique identifier.\n* `vpcs`    - An array of VPCs. Each `vpcs` block consists of the fields documented below.\n\n___\n\nThe `vpcs` block consist of\n\n* `id`          - The VPC identifier.\n* `name`        - The VPC instance name.\n* `region`      - The region the VPC is hosted in.\n* `subnet`      - The VPC subnet.\n* `tags`        - Optional tags set for the VPC.\n* `vpc_name`    - VPC name given when hosted at the cloud provider.\n\n## Dependency\n\nThis data source depends on apikey set in the provider configuration.\n",
            "outputs": {
                "description": "A collection of values returned by getAccountVpcs.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "vpcs": {
                        "items": {
                            "$ref": "#/types/cloudamqp:index/getAccountVpcsVpc:getAccountVpcsVpc"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "vpcs",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getAlarm:getAlarm": {
            "description": "Use this data source to retrieve information about default or created alarms. Either use `alarm_id` or `type` to retrieve the alarm.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst defaultCpuAlarm = cloudamqp.getAlarm({\n    instanceId: instance.id,\n    type: \"cpu\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ndefault_cpu_alarm = cloudamqp.get_alarm(instance_id=instance[\"id\"],\n    type=\"cpu\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var defaultCpuAlarm = CloudAmqp.GetAlarm.Invoke(new()\n    {\n        InstanceId = instance.Id,\n        Type = \"cpu\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.LookupAlarm(ctx, \u0026cloudamqp.LookupAlarmArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t\tType:       pulumi.StringRef(\"cpu\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetAlarmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var defaultCpuAlarm = CloudamqpFunctions.getAlarm(GetAlarmArgs.builder()\n            .instanceId(instance.id())\n            .type(\"cpu\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  defaultCpuAlarm:\n    fn::invoke:\n      function: cloudamqp:getAlarm\n      arguments:\n        instanceId: ${instance.id}\n        type: cpu\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `id`                  - The identifier for this resource.\n* `enabled`             - Enable/disable status of the alarm.\n* `value_threshold`     - The value threshold that triggers the alarm.\n* `reminder_interval`   - The reminder interval (in seconds) to resend the alarm if not resolved. Set to 0 for no reminders.\n* `time_threshold`      - The time interval (in seconds) the `value_threshold` should be active before trigger an alarm.\n* `queue_regex`         - Regular expression for which queue to check.\n* `vhost_regex`         - Regular expression for which vhost to check\n* `recipients`          - Identifier for recipient to be notified.\n* `message_type`        - Message type `(total, unacked, ready)` used by queue alarm type.\n\nSpecific attribute for `disk` alarm\n\n* `value_calculation`   - Disk value threshold calculation, `(fixed, percentage)` of disk space remaining.\n\n## Dependency\n\nThis data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n## Alarm types\n\n`cpu, memory, disk, queue, connection, flow, consumer, netsplit, server_unreachable, notice`\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAlarm.\n",
                "properties": {
                    "alarmId": {
                        "type": "integer",
                        "description": "The alarm identifier. Either use this or `type` to give `cloudamqp.Alarm` necessary information to retrieve the alarm.\n"
                    },
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The alarm type. Either use this or `alarm_id` to give `cloudamqp.Alarm` necessary information when retrieve the alarm. Supported alarm types\n"
                    },
                    "valueCalculation": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAlarm.\n",
                "properties": {
                    "alarmId": {
                        "type": "integer"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "messageType": {
                        "type": "string"
                    },
                    "queueRegex": {
                        "type": "string"
                    },
                    "recipients": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "reminderInterval": {
                        "type": "integer"
                    },
                    "timeThreshold": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "valueCalculation": {
                        "type": "string"
                    },
                    "valueThreshold": {
                        "type": "integer"
                    },
                    "vhostRegex": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "instanceId",
                    "messageType",
                    "queueRegex",
                    "recipients",
                    "reminderInterval",
                    "timeThreshold",
                    "valueThreshold",
                    "vhostRegex",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getCredentials:getCredentials": {
            "description": "Use this data source to retrieve information about the credentials of the configured user in Rabbit MQ. Information is extracted from `cloudamqp_instance.instance.url`.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst credentials = cloudamqp.getCredentials({\n    instanceId: instance.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ncredentials = cloudamqp.get_credentials(instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var credentials = CloudAmqp.GetCredentials.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.GetCredentials(ctx, \u0026cloudamqp.GetCredentialsArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetCredentialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var credentials = CloudamqpFunctions.getCredentials(GetCredentialsArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  credentials:\n    fn::invoke:\n      function: cloudamqp:getCredentials\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Attributes reference\n\nAll attributes reference are computed.\n\n* `id`          - The identifier for this data source.\n* `username`    - (Sensitive) The username for the configured user in Rabbit MQ.\n* `password`    - (Sensitive) The password used by the `username`.\n\n## Dependency\n\nThis data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCredentials.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCredentials.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "password": {
                        "secret": true,
                        "type": "string"
                    },
                    "username": {
                        "secret": true,
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "password",
                    "username",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getInstance:getInstance": {
            "description": "Use this data source to retrieve information about an already created CloudAMQP instance. In order to retrieve the correct information, the CoudAMQP instance identifier is needed.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getInstance.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstance.\n",
                "properties": {
                    "apikey": {
                        "secret": true,
                        "type": "string"
                    },
                    "backend": {
                        "type": "string"
                    },
                    "dedicated": {
                        "type": "boolean"
                    },
                    "host": {
                        "type": "string"
                    },
                    "hostInternal": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "noDefaultAlarms": {
                        "type": "boolean"
                    },
                    "nodes": {
                        "type": "integer"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "ready": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rmqVersion": {
                        "type": "string"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "url": {
                        "secret": true,
                        "type": "string"
                    },
                    "vhost": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "integer"
                    },
                    "vpcSubnet": {
                        "type": "string"
                    }
                },
                "required": [
                    "apikey",
                    "backend",
                    "dedicated",
                    "host",
                    "hostInternal",
                    "instanceId",
                    "name",
                    "noDefaultAlarms",
                    "nodes",
                    "plan",
                    "ready",
                    "region",
                    "rmqVersion",
                    "tags",
                    "url",
                    "vhost",
                    "vpcId",
                    "vpcSubnet",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getNodes:getNodes": {
            "description": "Use this data source to retrieve information about the node(s) created by CloudAMQP instance.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst nodes = cloudamqp.getNodes({\n    instanceId: instance.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nnodes = cloudamqp.get_nodes(instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodes = CloudAmqp.GetNodes.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.GetNodes(ctx, \u0026cloudamqp.GetNodesArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetNodesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var nodes = CloudamqpFunctions.getNodes(GetNodesArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  nodes:\n    fn::invoke:\n      function: cloudamqp:getNodes\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `id`    - The identifier for this resource.\n* `nodes` - An array of node information. Each `nodes` block consists of the fields documented below.\n\n___\n\nThe `nodes` block consist of\n\n* `hostname`              - External hostname assigned to the node.\n* `hostname_internal`     - Internal hostname assigned to the node.\n* `name`                  - Name of the node.\n* `running`               - Is the node running?\n* `rabbitmq_version`      - Currently configured Rabbit MQ version on the node.\n* `erlang_version`        - Currently used Erlang version on the node.\n* `hipe`                  - Enable or disable High-performance Erlang.\n* `configured`            - Is the node configured?\n* `disk_size`             - Subscription plan disk size\n* `additional_disk_size`  - Additional added disk size\n* `availability_zone`     - Availability zone the node is hosted in.\n\n***Note:*** *Total disk size = disk_size + additional_disk_size*\n\n## Dependency\n\nThis data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNodes.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNodes.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "nodes": {
                        "items": {
                            "$ref": "#/types/cloudamqp:index/getNodesNode:getNodesNode"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "nodes",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getNotification:getNotification": {
            "description": "Use this data source to retrieve information about default or created recipients. The recipient will receive notifications assigned to an alarm that has triggered. To retrieve the recipient either use `recipient_id` or `name`.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst defaultRecipient = cloudamqp.getNotification({\n    instanceId: instance.id,\n    name: \"default\",\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ndefault_recipient = cloudamqp.get_notification(instance_id=instance[\"id\"],\n    name=\"default\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var defaultRecipient = CloudAmqp.GetNotification.Invoke(new()\n    {\n        InstanceId = instance.Id,\n        Name = \"default\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.LookupNotification(ctx, \u0026cloudamqp.LookupNotificationArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t\tName:       pulumi.StringRef(\"default\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetNotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var defaultRecipient = CloudamqpFunctions.getNotification(GetNotificationArgs.builder()\n            .instanceId(instance.id())\n            .name(\"default\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  defaultRecipient:\n    fn::invoke:\n      function: cloudamqp:getNotification\n      arguments:\n        instanceId: ${instance.id}\n        name: default\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `id`    - The identifier for this resource.\n* `type`  - The type of the recipient.\n* `value` - The notification endpoint, where to send the notification.\n* `options`- Options argument (e.g. `rk` used for VictorOps routing key).\n\n## Dependency\n\nThis data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNotification.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name set for the recipient.\n"
                    },
                    "options": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "recipientId": {
                        "type": "integer",
                        "description": "The recipient identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNotification.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "recipientId": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "type",
                    "value",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getPlugins:getPlugins": {
            "description": "Use this data source to retrieve information about installed and available plugins for the CloudAMQP instance.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst plugins = cloudamqp.getPlugins({\n    instanceId: instance.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nplugins = cloudamqp.get_plugins(instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var plugins = CloudAmqp.GetPlugins.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.GetPlugins(ctx, \u0026cloudamqp.GetPluginsArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetPluginsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var plugins = CloudamqpFunctions.getPlugins(GetPluginsArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  plugins:\n    fn::invoke:\n      function: cloudamqp:getPlugins\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `id`      - The identifier for this resource.\n* `plugins` - An array of plugins. Each `plugins` block consists of the fields documented below.\n* `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information\nabout plugins. Default set to 10 seconds. *Available from v1.29.0*\n* `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting\ninformation about plugins. Default set to 1800 seconds. *Available from v1.29.0*\n\n___\n\nThe `plugins` block consist of\n\n* `name`        - The type of the recipient.\n* `version`     - Rabbit MQ version that the plugins are shipped with.\n* `description` - Description of what the plugin does.\n* `enabled`     - Enable or disable information for the plugin.\n\n## Dependency\n\nThis data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPlugins.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n"
                    },
                    "sleep": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPlugins.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "plugins": {
                        "items": {
                            "$ref": "#/types/cloudamqp:index/getPluginsPlugin:getPluginsPlugin"
                        },
                        "type": "array"
                    },
                    "sleep": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "required": [
                    "instanceId",
                    "plugins",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getPluginsCommunity:getPluginsCommunity": {
            "description": "Use this data source to retrieve information about available community plugins for the CloudAMQP instance.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst communitPlugins = cloudamqp.getPluginsCommunity({\n    instanceId: instance.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\ncommunit_plugins = cloudamqp.get_plugins_community(instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var communitPlugins = CloudAmqp.GetPluginsCommunity.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.GetPluginsCommunity(ctx, \u0026cloudamqp.GetPluginsCommunityArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetPluginsCommunityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var communitPlugins = CloudamqpFunctions.getPluginsCommunity(GetPluginsCommunityArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  communitPlugins:\n    fn::invoke:\n      function: cloudamqp:getPluginsCommunity\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `id`      - The identifier for this resource.\n* `plugins` - An array of community plugins. Each `plugins` block consists of the fields documented below.\n* `sleep` - (Optional) Configurable sleep time (seconds) for retries when requesting information\nabout community plugins. Default set to 10 seconds. *Available from v1.29.0*\n* `timeout` - (Optional) - Configurable timeout time (seconds) for retries when requesting\ninformation about community plugins. Default set to 1800 seconds. *Available from v1.29.0*\n\n___\n\nThe `plugins` block consists of\n\n* `name`        - The type of the recipient.\n* `require`     - Min. required Rabbit MQ version to be used.\n* `description` - Description of what the plugin does.\n\n## Dependency\n\nThis data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPluginsCommunity.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n"
                    },
                    "sleep": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPluginsCommunity.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "plugins": {
                        "items": {
                            "$ref": "#/types/cloudamqp:index/getPluginsCommunityPlugin:getPluginsCommunityPlugin"
                        },
                        "type": "array"
                    },
                    "sleep": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "required": [
                    "instanceId",
                    "plugins",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getUpgradableVersions:getUpgradableVersions": {
            "description": "Use this data source to retrieve information about possible upgradable versions for RabbitMQ and Erlang.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst versions = cloudamqp.getUpgradableVersions({\n    instanceId: instance.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nversions = cloudamqp.get_upgradable_versions(instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var versions = CloudAmqp.GetUpgradableVersions.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.GetUpgradableVersions(ctx, \u0026cloudamqp.GetUpgradableVersionsArgs{\n\t\t\tInstanceId: instance.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetUpgradableVersionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var versions = CloudamqpFunctions.getUpgradableVersions(GetUpgradableVersionsArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  versions:\n    fn::invoke:\n      function: cloudamqp:getUpgradableVersions\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `new_rabbitmq_version`  - Possible upgradable version for RabbitMQ.\n* `new_erlang_version`    - Possible upgradable version for Erlang.\n\n## Dependency\n\nThis data source depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUpgradableVersions.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUpgradableVersions.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "newErlangVersion": {
                        "type": "string"
                    },
                    "newRabbitmqVersion": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "newErlangVersion",
                    "newRabbitmqVersion",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getVpcGcpInfo:getVpcGcpInfo": {
            "description": "Use this data source to retrieve information about VPC for a CloudAMQP instance hosted in GCP.\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eAWS VPC peering pre v1.16.0\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpcInfo = cloudamqp.getVpcGcpInfo({\n    instanceId: instance.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc_info = cloudamqp.get_vpc_gcp_info(instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpcInfo = CloudAmqp.GetVpcGcpInfo.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.GetVpcGcpInfo(ctx, \u0026cloudamqp.GetVpcGcpInfoArgs{\n\t\t\tInstanceId: pulumi.IntRef(instance.Id),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  vpcInfo:\n    fn::invoke:\n      function: cloudamqp:getVpcGcpInfo\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eAWS VPC peering post v1.16.0 (Managed VPC)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpcInfo = cloudamqp.getVpcGcpInfo({\n    vpcId: vpc.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc_info = cloudamqp.get_vpc_gcp_info(vpc_id=vpc[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpcInfo = CloudAmqp.GetVpcGcpInfo.Invoke(new()\n    {\n        VpcId = vpc.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.GetVpcGcpInfo(ctx, \u0026cloudamqp.GetVpcGcpInfoArgs{\n\t\t\tVpcId: pulumi.StringRef(vpc.Id),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetVpcGcpInfoArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var vpcInfo = CloudamqpFunctions.getVpcGcpInfo(GetVpcGcpInfoArgs.builder()\n            .vpcId(vpc.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  vpcInfo:\n    fn::invoke:\n      function: cloudamqp:getVpcGcpInfo\n      arguments:\n        vpcId: ${vpc.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003c/details\u003e\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `id`                  - The identifier for this resource.\n* `name`                - The name of the VPC.\n* `vpc_subnet`          - Dedicated VPC subnet.\n* `network`             - VPC network uri.\n\n## Dependency\n\n*Pre v1.16.0*\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n*Post v1.16.0*\nThis resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVpcGcpInfo.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n\n***Deprecated: Changed from required to optional in v1.16.0 will be removed in next major version (v2.0)***\n"
                    },
                    "sleep": {
                        "type": "integer",
                        "description": "Configurable sleep time (seconds) between retries when reading peering. Default set to 10 seconds.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Configurable timeout time (seconds) before retries times out. Default set to 1800 seconds.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The managed VPC identifier.\n\n***Note: Added as optional in version v1.16.0 and will be required in next major version (v2.0)***\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcGcpInfo.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "sleep": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcSubnet": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "network",
                    "vpcSubnet",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudamqp:index/getVpcInfo:getVpcInfo": {
            "description": "Use this data source to retrieve information about VPC for a CloudAMQP instance.\n\nOnly available for CloudAMQP instances hosted in AWS.\n\n## Example Usage\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eAWS VPC peering pre v1.16.0\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpcInfo = cloudamqp.getVpcInfo({\n    instanceId: instance.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc_info = cloudamqp.get_vpc_info(instance_id=instance[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpcInfo = CloudAmqp.GetVpcInfo.Invoke(new()\n    {\n        InstanceId = instance.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.GetVpcInfo(ctx, \u0026cloudamqp.GetVpcInfoArgs{\n\t\t\tInstanceId: pulumi.IntRef(instance.Id),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()\n            .instanceId(instance.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  vpcInfo:\n    fn::invoke:\n      function: cloudamqp:getVpcInfo\n      arguments:\n        instanceId: ${instance.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\u003c/details\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003e\n    \u003cb\u003e\n      \u003ci\u003eAWS VPC peering post v1.16.0 (Managed VPC)\u003c/i\u003e\n    \u003c/b\u003e\n  \u003c/summary\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudamqp from \"@pulumi/cloudamqp\";\n\nconst vpcInfo = cloudamqp.getVpcInfo({\n    vpcId: vpc.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_cloudamqp as cloudamqp\n\nvpc_info = cloudamqp.get_vpc_info(vpc_id=vpc[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing CloudAmqp = Pulumi.CloudAmqp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vpcInfo = CloudAmqp.GetVpcInfo.Invoke(new()\n    {\n        VpcId = vpc.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-cloudamqp/sdk/v3/go/cloudamqp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudamqp.GetVpcInfo(ctx, \u0026cloudamqp.GetVpcInfoArgs{\n\t\t\tVpcId: pulumi.StringRef(vpc.Id),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.cloudamqp.CloudamqpFunctions;\nimport com.pulumi.cloudamqp.inputs.GetVpcInfoArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var vpcInfo = CloudamqpFunctions.getVpcInfo(GetVpcInfoArgs.builder()\n            .vpcId(vpc.id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  vpcInfo:\n    fn::invoke:\n      function: cloudamqp:getVpcInfo\n      arguments:\n        vpcId: ${vpc.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\u003c/details\u003e\n\n\n## Attributes reference\n\nAll attributes reference are computed\n\n* `id`                  - The identifier for this resource.\n* `name`                - The name of the CloudAMQP instance.\n* `vpc_subnet`          - Dedicated VPC subnet.\n* `owner_id`            - AWS account identifier.\n* `security_group_id`   - AWS security group identifier.\n\n## Dependency\n\n*Pre v1.16.0*\nThis resource depends on CloudAMQP instance identifier, `cloudamqp_instance.instance.id`.\n\n*Post v1.16.0*\nThis resource depends on CloudAMQP managed VPC identifier, `cloudamqp_vpc.vpc.id` or instance identifier, `cloudamqp_instance.instance.id`.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVpcInfo.\n",
                "properties": {
                    "instanceId": {
                        "type": "integer",
                        "description": "The CloudAMQP instance identifier.\n\n***Deprecated: Changed from required to optional in v1.16.0 will be removed in next major version (v2.0)***\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The managed VPC identifier.\n\n***Note: Added as optional in version v1.16.0 and will be required in next major version (v2.0)***\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcInfo.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcSubnet": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "ownerId",
                    "securityGroupId",
                    "vpcSubnet",
                    "id"
                ],
                "type": "object"
            }
        }
    }
}